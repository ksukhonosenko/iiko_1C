Перем Спис,гПутьОбъекта_КомпонентаV7plus,тзз;
Перем тз,Контр,Ном,Мат,СписокНакладных,нн,скл,СтрокаСправочника,СтрокаДокумента,СтрокаДБФ,ВыбФайл,НомерНомера,НомерДаты,НомерКонтра,НомерСклада,Упрощенка;
Перем тзз2,тз2,тз8,тз1,тз3,НачИменаКолонок1,НачИменаКолонок2,НачИменаКолонок8,НачИменаКолонок3,УмныеИменаКолонок1,УмныеИменаКолонок2,УмныеИменаКолонок8,УмныеИменаКолонок3;
Перем тз6,НачИменаКолонок6,УмныеИменаКолонок6,НачИменаКолонок,УмныеИменаКолонок,тз7,тз9,НачИменаКолонок7,УмныеИменаКолонок7,НачИменаКолонок9,УмныеИменаКолонок9,СтарыйВариант,Юрлицо;
Перем НастройкаКонтр, Бугалтерия;
		
Функция УдалитьПробелы(Стрр)
    стр2="";  
    Для ии=1  по СтрДлина(Стрр) цикл
        Символ=Сред(Стрр,ии,1);
        Если Символ<>" " Тогда
            Стр2=Стр2+Символ;
        КонецЕсли;        
    КонецЦикла;    
    Возврат Число(Стр2);
КонецФункции //  

Функция УдалитьПробелыСТР(Стрр)
    стр2="";  
    Для ии=1  по СтрДлина(Стрр) цикл
        Символ=Сред(Стрр,ии,1);
        Если (Символ<>" ")и(Символ<>" ") Тогда
            Стр2=Стр2+Символ;
        КонецЕсли;        
    КонецЦикла;    
    Возврат Стр2;
КонецФункции //

Функция НайтиСкладСФильтром(название, игнор)
	Стрр="";
    СоответствиеСкладов.НайтиЗначение(название,стрр,"Наимиико");
	игнор=0;
	Если СоответствиеСкладов.ПолучитьЗначение(стрр,5)=1 Тогда
		игнор=1;
	КонецЕсли;
    Возврат СоответствиеСкладов.ПолучитьЗначение(стрр,4);
КонецФункции

Функция НайтиПервыйСуществующийФайл(СписокВозможныхМест)
    Для Сч = 1 По СписокВозможныхМест.РазмерСписка() Цикл
        ПолноеИмя    =    СписокВозможныхМест.ПолучитьЗначение(Сч);
        Если Фс.СуществуетФайл(ПолноеИмя) = 1 Тогда    Возврат(ПолноеИмя)    КонецЕсли;
    КонецЦикла;
    Возврат("");                              
КонецФункции        //    НайтиПервыйСуществующийФайл()    

Процедура УстановитьСтрокуНом(ннн)
    СоответствиеНоменклатуры.УстановитьЗначение(нн,"Код1с",ннн.ТекущийЭлемент().код);
    СоответствиеНоменклатуры.УстановитьЗначение(нн,"Наим1с",ннн.ТекущийЭлемент().Наименование);  
    СоответствиеНоменклатуры.УстановитьЗначение(нн,"Тип","Товар");  
    СоответствиеНоменклатуры.УстановитьЗначение(нн,7,ннн.ТекущийЭлемент());   
КонецПроцедуры //УстановитьСтрокуНом()  

Процедура УстановитьСтрокуМат(ннн)
    СоответствиеНоменклатуры.УстановитьЗначение(нн,"Код1с",ннн.ТекущийЭлемент().код);
    СоответствиеНоменклатуры.УстановитьЗначение(нн,"Наим1с",ннн.ТекущийЭлемент().Наименование);  
    СоответствиеНоменклатуры.УстановитьЗначение(нн,"Тип","Материал");  
    СоответствиеНоменклатуры.УстановитьЗначение(нн,7,ннн.ТекущийЭлемент());   
КонецПроцедуры //()       


Процедура УстановитьСтрокуСкл()
    СоответствиеСкладов.УстановитьЗначение(нн,"Наим1с",Скл.ТекущийЭлемент().Наименование);  
    СоответствиеСкладов.УстановитьЗначение(нн,4,Скл.ТекущийЭлемент());   
КонецПроцедуры //()

//_____________________________________________________________________________
Процедура УстановитьСтрокуКонтров(Элем)
    СоответствиеКотрагентов.УстановитьЗначение(нн,"ИНН1с",Элем.ИНН);
    СоответствиеКотрагентов.УстановитьЗначение(нн,"Код1с",Элем.Код);
    СоответствиеКотрагентов.УстановитьЗначение(нн,"Наим1с",Элем.Наименование);   
    СоответствиеКотрагентов.УстановитьЗначение(нн,8,Элем);   
КонецПроцедуры //УстановитьСтроку()
//*******************************************   
               
Процедура ФильтрПоЮрЛицам(ТабЗнач, юл)
 	ТабЗнач.выбратьстроки();
	Пока ТабЗнач.ПолучитьСтроку()=1 Цикл
		Пока (СокрЛП(ТабЗнач.ЮЛнаименование)<>юл) и (ТабЗнач.НомерСтроки<>0) Цикл
			ТабЗнач.УдалитьСтроку(); //следующая строка стала текущей
		КонецЦикла;
	КонецЦикла;     
КонецПроцедуры //ФильтрПоЮрЛицам()

Процедура ФильтрПоЮрЛицамПеремещение(ТабЗнач, юл)
 	ТабЗнач.выбратьстроки();
	Пока ТабЗнач.ПолучитьСтроку()=1 Цикл
		Пока (СокрЛП(ТабЗнач.ЮЛотправительнаименование)<>юл) и (ТабЗнач.НомерСтроки<>0) Цикл
			ТабЗнач.УдалитьСтроку(); //следующая строка стала текущей
		КонецЦикла;
	КонецЦикла;     
КонецПроцедуры //ФильтрПоЮрЛицамПеремещение()

Функция ВыбратьЮрлицо() 
    Если ОтборПоЮрлицу=0 Тогда
        Возврат "";
    КонецЕсли;       
    СписокЮрлиц=СоздатьОбъект("СписокЗначений");
    Если ЗагрузитьПриходнуюНакладную=1 Тогда
        Тз.ВыбратьСтроки();
        Пока Тз.ПолучитьСтроку()=1 Цикл  
            Если СписокЮрлиц.НайтиЗначение(тз.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз.ЮЛнаименование); 
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;
    Если ЗагрузитьВнутренееПеремещение=1 Тогда
        Тз2.ВыбратьСтроки();
        Пока Тз2.ПолучитьСтроку()=1 Цикл   
            Если СписокЮрлиц.НайтиЗначение(тз2.ЮЛотправительнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз2.ЮЛотправительнаименование);   
            КонецЕсли;   
        КонецЦикла;
    КонецЕсли;
    Если ЗагрузитьРасходнуюНакладную=1 Тогда
        Тз8.ВыбратьСтроки();
        Пока Тз8.ПолучитьСтроку()=1 Цикл  
            Если СписокЮрлиц.НайтиЗначение(тз8.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз8.ЮЛнаименование);  
            КонецЕсли;   
        КонецЦикла;
    КонецЕсли;
    Если ЗагрузитьАктПриготовления=1 Тогда
        Тз3.ВыбратьСтроки();
        Пока Тз3.ПолучитьСтроку()=1 Цикл  
            Если СписокЮрлиц.НайтиЗначение(тз3.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз3.ЮЛнаименование); 
            КонецЕсли;   
        КонецЦикла;
    КонецЕсли;
    Если ЗагрузитьАктРеализации=1 Тогда
        Тз1.ВыбратьСтроки();
        Пока Тз1.ПолучитьСтроку()=1 Цикл 
            Если СписокЮрлиц.НайтиЗначение(тз1.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз1.ЮЛнаименование);     
            КонецЕсли;
            
        КонецЦикла;
    КонецЕсли;
    Если ЗагрузитьАктСписания=1 Тогда
        Тз6.ВыбратьСтроки();
        Пока Тз6.ПолучитьСтроку()=1 Цикл  
            Если СписокЮрлиц.НайтиЗначение(тз6.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз6.ЮЛнаименование);  
            КонецЕсли;   
        КонецЦикла;
    КонецЕсли;
    Если ЗагрузитьИнвентаризацию=1 Тогда
        Тз7.ВыбратьСтроки();
        Пока Тз7.ПолучитьСтроку()=1 Цикл    
            Если СписокЮрлиц.НайтиЗначение(тз7.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз7.ЮЛнаименование);  
            КонецЕсли;   
        КонецЦикла;
	КонецЕсли;
	Если ЗагрузитьВозвратнуюНакладную=1 Тогда
		Тз9.ВыбратьСтроки();
        Пока Тз9.ПолучитьСтроку()=1 Цикл    
            Если СписокЮрлиц.НайтиЗначение(тз9.ЮЛнаименование)=0 Тогда
                СписокЮрлиц.ДобавитьЗначение(тз9.ЮЛнаименование);  
            КонецЕсли;   
        КонецЦикла;
	КонецЕсли;
	
    Если СписокЮрлиц.РазмерСписка()>1 Тогда
        Стрр="";
        Пока СписокЮрлиц.ВыбратьЗначение(Стрр,"Выберите Юр.Лицо!",,0)<>1 Цикл
		КонецЦикла;   
		юл=СокрЛП(Стрр);
		Если ЗагрузитьВнутренееПеремещение=1 Тогда
			ФильтрПоЮрЛицамПеремещение(Тз2, юл);  
		Иначе               
			Если ЗагрузитьПриходнуюНакладную=1 Тогда
				ФильтрПоЮрЛицам(Тз, юл);   
			КонецЕсли; 
			Если ЗагрузитьАктРеализации=1 Тогда
				ФильтрПоЮрЛицам(Тз1, юл);   
			КонецЕсли;             
			Если ЗагрузитьАктПриготовления=1 Тогда
				ФильтрПоЮрЛицам(Тз3, юл);   
			КонецЕсли;
			Если ЗагрузитьРасходнуюНакладную=1 Тогда
				ФильтрПоЮрЛицам(Тз8, юл);   
			КонецЕсли;             
			Если ЗагрузитьАктСписания=1 Тогда
				ФильтрПоЮрЛицам(Тз6, юл);   
			КонецЕсли;             
			Если ЗагрузитьИнвентаризацию=1 Тогда
				ФильтрПоЮрЛицам(Тз7, юл);   
			КонецЕсли;  
			Если ЗагрузитьВозвратнуюНакладную=1 Тогда
				ФильтрПоЮрЛицам(Тз9, юл);   
			КонецЕсли;  
	    КонецЕсли;
    Иначе
        Стрр="";
	КонецЕсли;            
           
	
    Возврат СокрЛП(Стрр); 
КонецФункции   
                 

Процедура ОбработкаВидимости()
    Коэф=?(Форма.Закладки.ТекущаяСтрока()=1,1,0);
	ЗагружатьЧерезСОМ = ?(СпособЗагрузки=2,1,0);
	ЗагружатьЧерезФайл = ?(СпособЗагрузки=1,1,0);
    Форма.ВыбКаталог.Видимость(ЗагружатьЧерезФайл*коэф);
    Форма.ПутьКсерверу.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.тхт1.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.ЛогинТекст.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.Логин.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.ПарольТекст.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.Пароль.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.ПортТекст.Видимость(ЗагружатьЧерезСОМ*коэф);
    Форма.Порт.Видимость(ЗагружатьЧерезСОМ*коэф);   
	Если Упрощенка=0 тогда
		Форма.Настройки.Видимость(0);
	КонецЕсли;	
КонецПроцедуры //ОбработкаВидимости    

Процедура ПриКликеСпособЗагрузки()
    ОбработкаВидимости();
КонецПроцедуры //ПриКлике   

Процедура ОчиститьТаблицы()
    СоответствиеКотрагентов.Очистить();  
    СоответствиеНоменклатуры.Очистить();  
    СоответствиеСкладов.Очистить();    
    СоответвиеГруппНом.Очистить();   
	Документы.Очистить();
    Для ии=2 по Форма.Закладки.РазмерСписка() Цикл 
        Форма.Закладки.УдалитьЗначение(2); 
    КонецЦикла;    
    Форма.Закладки.ТекущаяСтрока(1); 
    Форма.ИспользоватьСлой("Основной,Общий", 2); 
    ПриКликеСпособЗагрузки();
КонецПроцедуры    

функция ДобитьПробелы(стр,числ)
    Пока стрДлина(стр)<числ цикл
        стр="0"+стр;
    КонецЦикла;    
    Возврат стр;
КонецФункции

функция ТруКод(стр)   
    Если Упрощенка=1 тогда
        Возврат ДобитьПробелы(СокрЛП(стр),10);                   
    Иначе      
        Возврат ДобитьПробелы(СокрЛП(стр),8);                   
    КонецЕсли;
КонецФункции

функция ТруКодн(стр)
    Если Упрощенка=1 тогда
        Возврат ДобитьПробелы(СокрЛП(стр),10);                   
    Иначе      
        Возврат ДобитьПробелы(СокрЛП(стр),9);                   
    КонецЕсли;
КонецФункции


функция НомерНакладной2(стр,Преф,НазваниеДокумента,датаДок) 
	Если НомерИз1С=1 Тогда 
		возврат стр;
	КонецЕсли;
	Название=Прав(НазваниеДокумента,СтрДлина(НазваниеДокумента)-9);      
	Если Метаданные.Документ(Название).ТипНомера="Числовой" Тогда
		Возврат ДобитьПробелы(СокрЛП(стр),Метаданные.Документ(Название).ДлинаНомера);	
	КонецЕсли;
	длина=Метаданные.Документ(Название).ДлинаНомера;
	стр=СокрЛП(стр);
	ОбщийПрефикс=УдалитьПробелыСТР(СтартПрефикс);
	Если ДобавлятьТипДокумента=1 тогда
		ОбщийПрефикс=ОбщийПрефикс+Преф;
	КонецЕсли;
	длинаПрефикса=СтрДлина(ОбщийПрефикс);
	Если СтрДлина(стр)>длина-длинаПрефикса Тогда 
		Сообщить("Документ "+Название+" №"+стр+" от "+датаДок+" не может быть записан, т.к. длина его номера превышает допустимую длину: "+(длина-длинаПрефикса));
		Возврат "";
	КонецЕсли;                      
	
    Возврат ОбщийПрефикс+ДобитьПробелы(стр,Метаданные.Документ(Название).ДлинаНомера-длинаПрефикса); 
КонецФункции 

//_____________________________________________________________________________
Процедура НайтиКонтров()
    СоответствиеКотрагентов.ВыбратьСТроки();                         
    нн=0;
    Пока СоответствиеКотрагентов.ПолучитьСТроку()=1 Цикл
        нн=нн+1;
        Если ПустоеЗначение(СоответствиеКотрагентов.ПолучитьЗначение(нн,8))=1 Тогда
            Если ПустоеЗначение(СоответствиеКотрагентов.ИннИико)=0 Тогда
                Если  Контр.НайтиПоРеквизиту("ИНН",СокрЛП(СоответствиеКотрагентов.ИннИико),1)=1 Тогда 
                    Если Контр.ЭтоГруппа()=0 Тогда
                        СоответствиеКотрагентов.УстановитьЗначение(нн,8,Контр.текущийЭлемент()); 
                    КонецЕсли;
                КонецЕсли;    
            ИначеЕсли Контр.НайтиПоНаименованию(СоответствиеКотрагентов.НаимИико,0,1)=1 тогда    
                Если Контр.ЭтоГруппа()=0 Тогда
                    СоответствиеКотрагентов.УстановитьЗначение(нн,8,Контр.текущийЭлемент()); 
                КонецЕсли;    
            ИначеЕсли Контр.НайтиПоКоду(ТруКод(СоответствиеКотрагентов.КодИико),0)=1 тогда
                Если Контр.ЭтоГруппа()=0 Тогда
                    СоответствиеКотрагентов.УстановитьЗначение(нн,8,Контр.текущийЭлемент()); 
                КонецЕсли;    
            КонецЕсли; 
            Если ПустоеЗначение(СоответствиеКотрагентов.ПолучитьЗначение(нн,8))=0 Тогда
                 УстановитьСтрокуКонтров(СоответствиеКотрагентов.ПолучитьЗначение(нн,8));
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры //НайтиКонтров  

Процедура НайтиНомен()
    СоответствиеНоменклатуры.ВыбратьСТроки();                         
    нн=0;
    Пока СоответствиеНоменклатуры.ПолучитьСТроку()=1 Цикл
        нн=нн+1; 
        Если (СоответствиеНоменклатуры.Тип="Товар") или (Упрощенка=1) Тогда
            Если ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(нн,7))=1 Тогда
                Если ном.НайтиПоНаименованию(СокрЛП(СоответствиеНоменклатуры.НаимИико),0,1)=1 тогда    
                    Если ном.ЭтоГруппа()=0 Тогда
                        СоответствиеНоменклатуры.УстановитьЗначение(нн,7,ном.текущийЭлемент()); 
                    КонецЕсли;    
                ИначеЕсли ном.НайтиПоКоду(ТруКодн(СоответствиеНоменклатуры.КодИико),0)=1 тогда
                    Если ном.ЭтоГруппа()=0 Тогда
                        СоответствиеНоменклатуры.УстановитьЗначение(нн,7,ном.текущийЭлемент()); 
                    КонецЕсли;    
                КонецЕсли; 
                Если ПустоеЗначение(ном.текущийЭлемент())=0 Тогда
                    УстановитьСтрокуНом(ном.текущийЭлемент());
                КонецЕсли;
            КонецЕсли;
        Иначе
            Если ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(нн,7))=1 Тогда
                Если мат.НайтиПоНаименованию(СокрЛП(СоответствиеНоменклатуры.НаимИико),0,1)=1 тогда    
                    Если мат.ЭтоГруппа()=0 Тогда
                        СоответствиеНоменклатуры.УстановитьЗначение(нн,7,мат.текущийЭлемент()); 
                    КонецЕсли;    
                ИначеЕсли мат.НайтиПоКоду(ТруКодн(СоответствиеНоменклатуры.КодИико),0)=1 тогда
                    Если мат.ЭтоГруппа()=0 Тогда
                        СоответствиеНоменклатуры.УстановитьЗначение(нн,7,мат.текущийЭлемент()); 
                    КонецЕсли;    
                КонецЕсли; 
                Если ПустоеЗначение(мат.текущийЭлемент())=0 Тогда
                    УстановитьСтрокуМат(мат.текущийЭлемент());
                КонецЕсли;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры //НайтиКонтров

//_____________________________________________________________________________
Процедура СоздатьКонтров() 
    СоответствиеКотрагентов.ВыбратьСтроки();       
    нн=0;
    Пока СоответствиеКотрагентов.ПолучитьСтроку()=1 Цикл
        нн=нн+1;
        Если ПустоеЗначение(СоответствиеКотрагентов.ПолучитьЗначение(нн,8))=1 тогда
            Контр.Новый();    
            Контр.Наименование=СоответствиеКотрагентов.Наимиико;
            Контр.ВидКонтрагента=Перечисление.ВидыКонтрагентов.Организация;        
            кккккк=СоздатьОбъект("Справочник.Контрагенты");
            Если кккккк.найтиПоКоду(ТруКод(СоответствиеКотрагентов.КодИИко))=0 Тогда
                Контр.Код=ТруКод(СоответствиеКотрагентов.КодИИко); 
            Иначе
                Контр.УстановитьНовыйКод();
            КонецЕсли;
            Контр.Инн=СоответствиеКотрагентов.ИннИИко;  
            Контр.Записать();   
            СпрДог = СоздатьОбъект("Справочник.Договоры");
            СпрДог.ИспользоватьВладельца(Контр.ТекущийЭлемент());
            СпрДог.Новый();
            СпрДог.Наименование = "Основной договор";
            СпрДог.ВидДоговора  = глЗначениеПоУмолчанию("ОсновнойВидДоговоров");
            СпрДог.ОплатаДоговора = 1;
            Попытка
                СпрДог.АвтоОбработкаНДС = ?(Константа.АвтоКнигаПокупокПродаж = Да, 1, 0);
            Исключение
            КонецПопытки;
            СпрДог.Записать();
            Контр.ОсновнойДоговор = СпрДог.ТекущийЭлемент();
            Контр.Записать();         
            СоответствиеКотрагентов.УстановитьЗначение(нн,8,Контр.текущийЭлемент()); 
            УстановитьСтрокуКонтров(СоответствиеКотрагентов.ПолучитьЗначение(нн,8));
        КонецЕсли;
    КонецЦикла;    
КонецПроцедуры //СоздатьКонтров    
   
Функция ПроверитьТаблицу(тзз)
    СтрокаСвертки=""+НомерНомера+","+НомерДаты+","+НомерСклада+","+НомерКонтра;
    тзз.Сортировать(СтрокаСвертки);    
    тззз=СоздатьОбъект("ТаблицаЗначений");
    тзз.Выгрузить(тззз);                    
    тзз.Свернуть(СтрокаСвертки,"");
    тзз.ВыбратьСтроки();
    СтарыйНомер="";     
    нн=0;
    Пока тзз.ПолучитьСТроку()=1 Цикл
        нн=нн+1;    
        номерНак=тзз.ПолучитьЗначение(нн,НомерНомера);
        Если номерНак=СтарыйНомер Тогда  
            Сообщить("Накладная № "+НомерНак+" от "+тзз.ПолучитьЗначение(нн,НомерДаты)+" проведена на 2 или более складов!!!","!");
        Иначе
             СтарыйНомер=номерНак;
        КонецЕсли;
    КонецЦикла; 
    Возврат тззз;
КонецФункции    

Процедура СоздатьНомен() 
    СоответствиеНоменклатуры.ВыбратьСтроки(); 
    нн=0;
    Пока СоответствиеНоменклатуры.ПолучитьСтроку()=1 Цикл
        нн=нн+1;       
        Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(нн,"Тип")); 
        Если ПустоеЗначение(Тип)=1 Тогда
            Сообщить("Заполните тип номенклатуры!!!");  
            Возврат;
		КонецЕсли; 
		ТипИсх=Тип;
        Если Упрощенка=1 Тогда
            Тип="Товар";
        КонецЕсли;
        Если Тип="Товар" Тогда
            СтрокаСправочника="Справочник.Номенклатура";
        Иначе
            СтрокаСправочника="Справочник.Материалы";
        КонецЕсли;  
        Если ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(нн,7))=1 Тогда
            Ном=СоздатьОбъект(СтрокаСправочника); 
            Ном.ИспользоватьДату(ТекущаяДата());
            Ном.Новый();
            Ном.Наименование=СоответствиеНоменклатуры.Наимиико;  
            ТруКодном=ТруКодн(СоответствиеНоменклатуры.КодИИко);
            ннном=СоздатьОбъект(СтрокаСправочника); 
            Если ннном.НайтиПоКоду(ТруКодном,0)=0 Тогда
                Ном.Код=ТруКодном;   
            Иначе
                Ном.УстановитьНовыйКод();
			КонецЕсли;
			Ном.ЕдиницаИзмерения = глЗначениеПоУмолчанию("ОсновнаяЕдиницаИзмерения");
            Если Тип="Товар" Тогда
                Ном.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар;
                Если Упрощенка=0 Тогда
					Если Бугалтерия=1 Тогда
                    	Ном.ТипТовара = Перечисление.ТипыТоваров.Собственный;
					Иначе     
						//Ном.ТипТовара = Перечисление.ТипыТоваров.ПокупныеИзделия;	
					КонецЕсли;	
				КонецЕсли;                                               
				Если (Упрощенка=1) и (ТипИсх<>"Товар") Тогда
					Ном.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Материал;
				КонецЕсли;
                Ном.СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
                Ном.СтавкаНП = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП");
				Если Бугалтерия=0 Тогда
					Ном.СтранаПроисхождения = 1;          
                ИначеЕсли Упрощенка=0 Тогда    
					Ном.СтранаПроисхожд = 1;          
                иначе    
                    Ном.СтранаПроисхождения = 1;          
                КонецЕсли; 
                Ном.Записать();     
                УстановитьСтрокуНом(Ном.ТекущийЭлемент());
			Иначе          
				Если Бугалтерия=0 Тогда
					Ном.ВидМатериала=Перечисление.ВидыМатериалов.Сырье; 
					Ном.СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
                	Ном.СтавкаНП = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП");
				Иначе
                	Ном.СубСчет10 = СчетПоКоду("10.1");
				КонецЕсли;
                Ном.Записать();     
                УстановитьСтрокуМат(Ном.ТекущийЭлемент());
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;    
КонецПроцедуры //СоздатьКонтров
                                    
Процедура СоздатьГрупп()
    СоответвиеГруппНом.ВыбратьСтроки(); 
    нн=0;
    Пока СоответвиеГруппНом.ПолучитьСтроку()=1 Цикл
        нн=нн+1;       
        Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(нн,"Тип")); 
        Если ПустоеЗначение(Тип)=1 Тогда
            Сообщить("Заполните тип номенклатуры!!!");  
            Возврат;
        КонецЕсли;
        Если Тип="Товар" Тогда
            СтрокаСправочника="Справочник.Номенклатура";
        Иначе
            СтрокаСправочника="Справочник.Материалы";
        КонецЕсли;
        Если ПустоеЗначение(СоответвиеГруппНом.Наим1с)=1 Тогда
            Ном=СоздатьОбъект(СтрокаСправочника); 
            Ном.ИспользоватьДату(ТекущаяДата());
            Ном.Новый();
            Ном.Наименование=СоответвиеГруппНом.СтавкаНДС;  
            ннном=СоздатьОбъект(СтрокаСправочника); 
            Ном.УстановитьНовыйКод();
            Ном.ЕдиницаИзмерения = глЗначениеПоУмолчанию("ОсновнаяЕдиницаИзмерения");
            Если Тип="Товар" Тогда
                Ном.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар;
                Если Упрощенка=0 Тогда
                    Ном.ТипТовара = Перечисление.ТипыТоваров.Собственный;
                КонецЕсли;
                Ном.СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
                Ном.СтавкаНП = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП");
                Если Упрощенка=0 Тогда
                    Ном.СтранаПроисхожд = 1;          
                иначе    
                    Ном.СтранаПроисхождения = 1;          
                КонецЕсли; 
                Ном.Записать();     
                СоответвиеГруппНом.УстановитьЗначение(нн,"Наим1с",Ном.ТекущийЭлемент());  
                СоответвиеГруппНом.УстановитьЗначение(нн,"Тип","Товар");  
            Иначе
                Ном.СубСчет10 = СчетПоКоду("10.1");
                Ном.Записать();     
                СоответвиеГруппНом.УстановитьЗначение(нн,"Наим1с",Ном.ТекущийЭлемент());  
                СоответвиеГруппНом.УстановитьЗначение(нн,"Тип","Материал");  
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;    
КонецПроцедуры //
                       
Процедура НайтиСклад()
    СоответствиеСкладов.ВыбратьСТроки();                         
    нн=0;
    Пока СоответствиеСкладов.ПолучитьСТроку()=1 Цикл
        нн=нн+1;
        Если ПустоеЗначение(СоответствиеСкладов.ПолучитьЗначение(нн,4))=1 Тогда
            Если Скл.НайтиПоНаименованию(СоответствиеСкладов.НаимИико,0,1)=1 тогда    
				Если Скл.ЭтоГруппа()=0 Тогда
                	СоответствиеСкладов.УстановитьЗначение(нн,4,Скл.ТекущийЭлемент()); 
				КонецЕсли;    
            //ИначеЕсли Скл.НайтиПоКоду(ТруКод(СоответствиеСкладов.КодИико),0)=1 тогда
            //    Если Контр.ЭтоГруппа()=0 Тогда
            //        СоответствиеСкладов.УстановитьЗначение(нн,4,Скл.ТекущийЭлемент()); 
            //    КонецЕсли;    
            КонецЕсли; 
            Если ПустоеЗначение(СоответствиеСкладов.ПолучитьЗначение(нн,4))=0 Тогда
                 УстановитьСтрокуСкл();
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры //НайтиСклад 

Процедура СоздатьСклад() 
    СоответствиеСкладов.ВыбратьСтроки();       
    нн=0;
    Пока СоответствиеСкладов.ПолучитьСтроку()=1 Цикл
        нн=нн+1;
        Если ПустоеЗначение(СоответствиеСкладов.ПолучитьЗначение(нн,4))=1 Тогда
            Скл=СоздатьОбъект("Справочник.МестаХранения"); 
            Скл.Новый(); 
            Скл.Наименование=СоответствиеСкладов.НаимИИКО;  
			Если Бугалтерия=1 Тогда
            	Скл.ТипСклада=Перечисление.ТипыСкладов.Оптовый;
			КонецЕсли;
            Скл.Записать();  
            СоответствиеСкладов.УстановитьЗначение(нн,4,Скл.ТекущийЭлемент());
            СоответствиеСкладов.Наим1С=СоответствиеСкладов.НаимИИКО;
        КонецЕсли;
    КонецЦикла;    
КонецПроцедуры //СоздатьСклад

//_____________________________________________________________________________
Процедура СортироватьТЗ(тззз) 
    СписКол=СоздатьОбъект("СписокЗначений");
    Для ии=1 по (тззз.КоличествоКолонок()-2) Цикл
        Загол="";
        Колон=тззз.ПолучитьПараметрыКолонки(ии,,,,Загол);
        СписКол.ДобавитьЗначение(Колон,Загол);
    КонецЦикла;              
    Сорт="";
    Если СписКол.ВыбратьЗначение(Сорт,"Выберите тип сортировки!",,,2)<>0 Тогда
        тззз.Сортировать(Сорт); 
    КонецЕсли;
КонецПроцедуры //СортироватьТЗ(тззз)

Процедура ВыборФайла(ИмяФайла, Фильтр="csv")
    
    Каталог = "";
    Стр = "Файл загрузки (*." + Фильтр + ")|*." + Фильтр + "";

    Если ФС.ВыбратьФайл(0, ИмяФайла, Каталог, "Выберите файл", Стр, , ) = 1 Тогда
        ИмяФайла = Каталог + ИмяФайла;
    КонецЕсли;
    
КонецПроцедуры 

Процедура ВыборКаталога(ИмяФайла)
    Каталог = ВыбКаталог;
    Если ФС.ВыбратьКаталог(Каталог, "Выберите каталог загрузки") = 1 Тогда
        ВыбКаталог = Каталог; 
    КонецЕсли;                      
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ИдЭлементаДиалога, Фл)
    //Если    ИдЭлементаДиалога = "ВыбФайл"    Тогда
    //    ВыборФайла(ВыбФайл, "csv");
    //КонецЕсли;
    Если    ИдЭлементаДиалога = "ВыбКаталог"    Тогда
        ВыборКаталога(ВыбКаталог);
    КонецЕсли;
КонецПроцедуры    
 
//http://www.1c77user.ru/article/vremya-dokumenta
Процедура УстановитьВремяДок(Док, Дата1)    
	Если ВремяДокумента.ТекущаяСтрока()=2 Тогда 
		Док.АвтоВремяНачалоДня();
	ИначеЕсли ВремяДокумента.ТекущаяСтрока()=3 Тогда
		Док.АвтоВремяОтключить();
		Док.УстановитьВремя(Сред(Дата1, 12, 2), Сред(Дата1, 15, 2), Сред(Дата1, 18, 2));
	КонецЕсли;
    Док.ДатаДок=Дата1;
КонецПроцедуры

Процедура УстановитьВремяДокОперации(Док, Дата1) 
	Если ВремяДокумента.ТекущаяСтрока()=2 Тогда 
		Док.Документ.АвтоВремяНачалоДня();
	ИначеЕсли ВремяДокумента.ТекущаяСтрока()=3 Тогда
		Док.Документ.АвтоВремяОтключить();
		Док.Документ.УстановитьВремя(Сред(Дата1, 12, 2), Сред(Дата1, 15, 2), Сред(Дата1, 18, 2));
	КонецЕсли;
	Док.ДатаОперации=Дата1;	
КонецПроцедуры	

Процедура Видимость1()
    //форма.пн.видимость(п);
    //форма.пм.видимость(п);
    //пн=п;
КонецПроцедуры //Видимость

//_____________________________________________________________________________
Функция ИзСтрокиВСпис(Стрр,БезПробелов)
    Списс=СоздатьОбъект("СписокЗначений"); 
    стр2="";  
    Для ии=1  по СтрДлина(Стрр) цикл
        Символ=Сред(Стрр,ии,1);
        Если Символ=";" Тогда
            Списс.ДобавитьЗначение(СокрЛП(Стр2));
            Стр2="";
        ИначеЕсли БезПробелов=1 тогда
            Если Символ<>" " тогда
                Стр2=Стр2+Символ; 
            КонецЕсли;
        Иначе
            Стр2=Стр2+Символ;
        КонецЕсли;        
    КонецЦикла;    
    Возврат Списс;
КонецФункции //ИзСтрокиВСпис    



//_____________________________________________________________________________
Функция ПолучитьТЗ(Текст,УмныеКолонки,НачКолонки,Табл)
    Табл=СоздатьОбъект("ТаблицаЗначений");  
    Спис=УмныеКолонки;
    Для ии=1 по Спис.РазмерСписка() цикл
        Табл.НоваяКолонка(СокрЛП(Спис.ПолучитьЗначение(ии)),,,,СокрЛП(Спис.ПолучитьЗначение(ии)));        
    КонецЦикла;    
    колстр=текст.КоличествоСтрок();
    Для ии=2 по колстр-1 Цикл
        Табл.НоваяСтрока();
    КонецЦикла;                                     
    ПерваяСтрока=ИзСтрокиВСпис(Текст.ПолучитьСТроку(1),0);
    Для ии=2 по колстр цикл
        Спис1=ИзСтрокиВСпис(Текст.ПолучитьСТроку(ии),0);
        Для хх=1 по спис1.РазмерСписка() цикл 
            НаимВтексте=УдалитьПробелыСТР(ПерваяСтрока.ПолучитьЗначение(хх));
            НомерВНачКолонках=НачКолонки.НайтиЗначение(НаимВтексте);  
            Если НомерВНачКолонках>0 Тогда
                Табл.УстановитьЗначение(ии-1,НомерВНачКолонках,Спис1.ПолучитьЗначение(хх));
            КонецЕсли;
            состояние("Загружается "+ии+" строка из "+колстр );
        КонецЦикла;
    КонецЦикла;
    Возврат Табл;
КонецФункции //ПолучитьТЗ(Текст)

//_____________________________________________________________________________
Процедура ПриВыбореЗакладки(ном,значен)
    Форма.ИспользоватьСлой(значен,2);   
    ОбработкаВидимости();   
КонецПроцедуры //ПриВыбореЗакладки   

Процедура ЗаписатьСТрокуПеремещения(Document, DocumentItem)
    Если ПустоеЗначение(DocumentItem.Article)=0 тогда 
        Если Число(DocumentItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(DocumentItem.JuristicPersonOutcomeName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    
            Тз2.НоваяСтрока();
            Тз2.Дата=Document.Date_DateTimeAsString;
            Тз2.НомерДок= Document.Number;
            Тз2.Торговоепредприятиеотправителькод= DocumentItem.DepartmentOutcomeCode;
            Тз2.Торговоепредприятиеотправительнаименование= DocumentItem.DepartmentOutcomeName;
            Тз2.ЮЛотправительИНН= DocumentItem.JuristicPersonOutcomeINN;
            Тз2.ЮЛотправительнаименование= DocumentItem.JuristicPersonOutcomeName;
            Тз2.Складотправителькод= DocumentItem.StoreOutcomeCode;
            Тз2.Складотправительнаименование= DocumentItem.StoreOutcomeName;
            Тз2.Торговоепредприятиеполучателькод= DocumentItem.DepartmentIncomeCode;    
            Тз2.Торговоепредприятиеполучательнаименование= DocumentItem.DepartmentIncomeName;   
            Тз2.ЮЛполучательИНН= DocumentItem.JuristicPersonIncomeINN;    
            Тз2.ЮЛполучательнаименование= DocumentItem.JuristicPersonIncomeName;    
            Тз2.Складполучателькод= DocumentItem.StoreIncomeCode;    
            Тз2.Складполучательнаименование= DocumentItem.StoreIncomeName;    
            Тз2.НКодИИКО= DocumentItem.Article;    
            Тз2.ННаименованиеИИКО= DocumentItem.Nomenclature;    
            Тз2.Группаучетаназвание= DocumentItem.AccountingCategory; 
            Тз2.Количество= DocumentItem.Amount_DecimalAsString; 
            Тз2.СебестоимостьзаедбезНДС= DocumentItem.CostPriceByUnit_DecimalAsString; 
            Тз2.СебестоимостьбезНДС= DocumentItem.CostPrice_DecimalAsString; 
            Тз2.СтавкаНДС= DocumentItem.NdsProductPercent_DecimalAsString; 
        КонецЕсли;
    Иначе
        Сообщить("Для номенклатуры "+DocumentItem.Nomenclature+" не задан код!!!");
    КонецЕсли;
КонецПроцедуры 

//_____________________________________________________________________________
Процедура ЗаписатьСтроку(invoice, invoiceItem)
    Если ПустоеЗначение(invoiceItem.Article)=0 тогда
        Если Число(invoiceItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(invoiceItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    
            Тз.НоваяСтрока();
            Тз.Дата= invoice.Date_DateTimeAsString;
            Тз.НомерДок= invoice.Number;
            Тз.Входномер= invoice.IncomingNumber;
            Тз.Входдата= invoice.IncomingDate_DateTimeAsString;
            Тз.КИННИИКО= invoice.SupplierINN;
            Тз.ККодИИКО= invoice.SupplierCode;
            Тз.КНаименованиеИИКО= invoice.SupplierName;
            Тз.СчетФактура= invoice.invoice;
            Тз.НКодИИКО= invoiceItem.Article;    
            Тз.ННаименованиеИИКО= invoiceItem.Nomenclature;    
            Тз.ГруппаучетаНазвание= invoiceItem.AccountingCategory;    
            Тз.СкладКод= invoiceItem.StoreCode;    
            Тз.СкладНаименование= invoiceItem.StoreName;    
            Тз.Колво= invoiceItem.Amount_DecimalAsString;    
            Тз.ЦенасНДС= invoiceItem.PriceWithNds_DecimalAsString;    
            Тз.СуммасНДС= invoiceItem.SumWithNds_DecimalAsString;    
            Тз.СуммаНДС= invoiceItem.Nds_DecimalAsString;    
            Тз.СтавкаНДС= invoiceItem.NdsPercent_DecimalAsString;   
            Тз.ЮЛИНН= invoiceItem.JuristicPersonINN;
            Тз.ЮЛнаименование= invoiceItem.JuristicPersonName;
        КонецЕсли;
    Иначе
        Сообщить("Для номенклатуры "+invoiceItem.Nomenclature+" не задан код!!!");
    КонецЕсли;
КонецПроцедуры 

//Стр1="Дата;Номер;Вход.номер;Вход.дата;Поставщик(ИНН);Поставщик(код);Поставщик(наименование);Сотрудник(код);Сотрудник(наименование);Склад(код);
//        1     2       3          4          5                6                  7                   8            9                    10
//Склад(наименование);Счет-фактура;Номенклатура(код);Номенклатура(наименование);Группаучета(название);Количество;ЦенасНДС;СуммасНДС;СуммаНДС;СтавкаНДС;        
//        11                12           13                    14                          15             16         17        18        19       20    
        //_____________________________________________________________________________      
        
Процедура ЗаписатьрСтроку(document, documentItem)
    Если ПустоеЗначение(documentItem.Article)=0 тогда
        Если Число(documentItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(documentItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    
            Тз8.НоваяСтрока();
            Тз8.Дата=  document.Date_DateTimeAsString;
            Тз8.НомерДок= document.Number;
            Тз8.СкладКод= documentItem.StoreCode;    
            Тз8.СкладНаименование= documentItem.StoreName;   
            Тз8.НКодИИКО= documentItem.Article;    
            Тз8.ННаименованиеИИКО= documentItem.Nomenclature;    
            Тз8.Группаучетаназвание= documentItem.AccountingCategory;
            Тз8.Количество= documentItem.Amount_DecimalAsString;    
            Тз8.ЦенапродажисНДС= documentItem.PriceWithNds_DecimalAsString;    
            Тз8.СуммапродажисНДС= documentItem.SumWithNds_DecimalAsString;    
            Тз8.СуммаНДСспродаж= documentItem.Nds_DecimalAsString;    
            Тз8.СтавкаНДСспродаж= documentItem.NdsPercent_DecimalAsString;
            Тз8.СебестоимостьзаедбезНДС= documentItem.CostPriceByUnit_DecimalAsString;    
            Тз8.СебестоимостьбезНДС= documentItem.CostPrice_DecimalAsString;    
            Тз8.СтавкаНДС= documentItem.NdsProductPercent_DecimalAsString;    
            Тз8.Торговоепредприятиекод= documentItem.DepartmentCode; 
            Тз8.Торговоепредприятиенаименование= documentItem.DepartmentName; 
            Тз8.ЮЛИНН= documentItem.JuristicPersonINN;
            Тз8.ЮЛнаименование= documentItem.JuristicPersonName;
            Тз8.Операция= documentItem.Operation;
            Тз8.Операцияназвание= documentItem.OperationName;
            Тз8.Типсписания= documentItem.WriteoffType;
            Тз8.Типсписанияназвание= documentItem.WriteoffTypeName;
            Тз8.Движениеденежныхсредствкод= document.RevenueAccountCode;
            Тз8.Движениеденежныхсредств= document.RevenueAccountName;
            Тз8.Статьярасходовкод= document.WriteoffAccountCode;
            Тз8.Статьярасходов= document.WriteoffAccountName;
            Тз8.КИННИИКО= document.CustomerINN;
            Тз8.ККодИИКО= document.CustomerCode;
            Тз8.КНаименованиеИИКО= document.CustomerName;    
        КонецЕсли;
    Иначе
        Сообщить("Для номенклатуры "+documentItem.Nomenclature+" не задан код!!!");
    КонецЕсли;
КонецПроцедуры 
        
Процедура ЗаписатьСТрокуПриготовления(Document, DocumentItem,знак)
    Если ПустоеЗначение(DocumentItem.Article)=0 тогда
        Если Число(DocumentItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(documentItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    
            Тз3.НоваяСтрока();
            Тз3.Дата=document.Date_DateTimeAsString;
            Тз3.НомерДок= Document.Number;
            Если Знак=0 Тогда
                Тз3.Складсписаниякод= DocumentItem.StoreCode;
                Тз3.Складсписаниянаименование= DocumentItem.StoreName;
                Тз3.Складприходакод= DocumentItem.StoreCode;
                Тз3.Складприходанаименование= DocumentItem.StoreName;
            Иначе
                Тз3.Складприходакод= DocumentItem.StoreCode;
                Тз3.Складприходанаименование= DocumentItem.StoreName;
                Тз3.Складсписаниякод= DocumentItem.StoreCode;
                Тз3.Складсписаниянаименование= DocumentItem.StoreName;
            КонецЕсли;
            Тз3.Знакоперации=DocumentItem.Operation;    
            Тз3.Знакоперацииназвание= DocumentItem.OperationName;   
            Тз3.НКодИИКО= DocumentItem.Article;    
            Тз3.ННаименованиеИИКО= DocumentItem.Nomenclature;    
            Тз3.Группаучетаназвание= DocumentItem.AccountingCategory; 
            Тз3.Количество= DocumentItem.Amount_DecimalAsString; 
            Тз3.СебестоимостьзаедбезНДС= DocumentItem.CostPriceByUnit_DecimalAsString; 
            Тз3.СебестоимостьбезНДС= DocumentItem.CostPrice_DecimalAsString; 
            Тз3.СтавкаНДС= DocumentItem.NdsProductPercent_DecimalAsString; 
            Тз3.Торговоепредприятиекод= DocumentItem.DepartmentCode; 
            Тз3.Торговоепредприятиенаименование= DocumentItem.DepartmentName; 
            Тз3.ЮЛИНН= DocumentItem.JuristicPersonINN; 
            Тз3.ЮЛнаименование= DocumentItem.JuristicPersonName; 
        КонецЕсли;
    Иначе
        Сообщить("Для номенклатуры "+DocumentItem.Nomenclature+" не задан код!!!");
    КонецЕсли;
КонецПроцедуры   

Процедура ЗаписатьСтрокуПродаж(oSale, oSaleItem)
    Если ПустоеЗначение(oSaleItem.Article)=0 тогда
        Если Число(oSaleItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(oSaleItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    
            Тз1.НоваяСтрока();
            Тз1.Дата=oSale.Date_DateTimeAsString;
            Тз1.НомерДок= oSale.Number;
            Тз1.СкладКод= oSaleItem.StoreCode;    
            Тз1.СкладНаименование= oSaleItem.StoreName;    
            Тз1.Операция= oSaleItem.Operation;
            Тз1.Операцияназвание= oSaleItem.OperationName;
            Тз1.НКодИИКО= oSaleItem.Article;    
            Тз1.ННаименованиеИИКО= oSaleItem.Nomenclature;  
            Тз1.Группаучетаназвание= oSaleItem.AccountingCategory;
            Тз1.Количество= oSaleItem.Amount_DecimalAsString;
            Тз1.ЦенапродажисНДС= oSaleItem.PriceWithNds_DecimalAsString;
            Тз1.СуммапродажисНДС= oSaleItem.SumWithNds_DecimalAsString;
            Тз1.СуммаНДСспродаж= oSaleItem.Nds_DecimalAsString;
            Тз1.СтавкаНДСспродаж= oSaleItem.NdsPercent_DecimalAsString; 
            Тз1.СтавкаНДС= oSaleItem.NdsPercent_DecimalAsString; 
            Тз1.СебестоимостьзаедбезНДС= oSaleItem.CostPriceByUnit_DecimalAsString; 
            Тз1.СебестоимостьбезНДС= oSaleItem.CostPrice_DecimalAsString; 
            Тз1.Торговоепредприятиекод= oSaleItem.DepartmentCode; 
            Тз1.Торговоепредприятиенаименование= oSaleItem.DepartmentName; 
            Тз1.ЮЛИНН= oSaleItem.JuristicPersonINN; 
            Тз1.ЮЛнаименование= oSaleItem.JuristicPersonName; 
            Тз1.ТипСписания= oSaleItem.WriteoffType; 
            Тз1.ТипСписанияНазвание= oSaleItem.WriteoffTypeName; 
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры //ЗаписатьСтроку() 

Процедура ЗаписатьСтрокуСписаний(oSale, oWriteoffItem)
    Если ПустоеЗначение(oWriteoffItem.Article)=0 тогда
        Если Число(oWriteoffItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(oWriteoffItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    

            Тз1.НоваяСтрока();
            Тз1.Дата= oSale.Date_DateTimeAsString;
            Тз1.НомерДок= oSale.Number;
            Тз1.СкладКод= oWriteoffItem.StoreCode;    
            Тз1.СкладНаименование= oWriteoffItem.StoreName;    
            Тз1.Операция= oWriteoffItem.Operation;      
            Тз1.Операцияназвание= oWriteoffItem.OperationName;
            Тз1.НКодИИКО= oWriteoffItem.Article;    
            Тз1.ННаименованиеИИКО= oWriteoffItem.Nomenclature;  
            Тз1.Группаучетаназвание= oWriteoffItem.AccountingCategory;
            Тз1.Количество= oWriteoffItem.Amount_DecimalAsString;
            Тз1.СтавкаНДСспродаж= oWriteoffItem.NdsNomenclaturePercent_DecimalAsString; 
            Тз1.СтавкаНДС= oWriteoffItem.NdsNomenclaturePercent_DecimalAsString; 
            Тз1.СебестоимостьзаедбезНДС= oWriteoffItem.CostPriceByUnit_DecimalAsString; 
            Тз1.СебестоимостьбезНДС= oWriteoffItem.CostPrice_DecimalAsString; 
            Тз1.Торговоепредприятиекод= oWriteoffItem.DepartmentCode; 
            Тз1.Торговоепредприятиенаименование= oWriteoffItem.DepartmentName; 
            Тз1.ЮЛИНН= oWriteoffItem.JuristicPersonINN; 
            Тз1.ЮЛнаименование= oWriteoffItem.JuristicPersonName;
			Тз1.ТипСписания= "1"; 
            Тз1.ТипСписанияНазвание= "Списывать ингредиенты";
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры //ЗаписатьСтрокуСписаний()   

Процедура ЗаписатьСтрокуСписания(oDocument, oDocumentItem)
    Если ПустоеЗначение(oDocumentItem.Article)=0 тогда
        Если Число(oDocumentItem.Amount_DecimalAsString)<>0 Тогда  
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(oDocumentItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    

            Тз6.НоваяСтрока();
            Тз6.Дата= oDocument.Date_DateTimeAsString;
            Тз6.НомерДок= oDocument.Number;
            Тз6.СкладКод= oDocumentItem.StoreCode;    
            Тз6.СкладНаименование= oDocumentItem.StoreName;    
            Тз6.НКодИИКО= oDocumentItem.Article;    
            Тз6.ННаименованиеИИКО= oDocumentItem.Nomenclature;  
            Тз6.Группаучетаназвание= oDocumentItem.AccountingCategory;
            Тз6.Количество= oDocumentItem.Amount_DecimalAsString;
            Тз6.СебестоимостьзаедбезНДС= oDocumentItem.CostPriceByUnit_DecimalAsString; 
            Тз6.СебестоимостьбезНДС= oDocumentItem.CostPrice_DecimalAsString; 
            Тз6.СтавкаНДС= oDocumentItem.NdsProductPercent_DecimalAsString; 
            Тз6.Торговоепредприятиекод= oDocumentItem.DepartmentCode; 
            Тз6.Торговоепредприятиенаименование= oDocumentItem.DepartmentName; 
            Тз6.ЮЛИНН= oDocumentItem.JuristicPersonINN; 
            Тз6.ЮЛнаименование= oDocumentItem.JuristicPersonName; 
            Тз6.СтатьяРасходов= oDocument.WriteoffAccountName;
            Тз6.ТипСписания= oDocumentItem.WriteoffType;
            Тз6.ТипСписанияНазвание= oDocumentItem.WriteoffTypeName;
            Тз6.Операция= oDocumentItem.Operation;
            Тз6.Операцияназвание= oDocumentItem.OperationName;
        КонецЕсли;
    КонецЕсли;                                
КонецПроцедуры //ЗаписатьСтрокуСписаний()  


Процедура ЗаписатьСтрокуИнвентаризации(oDocument, oDocumentItem)
    Если ПустоеЗначение(oDocumentItem.Article)=0 тогда
        Если Число(oDocumentItem.Amount_DecimalAsString)<>0 Тогда
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(oDocumentItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    
            Тз7.НоваяСтрока();
            Тз7.Дата= oDocument.Date_DateTimeAsString;
            Тз7.НомерДок= oDocument.Number;
            Тз7.Складкод= oDocumentItem.StoreCode;    
            Тз7.СкладНаименование= oDocumentItem.StoreName;    
            Тз7.НКодИИКО= oDocumentItem.Article;    
            Тз7.ННаименованиеИИКО= oDocumentItem.Nomenclature;  
            Тз7.Группаучетаназвание= oDocumentItem.AccountingCategory;
            Тз7.Количество= oDocumentItem.Amount_DecimalAsString;
            Тз7.СебестоимостьзаедбезНДС= oDocumentItem.CostPriceByUnit_DecimalAsString; 
            Тз7.СебестоимостьбезНДС= oDocumentItem.CostPrice_DecimalAsString; 
            Тз7.СтавкаНДС= oDocumentItem.NdsProductPercent_DecimalAsString; 
            Тз7.Торговоепредприятиекод= oDocumentItem.DepartmentCode; 
            Тз7.Торговоепредприятиенаименование= oDocumentItem.DepartmentName; 
            Тз7.ЮЛИНН= oDocumentItem.JuristicPersonINN; 
            Тз7.ЮЛнаименование= oDocumentItem.JuristicPersonName; 
            Тз7.Счетнедостачикод= oDocument.AccountShortageCode;
            Тз7.Счетнедостачинаименование= oDocument.AccountShortageName;
            Тз7.Счетизлишковкод= oDocument.AccountSurplusCode;
            Тз7.Счетизлишковнаименование= oDocument.AccountSurplusName;
            Тз7.Типноменклатурыкод= oDocumentItem.NomenclatureType;
            Тз7.Типноменклатурыназвание= oDocumentItem.NomenclatureTypeName;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры //ЗаписатьСтрокуСписаний()     

Процедура ЗаписатьСтрокуВН(oDocument, oDocumentItem)   
    Если ПустоеЗначение(oDocumentItem.Article)=0 тогда
        Если Число(oDocumentItem.Amount_DecimalAsString)<>0 Тогда 
            Если ПустоеЗначение(ЮрЛицо)=0 тогда
                Если СокрЛП(oDocumentItem.JuristicPersonName)<>СокрЛП(ЮрЛИЦо) Тогда
                    Возврат;
                КонецЕСли;    
            КонецЕСли;    

            Тз9.НоваяСтрока();
            
            Тз9.Дата= oDocument.Date_DateTimeAsString;
            Тз9.НомерДок= oDocument.Number;
            Тз9.Складкод= oDocumentItem.StoreCode; 
            Тз9.Складнаименование= oDocumentItem.StoreName; 
            
            Тз9.НКодИИКО= oDocumentItem.Article; 
            Тз9.ННаименованиеИИКО= oDocumentItem.Nomenclature; 
            Тз9.Группаучетаназвание= oDocumentItem.AccountingCategory;
            Тз9.Количество= oDocumentItem.Amount_DecimalAsString;
            Тз9.ЦенапродажисНДС= oDocumentItem.PriceWithNds_DecimalAsString;
            
            Тз9.СуммапродажисНДС= oDocumentItem.SumWithNds_DecimalAsString;
            Тз9.СуммаНДСспродаж= oDocumentItem.Nds_DecimalAsString;
            Тз9.СтавкаНДСспродаж= oDocumentItem.NdsPercent_DecimalAsString;
            Тз9.СебестоимостьзаедбезНДС= oDocumentItem.CostPriceByUnit_DecimalAsString;
            Тз9.СебестоимостьбезНДС= oDocumentItem.CostPrice_DecimalAsString;
            
            Тз9.СтавкаНДС= oDocumentItem.NdsProductPercent_DecimalAsString;
            Тз9.Торговоепредприятиекод= oDocumentItem.DepartmentCode;
            Тз9.Торговоепредприятиенаименование= oDocumentItem.DepartmentName;
            Тз9.ЮЛИНН= oDocumentItem.JuristicPersonINN;
            Тз9.ЮЛнаименование= oDocumentItem.JuristicPersonName;  
            
            Тз9.КИННИИКО= oDocument.CustomerINN;
            Тз9.ККодИИКО= oDocument.CustomerCode;
            Тз9.КНаименованиеИИКО= oDocument.CustomerName;
            
            Тз9.Приходнаянакладнаядата= oDocument.IncomingInvoiceDate_DateTimeAsString;
            Тз9.Приходнаянакладнаяномер= oDocument.IncomingInvoiceNumber;
            Тз9.Счетфактура= oDocument.Invoice;
            Тз9.Типноменклатурыкод= oDocumentItem.NomenclatureType;
            Тз9.Типноменклатурыназвание= oDocumentItem.NomenclatureTypeName;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры //ЗаписатьСтрокуСписаний() 


Процедура ЗаписатьНакладную(Invoice)
    oInvoiceItem = Invoice.GetFirstInvoiceItem();
    Пока ПустоеЗначение(oInvoiceItem)=0 Цикл
        ЗаписатьСТроку(Invoice,oInvoiceItem);   
        Попытка
            oInvoiceItem = invoice.GetNextInvoiceItem();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
КонецПроцедуры //ЗаписатьСтроку()  


Функция ЗаписатьРНакладную(Document)
    Попытка
        oDocumentItem = document.GetFirstOutgoingInvoiceItem();
    Исключение 
        Возврат 0;
    КонецПопытки;
    
    Пока 1=1 Цикл
        Попытка
            ЗаписатьРстроку(document,oDocumentItem);   
            oDocumentItem = document.GetNextOutgoingInvoiceItem();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    
    Возврат 1;
КонецФункции //ЗаписатьСтроку()


Функция ЗаписатьПеремещение(oDocument)
    
    Попытка
        oDocumentItem = oDocument.GetFirstInternalTransferItem();
    Исключение 
        Возврат 0;
    КонецПопытки;
    
    Пока 1=1 Цикл
        Попытка
            ЗаписатьСТрокуПеремещения(oDocument,oDocumentItem);   
            oDocumentItem = oDocument.GetNextInternalTransferItem();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    Возврат 1;
КонецФункции //ЗаписатьСтроку() 

Функция ЗаписатьПриготовление(oDocument)
    Попытка
        oDocumentItem = odocument.GetFirstIncomeItems();
    Исключение 
        Возврат 0;
    КонецПопытки;
    
    Пока 1=1 Цикл
        Попытка
            ЗаписатьСТрокуПриготовления(oDocument,oDocumentItem,1);   
            oDocumentItem = oDocument.GetNextIncomeItems();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    
    Попытка
        oDocumentItem = odocument.GetFirstOutcomeItems();
    Исключение 
        Возврат 0;
    КонецПопытки;
    
    Пока 1=1 Цикл
        Попытка
            ЗаписатьСТрокуПриготовления(oDocument,oDocumentItem,0);   
            oDocumentItem = oDocument.GetNextOutcomeItems();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    
    Возврат 1;
КонецФункции //ЗаписатьСтроку()
                                

Функция ЗаписатьПродажу(oSale)
    Попытка
        oSaleItem = oSale.GetFirstSaleItem(); 
		Пока 1=1 Цикл
        	Попытка
            	ЗаписатьСТрокуПродаж(oSale,oSaleItem);
				oSaleItem = oSale.GetNextSaleItem();
			Исключение 
            	Прервать;
        	КонецПопытки;
    	КонецЦикла;
    Исключение 
    КонецПопытки;
    
    Попытка
     	oWriteoffItem = oSale.GetFirstWriteoffItem(); 
	 	Пока 1=1 Цикл
        	Попытка                                            
            	ЗаписатьСтрокуСписаний(oSale,oWriteoffItem);   
            	oWriteoffItem = oSale.GetNextWriteoffItem();
			Исключение                                 
            	Прервать;
        	КонецПопытки;
    	КонецЦикла;
    Исключение 
    КонецПопытки;

	Возврат 1;
КонецФункции //ЗаписатьСтроку()
               

Функция ЗаписатьСписание(oDocument)
    
    Попытка
        oDocumentItem = oDocument.GetFirstWriteoffDocItem();
    Исключение 
        Возврат 0;
    КонецПопытки;
    
    Пока 1=1 Цикл
        Попытка
            ЗаписатьСТрокуСписания(oDocument,oDocumentItem);   
            oDocumentItem = oDocument.GetNextWriteoffDocItem();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    Возврат 1;                    
КонецФункции //ЗаписатьСтроку() 


Функция ЗаписатьИнвентаризацию(oDocument)
    Попытка
        oDocumentItem = oDocument.GetFirstInventoryItem();
    Исключение 
        Возврат 0;
    КонецПопытки;
    Пока 1=1 Цикл
        Попытка
            ЗаписатьСТрокуИнвентаризации(oDocument,oDocumentItem);   
            oDocumentItem = oDocument.GetNextInventoryItem();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    Возврат 1;
КонецФункции     

                
Функция ЗаписатьВН(oDocument)
    Попытка
        oDocumentItem = oDocument.GetFirstReturnedInvoiceItem();
    Исключение 
        Возврат 0;
    КонецПопытки;
    Пока 1=1 Цикл
        Попытка
            ЗаписатьСТрокуВН(oDocument,oDocumentItem);   
            oDocumentItem = oDocument.GetNextReturnedInvoiceItem();
        Исключение 
            Прервать;
        КонецПопытки;
    КонецЦикла;
    Возврат 1;
КонецФункции //ЗаписатьСтроку()

Процедура ЗаполнитьКонтрагентов(ТабЗнач)
	для нн=1 по ТабЗнач.КоличествоСтрок() Цикл          
        Стрр="";               
		Если ПустаяСтрока(ТабЗнач.ПолучитьЗначение(нн,"ККодиико"))=1 Тогда  
			ТабЗнач.УстановитьЗначение(нн,"ККодиико",Лев(ТабЗнач.ПолучитьЗначение(нн,"КНаименованиеИИКО"),11));	
		КонецЕсли;
        Если СоответствиеКотрагентов.НайтиЗначение(ТабЗнач.ПолучитьЗначение(нн,"ККодиико"),Стрр,"Кодиико")=0 Тогда   
            СоответствиеКотрагентов.НоваяСтрока();
            СоответствиеКотрагентов.Кодиико=ТабЗнач.ПолучитьЗначение(нн,"ККодИИКО");
            СоответствиеКотрагентов.ИННиико=ТабЗнач.ПолучитьЗначение(нн,"КИННИИКО");
            СоответствиеКотрагентов.Наимиико=ТабЗнач.ПолучитьЗначение(нн,"КНаименованиеИИКО");    
			СоответствиеКотрагентов.Загружать=2;
        КонецЕсли;
    КонецЦикла; 	
КонецПроцедуры	

Функция ДобавитьДокумент(Табл, название, сумма) 
	//Документы.НоваяКолонка("Номер"); 
	//Документы.НоваяКолонка("Дата");  
	//Документы.НоваяКолонка("Тип"); 
	//Документы.НоваяКолонка("Сумма");
	Документы.ВыбратьСтроки();
	Пока Документы.ПолучитьСтроку()=1 Цикл
    	Если (Документы.Тип=название) и (Документы.Номер=Табл.НомерДок) Тогда
			Документы.Сумма=Документы.Сумма+сумма;
			Возврат Документы;
		КонецЕсли;	
	КонецЦикла;               
	Документы.НоваяСтрока();
	Документы.Номер=Табл.НомерДок; 
	Документы.Дата=Табл.Дата;
	Документы.Тип=название;
	Документы.Сумма=сумма;
КонецФункции	
                
Процедура ИсправитьТаблицу(хб1, название)
	Попытка
		Если хб1.КоличествоЗаписей()>0 Тогда
			хб1.Последняя();                  
			Если ПустаяСтрока(хб1.CODE)=1 Тогда
				Сообщить("Исправление таблицы соответствия: " + название);
				хб1.Удалить();
				хб1.Записать();
				хб1.Сжать();
			КонецЕсли;      
			хб1.Первая();                       
		КонецЕсли;                                                      
	Исключение
		Сообщить("Ошибка при исправлении таблицы соответствия: "+название+", ошибка: "+Описаниеошибки());
	КонецПопытки
КонецПроцедуры	

Процедура Сформировать()      
    Если Форма.Закладки.РазмерСписка()>=2 Тогда   
        //Если ПустоеЗначение(Юрлицо)=1 Тогда
            Если Вопрос("Вы хотите перезаполнить таблицу контрагентов?",1)=1 Тогда
                СоответствиеКотрагентов.Очистить();  
                СоответствиеНоменклатуры.Очистить(); 
                СоответвиеГруппНом.Очистить(); 
                СоответствиеСкладов.Очистить();  
                Если Форма.Закладки.РазмерСписка()=4 Тогда
                    Форма.Закладки.УдалитьЗначение(4);
                КонецЕсли;
                Если Форма.Закладки.РазмерСписка()=3 Тогда
                    Форма.Закладки.УдалитьЗначение(3);
                КонецЕсли;
                Форма.Закладки.УдалитьЗначение(2);
            Иначе    
                Форма.ИспользоватьСлой("Общий, Контрагенты", 2);   
				//Форма.ИспользоватьСлой("Документы", 2);  
                Форма.Закладки.ТекущаяСтрока(2);
                Возврат;
            КонецЕсли; 
        //Иначе
        //    СоответствиеКотрагентов.Очистить();  
        //    СоответствиеНоменклатуры.Очистить(); 
        //    СоответвиеГруппНом.Очистить(); 
        //    СоответствиеСкладов.Очистить();  
        //    Если Форма.Закладки.РазмерСписка()=4 Тогда
        //        Форма.Закладки.УдалитьЗначение(4);
        //    КонецЕсли;
        //    Если Форма.Закладки.РазмерСписка()=3 Тогда
        //        Форма.Закладки.УдалитьЗначение(3);
        //    КонецЕсли;
        //    Форма.Закладки.УдалитьЗначение(2);
        //КонецЕсли;
    КонецЕсли;  
    
    Если (ЗагрузитьПриходнуюНакладную=0)и(ЗагрузитьРасходнуюНакладную=0)и(ЗагрузитьВнутренееПеремещение=0)и(ЗагрузитьАктРеализации=0)и(ЗагрузитьИнвентаризацию=0)и(ЗагрузитьАктПриготовления=0)и(ЗагрузитьАктСписания=0)и(ЗагрузитьВозвратнуюНакладную=0) тогда
        Сообщить("Выберите тип загружаемого документа!");
        Возврат;
    КонецЕсли;    
    
    Форма.Закладки.ДобавитьЗначение("Общий,Контрагенты", "Контрагенты");
    Форма.ИспользоватьСлой("Общий, Контрагенты", 2);                     
	//Форма.Закладки.ДобавитьЗначение("Документы", "Документы");
	//Форма.ИспользоватьСлой("Документы", 2);  
    СоответствиеКотрагентов.НоваяКолонка("Кодиико",,,,"Код iiko",10);
    СоответствиеКотрагентов.НоваяКолонка("ИННиико",,,,"ИНН iiko",20);
    СоответствиеКотрагентов.НоваяКолонка("Наимиико",,,,"Наименование iiko",30);
    СоответствиеКотрагентов.НоваяКолонка("Код1с",,,,"Код 1С",10);
    СоответствиеКотрагентов.НоваяКолонка("ИНН1с",,,,"ИНН 1С",20);
    СоответствиеКотрагентов.НоваяКолонка("Наим1с",,,,"Наименование 1С",30);  
    СоответствиеКотрагентов.НоваяКолонка(,,,,"+",3); 
    СоответствиеКотрагентов.НоваяКолонка(,,,,"",1);
	СоответствиеКотрагентов.НоваяКолонка("Загружать","Число",1,0,"Импорт",10); 
	СоответствиеКотрагентов.ВыводитьПиктограммы(9,1);
    СоответствиеКотрагентов.ВидимостьКолонки("8",0);
    Форма.Закладки.ТекущаяСтрока(2);
    ПриВыбореЗакладки(2,"Общий,Контрагенты");  
	//ПриВыбореЗакладки(2,"Документы"); 

    Стр2="Дата;Номер;Вход. номер;Вход. дата;Поставщик (ИНН);Поставщик (код);Поставщик (наименование);Сотрудник (код);Сотрудник (наименование);Склад(код);Склад (наименование);Счет-фактура;Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;Цена с НДС;Сумма с НДС;Сумма НДС;Ставка НДС;";
    Стр2=Стр2+"Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Тип номенклатуры (код);Тип номенклатуры (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Входномер;Входдата;КИННИИКО;ККодИИКО;КНаименованиеИИКО;Сотрудниккод;Сотрудникнаименование;СкладКод;СкладНаименование;СчетФактура;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Колво;ЦенасНДС;СуммасНДС;СуммаНДС;";
    Стр22=Стр22+"СтавкаНДС;Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;Типноменклатурыкод;Типноменклатурыназвание;Единицаизмерениякод;Единицаизмеренияназвание";
    УмныеИменаКолонок=ИзСтрокиВСпис(стр22,1);     
    
    Стр2="Дата;Номер;Торговое предприятие отправитель (код);Торговое предприятие отправитель (наименование);ЮЛ отправитель (ИНН);ЮЛ отправитель (наименование);Склад отправитель (код);Склад отправитель (наименование);";
    Стр2=Стр2+"Торговое предприятие получатель(код);Торговое предприятие получатель (наименование);ЮЛ получатель (ИНН);ЮЛ получатель (наименование);Склад получатель (код);Склад получатель (наименование);Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;Тип номенклатуры (код);Тип номенклатуры (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок2=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Торговоепредприятиеотправителькод;Торговоепредприятиеотправительнаименование;ЮЛотправительИНН;ЮЛотправительнаименование;Складотправителькод;Складотправительнаименование;Торговоепредприятиеполучателькод;Торговоепредприятиеполучательнаименование;";
    Стр22=Стр22+"ЮЛполучательИНН;ЮЛполучательнаименование;Складполучателькод;Складполучательнаименование;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;Типноменклатурыкод;Типноменклатурыназвание;Единицаизмерениякод;Единицаизмеренияназвание";
    УмныеИменаКолонок2=ИзСтрокиВСпис(стр22,1);     
    
    Стр2="Дата;Номер;Склад (код);Склад (наименование);Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;";
    Стр2=Стр2+"Цена продажи с НДС;Сумма продажи с НДС;Сумма НДС с продаж;Ставка НДС с продаж;Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Операция;Операция (название);Тип списания;Тип списания (название);Движение денежных средств (код);";
    Стр2=Стр2+"Движение денежных средств;Статья расходов(код);Статья расходов;Покупатель (ИНН);Покупатель (код);Покупатель (наименование);Тип номенклатуры (код);Тип номенклатуры (название);Целевое блюдо (код);Целевое блюдо (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок8=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Складкод;Складнаименование;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;ЦенапродажисНДС;СуммапродажисНДС;СуммаНДСспродаж;СтавкаНДСспродаж;СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;";
    Стр22=Стр22+"Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;Операция;Операцияназвание;Типсписания;Типсписанияназвание;Движениеденежныхсредствкод;Движениеденежныхсредств;Статьярасходовкод;Статьярасходов;КИННИИКО;ККодИИКО;КНаименованиеИИКО;Типноменклатурыкод;Типноменклатурыназвание;Целевоеблюдокод;Целевоеблюдоназвание;Единицаизмерениякод;Единицаизмеренияназвание";    
    УмныеИменаКолонок8=ИзСтрокиВСпис(стр22,1);   
    
    Стр2="Дата;Номер;Склад списания(код);Склад списания (наименование);Склад прихода(код);Склад прихода (наименование);Знак операции;Знак операции (название);Номенклатура (код);Номенклатура (наименование);Группа учета (название);";
    Стр2=Стр2+"Группа учета (код);Количество;Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Тип номенклатуры (код);Тип номенклатуры (название);Целевое блюдо (код);Целевое блюдо (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок3=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Складсписаниякод;Складсписаниянаименование;Складприходакод;Складприходанаименование;Знакоперации;Знакоперацииназвание;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;";
    Стр22=Стр22+"СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;Типноменклатурыкод;Типноменклатурыназвание;Целевоеблюдокод;Целевоеблюдоназвание;Единицаизмерениякод;Единицаизмеренияназвание";
    УмныеИменаКолонок3=ИзСтрокиВСпис(стр22,1);  
    
    Стр2="Дата;Номер;Склад(код);Склад (наименование);Операция;Операция (название);Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;Цена продажи с НДС;Сумма продажи с НДС;Сумма НДС с продаж;Ставка НДС с продаж;";
    Стр2=Стр2+"Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Тип списания;Тип списания (название);Движение денежных средств (код);Движение денежных средств;Статья расходов(код);Статья расходов;Тип номенклатуры (код);Тип номенклатуры (название);Целевое блюдо (код);Целевое блюдо (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок1=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Складкод;СкладНаименование;Операция;Операцияназвание;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;ЦенапродажисНДС;СуммапродажисНДС;";
    Стр22=Стр22+"СуммаНДСспродаж;СтавкаНДСспродаж;СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;ТипСписания;ТипСписанияНазвание;Движениеденежныхсредствкод;Движениеденежныхсредств;Статьярасходовкод;Статьярасходов;Типноменклатурыкод;Типноменклатурыназвание;Целевоеблюдокод;Целевоеблюдоназвание;Единицаизмерениякод;Единицаизмеренияназвание";    
    УмныеИменаКолонок1=ИзСтрокиВСпис(стр22,1);  
    
    Стр2="Дата;Номер;Склад (код);Склад (наименование);Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;";
    Стр2=Стр2+"Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Статья расходов;Статья расходов(код);Тип списания;Тип списания (название);Операция;Операция (название);Тип номенклатуры (код);Тип номенклатуры (название);Целевое блюдо (код);Целевое блюдо (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок6=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Складкод;Складнаименование;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;";
    Стр22=Стр22+"Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;Статьярасходов;Статьярасходовкод;Типсписания;Типсписанияназвание;Операция;Операцияназвание;Типноменклатурыкод;Типноменклатурыназвание;Целевоеблюдокод;Целевоеблюдоназвание;Единицаизмерениякод;Единицаизмеренияназвание";    
    УмныеИменаКолонок6=ИзСтрокиВСпис(стр22,1); 
    
    Стр2="Дата;Номер;Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Склад (код);Склад (наименование);Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;";
    Стр2=Стр2+"Счет недостачи (код);Счет недостачи (наименование);Счет излишков (код);Счет излишков (наименование);Тип номенклатуры (код);Тип номенклатуры (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок7=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;Складкод;Складнаименование;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;";
    Стр22=Стр22+"Счетнедостачикод;Счетнедостачинаименование;Счетизлишковкод;Счетизлишковнаименование;Типноменклатурыкод;Типноменклатурыназвание;Единицаизмерениякод;Единицаизмеренияназвание";    
    УмныеИменаКолонок7=ИзСтрокиВСпис(стр22,1);   
    
    Стр2="Дата;Номер;Склад (код);Склад (наименование);Номенклатура (код);Номенклатура (наименование);Группа учета (название);Группа учета (код);Количество;Цена продажи с НДС;Сумма продажи с НДС;Сумма НДС с продаж;Ставка НДС с продаж;Себестоимость за ед. без НДС;Себестоимость без НДС;Ставка НДС;";
    Стр2=Стр2+"Торговое предприятие(код);Торговое предприятие (наименование);ЮЛ (ИНН);ЮЛ (наименование);Движение денежных средств (код);Движение денежных средств;Статья расходов(код);Статья расходов;Покупатель (ИНН);Покупатель (код);Покупатель (наименование);Приходная накладная (дата);Приходная накладная (номер);Счет-фактура;Тип номенклатуры (код);Тип номенклатуры (название);Единица измерения (код);Единица измерения (название)";
    НачИменаКолонок9=ИзСтрокиВСпис(стр2,1); 
    Стр22="Дата;НомерДок;Складкод;Складнаименование;НКодИИКО;ННаименованиеИИКО;Группаучетаназвание;Группаучетакод;Количество;ЦенапродажисНДС;СуммапродажисНДС;СуммаНДСспродаж;СтавкаНДСспродаж;СебестоимостьзаедбезНДС;СебестоимостьбезНДС;СтавкаНДС;";
    Стр22=Стр22+"Торговоепредприятиекод;Торговоепредприятиенаименование;ЮЛИНН;ЮЛнаименование;Движениеденежныхсредствкод;Движениеденежныхсредств;Статьярасходовкод;Статьярасходов;КИННИИКО;ККодИИКО;КНаименованиеИИКО;Приходнаянакладнаядата;Приходнаянакладнаяномер;Счетфактура;Типноменклатурыкод;Типноменклатурыназвание;Единицаизмерениякод;Единицаизмеренияназвание";    
    УмныеИменаКолонок9=ИзСтрокиВСпис(стр22,1);  
    
    Если ЗагружатьЧерезСОМ=1 Тогда    //сервер  
        
        Если (ПустоеЗначение(НачДата)+ПустоеЗначение(КонДата))>0 Тогда
            Если КонДата<НачДата Тогда
                Предупреждение("Неверный интервал!!!");
                Возврат;
            КонецЕсли;
        КонецЕсли;   
        
        Если ЗагрузитьПриходнуюНакладную=1 тогда
            Тз=СоздатьОбъект("ТаблицаЗначений");
            Для ии=1 по УмныеИменаКолонок.РазмерСписка() цикл
                Тз.НоваяКолонка(УмныеИменаКолонок.ПолучитьЗначение(ии));        
            КонецЦикла;   
            
			// Старая загрузка
			o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
			Попытка                               
                Состояние("Подключаемся к серверу iiko!");               
			     oInvoces=o.LoadInvoiceData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                 oInvoce = oInvoces.GetFirstInvoiceData();
			Исключение    
                Предупреждение("В данном периоде накладные не обнаружены!");
            КонецПопытки;
			
			// Новый вариант загрузки
			//o=СоздатьОбъект("iiko1CInterface.DocumentLoader"); 
			//фильтр=СоздатьОбъект("iiko1CInterface.DocumentFilter"); 
            //Попытка                               
            //    Состояние("Подключаемся к серверу iiko!");               
			//	версияПротокола=СоздатьОбъект("iiko1CInterface.Version");  
			//	Сообщить("Версия протокола: " + версияПротокола.ProtocolVersion);
			//	фильтр.DateFrom=НачДата;
			//	фильтр.DateTo=КонДата;     
			//	фильтр.UseOnlyDate=1;
			//	oInvoces=o.LoadInvoiceData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль),фильтр);
			//Исключение    
			//	Сообщить("Ошибка: "+Описаниеошибки());
            //    Предупреждение("В данном периоде накладные не обнаружены!");
			//КонецПопытки;
			//Попытка                               	
            //    oInvoce = oInvoces.GetFirstInvoiceData();
			//Исключение    
            //    Предупреждение("В данном периоде накладные не обнаружены!");
			//КонецПопытки; 
			// Новый вариант загрузки
			
            нн=0;
            Пока ПустоеЗначение(oInvoce)=0 Цикл
                ЗаписатьНакладную(oInvoce);  
                Попытка
                    oInvoce = oInvoces.GetNextInvoiceData();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
       КонецЕсли;
 
       Если ЗагрузитьВнутренееПеремещение=1 Тогда
            Тз2=СоздатьОбъект("ТаблицаЗначений"); 
            Для ии=1 по УмныеИменаКолонок2.РазмерСписка() цикл
                Тз2.НоваяКолонка(УмныеИменаКолонок2.ПолучитьЗначение(ии));        
            КонецЦикла;   
            
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oDocuments = o.LoadInternalTransfersData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;   
                oDocument = oDocuments.GetFirstInternalTransfer();
            Исключение   
                Сообщить("В данном периоде перемещения не обнаружены!");
            КонецПопытки;
            Пока ЗаписатьПеремещение(oDocument)=1 Цикл
                Попытка
                    oDocument = oDocuments.GetNextInternalTransfer();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;     
        
        Если ЗагрузитьРасходнуюНакладную=1 Тогда
            Тз8=СоздатьОбъект("ТаблицаЗначений"); 
            Для ии=1 по УмныеИменаКолонок8.РазмерСписка() цикл
                Тз8.НоваяКолонка(УмныеИменаКолонок8.ПолучитьЗначение(ии));        
            КонецЦикла;   
            
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oDocuments = o.LoadOutgoingInvoicesData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;                         
                oDocument = oDocuments.GetFirstOutgoingInvoice();
            Исключение   
                Сообщить("В данном периоде расходные накладные не обнаружены!");
            КонецПопытки;          
            Пока ЗаписатьРНакладную(oDocument)=1 Цикл
                Попытка
                    oDocument = oDocuments.GetNextOutgoingInvoice();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;   
        
        Если ЗагрузитьАктПриготовления=1 тогда
            Тз3=СоздатьОбъект("ТаблицаЗначений");  
            Для ии=1 по УмныеИменаКолонок3.РазмерСписка() цикл
                Тз3.НоваяКолонка(УмныеИменаКолонок3.ПолучитьЗначение(ии));        
            КонецЦикла;      
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oDocuments = o.LoadProductionsData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;  
                oDocument = oDocuments.GetFirstProduction();
            Исключение   
                Сообщить("В данном периоде акты приготовления не обнаружены!");
            КонецПопытки;
            Пока ЗаписатьПриготовление(oDocument)=1 Цикл
                Попытка
                    oDocument = oDocuments.GetNextProduction();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;    
        
        Если ЗагрузитьАктРеализации=1 тогда 
            Тз1=СоздатьОбъект("ТаблицаЗначений");  
            Для ии=1 по УмныеИменаКолонок1.РазмерСписка() цикл
                Тз1.НоваяКолонка(УмныеИменаКолонок1.ПолучитьЗначение(ии));        
            КонецЦикла;      
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oSales=o.LoadSalesData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;  
                oSale = oSales.GetFirstSaleData();
            Исключение   
                Сообщить("В данном периоде акты реализации не обнаружены!");
				Сообщить(ОписаниеОшибки());
            КонецПопытки;
            Пока 1=1 Цикл 
				ЗаписатьПродажу(oSale);
                Попытка
                    oSale = oSales.GetNextSaleData();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;        
        
        Если ЗагрузитьАктСписания=1 тогда  
            Тз6=СоздатьОбъект("ТаблицаЗначений"); 
            Для ии=1 по УмныеИменаКолонок6.РазмерСписка() цикл
                Тз6.НоваяКолонка(УмныеИменаКолонок6.ПолучитьЗначение(ии));        
            КонецЦикла;      
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oDocuments = o.LoadWriteoffsData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;
                oDocument = oDocuments.GetFirstWriteoff();
            Исключение   
                Сообщить("В данном периоде акты списания не обнаружены!");
            КонецПопытки;
            Пока ЗаписатьСписание(oDocument)=1 Цикл
                Попытка
                    oDocument = oDocuments.GetNextWriteoff();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;   
        
        Если ЗагрузитьИнвентаризацию=1 тогда
            Тз7=СоздатьОбъект("ТаблицаЗначений"); 
            Для ии=1 по УмныеИменаКолонок7.РазмерСписка() цикл
                Тз7.НоваяКолонка(УмныеИменаКолонок7.ПолучитьЗначение(ии));        
            КонецЦикла;      
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oDocuments = o.LoadInventoriesData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;
                oDocument = oDocuments.GetFirstInventory();
            Исключение   
                Сообщить("В данном периоде инвентаризации не обнаружены!");
            КонецПопытки;
            Пока ЗаписатьИнвентаризацию(oDocument)=1 Цикл
                Попытка
                    oDocument = oDocuments.GetNextInventory();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;   
        
        
        Если ЗагрузитьВозвратнуюНакладную=1 тогда
            Тз9=СоздатьОбъект("ТаблицаЗначений"); 
            Для ии=1 по УмныеИменаКолонок9.РазмерСписка() цикл
                Тз9.НоваяКолонка(УмныеИменаКолонок9.ПолучитьЗначение(ии));        
            КонецЦикла;      
            o=СоздатьОбъект("iiko1CInterface.InvoiceDataLoader");
            Попытка                               
                Состояние("Подключаемся к серверу iiko!");
                oDocuments = o.LoadReturnedInvoicesData("http://"+СокрЛП(ПутьКсерверу)+":"+СокрЛП(Порт)+"/resto/",СокрЛП(Логин),СокрЛП(Пароль), НачДата,КонДата+1);
                ЕстьЧе=1;
                oDocument = oDocuments.GetFirstReturnedInvoice();
            Исключение   
                Сообщить("В данном периоде возвратные накладные не обнаружены!");
            КонецПопытки;
            Пока ЗаписатьВН(oDocument)=1 Цикл
                Попытка
                    oDocument = oDocuments.GetNextReturnedInvoice();
                Исключение 
                    Прервать;
                КонецПопытки;
            КонецЦикла; 
        КонецЕсли;

        
    Иначе // Загрузка из файла  
        
        Если ЗагрузитьПриходнуюНакладную=1 тогда
            ВыбФайл= ВыбКаталог+"\Приходная накладная.csv";
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!"); 
                ЗагрузитьПриходнуюНакладную=0;
            Иначе
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!"); 
                Иначе    
                     Попытка
                        Тз=ПолучитьТЗ(Текст,УмныеИменаКолонок,НачИменаКолонок,Тз);
                       Исключение
                        Сообщить("Приходные накладные не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли;   
        
        Если ЗагрузитьВнутренееПеремещение=1 тогда
            ВыбФайл= ВыбКаталог+"\Внутреннее перемещение.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!");
                ЗагрузитьВнутренееПеремещение=0;
            Иначе
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!");
                Иначе        
                    Попытка
                        Тз2=ПолучитьТЗ(Текст,УмныеИменаКолонок2,НачИменаКолонок2,Тз2); 
                    Исключение
                        Сообщить("Перемещения не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли; 
        
        Если ЗагрузитьРасходнуюНакладную=1 тогда
            ВыбФайл= ВыбКаталог+"\Расходная накладная.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!");
                ЗагрузитьРасходнуюНакладную=0;
            Иначе       
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!");
                Иначе     
                    Попытка
                        Тз8=ПолучитьТЗ(Текст,УмныеИменаКолонок8,НачИменаКолонок8,Тз8); 
                    Исключение
                        Сообщить("Расходные накладные не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли;     
        
        Если ЗагрузитьАктПриготовления=1 тогда
            ВыбФайл= ВыбКаталог+"\Акт приготовления.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!"); 
                ЗагрузитьАктПриготовления=0;
            Иначе
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!");
                Иначе     
                    Попытка
                        Тз3=ПолучитьТЗ(Текст,УмныеИменаКолонок3,НачИменаКолонок3,Тз3); 
                    Исключение
                        Сообщить("Акты приготовления не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли; 
        
        Если ЗагрузитьАктРеализации=1 тогда
            ВыбФайл= ВыбКаталог+"\Акт реализации.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!");
                ЗагрузитьАктРеализации=0;
            Иначе      
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!");
                Иначе         
                    Попытка
                        Тз1=ПолучитьТЗ(Текст,УмныеИменаКолонок1,НачИменаКолонок1,Тз1);
                    Исключение
                        Сообщить("Акты реализации не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли; 
        
        Если ЗагрузитьАктСписания=1 тогда
            ВыбФайл= ВыбКаталог+"\Акт списания.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!");  
                ЗагрузитьАктСписания=0;
            Иначе        
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!");
                Иначе            
                    Попытка
                        Тз6=ПолучитьТЗ(Текст,УмныеИменаКолонок6,НачИменаКолонок6,Тз6);  
                    Исключение
                        Сообщить("Акты списания не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли;
        
        Если ЗагрузитьИнвентаризацию=1 тогда
            ВыбФайл= ВыбКаталог+"\Инвентаризация.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!");   
                ЗагрузитьИнвентаризацию=0;
            Иначе       
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!");
                Иначе                       
                    Попытка
                        Тз7=ПолучитьТЗ(Текст,УмныеИменаКолонок7,НачИменаКолонок7,Тз7); 
                    Исключение
                        Сообщить("Инвентаризачии не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли;   
        
        Если ЗагрузитьВозвратнуюНакладную=1 тогда
            ВыбФайл= ВыбКаталог+"\Возвратная накладная.csv"; 
            Если Фс.СуществуетФайл(ВыбФайл) = 0 Тогда    
                Сообщить("Файл "+ВыбФайл+" не найден!!!"); 
                ЗагрузитьВозвратнуюНакладную=0;
            Иначе
                Текст=СоздатьОбъект("Текст");
                Текст.КодоваяСтраница(0);
                Текст.Открыть(ВыбФайл);   
                Если Текст.КоличествоСтрок()=0 Тогда
                    Сообщить("Файл "+ВыбФайл+" пуст!!!"); 
                Иначе                                    
                    Попытка
                        Тз9=ПолучитьТЗ(Текст,УмныеИменаКолонок9,НачИменаКолонок9,Тз9); 
                    Исключение
                        Сообщить("Расходные накладные не загружены!!! "+ОписаниеОшибки()); 
                    КонецПопытки;
                    
                КонецЕсли;
            КонецЕсли;  
        КонецЕсли;
	КонецЕсли;   
	// Загрузили
            
	//Документы=СоздатьОбъект("ТаблицаЗначений");
	//Документы.НоваяКолонка("Загружать"); 
	//Документы.Очистить();  
	//Документы.НоваяКолонка("Номер"); 
	//Документы.НоваяКолонка("Дата");  
	//Документы.НоваяКолонка("Тип"); 
	//Документы.НоваяКолонка("Сумма");   
	//Документы.ВыводитьПиктограммы("Загружать");
	
    Если ЗагрузитьПриходнуюНакладную=1 Тогда
        Тз.ВыбратьСТроки();
        нн=0;
        Пока Тз.ПолучитьСтроку()=1 Цикл
            нн=нн+1;                        
            НомерЦеныСндс=НачИменаКолонок.НайтиЗначение("ЦенасНДС");
            ЦенаСндс=УдалитьПробелы(Тз.ПолучитьЗначение(нн,НомерЦеныСндс));
            Тз.УстановитьЗначение(нн,НомерЦеныСндс,ЦенаСндс);  
            НомерСуммыСндс=НачИменаКолонок.НайтиЗначение("СуммасНДС");
            СуммаСндс=УдалитьПробелы(Тз.ПолучитьЗначение(нн,НомерСуммыСндс));
            Тз.УстановитьЗначение(нн,НомерСуммыСндс,СуммаСндс);  
            НомерСуммыНдс=НачИменаКолонок.НайтиЗначение("СуммаНДС");
            Суммандс=УдалитьПробелы(Тз.ПолучитьЗначение(нн,НомерСуммыНдс));  
            Тз.УстановитьЗначение(нн,НомерСуммыНдс,Суммандс);    
			//ДобавитьДокумент(Тз, "Приходная накладная", СуммаСндс); 
        КонецЦикла;               
    КонецЕсли;
    
    Если ЗагрузитьРасходнуюНакладную=1 Тогда
        для нн=1 по ТЗ8.КоличествоСтрок() Цикл   
            Колво=УдалитьПробелы(Тз8.ПолучитьЗначение(нн,"Количество"));
            Тз8.УстановитьЗначение(нн,"Количество",Колво);
            Если Число(Колво)=0 Тогда
                //Тз8.УдалитьСтроку(нн);
                //нн=нн-1;
            Иначе
                Тз8.УстановитьЗначение(нн,"ЦенапродажисНДС",УдалитьПробелы(Тз8.ПолучитьЗначение(нн,"ЦенапродажисНДС")));
                Тз8.УстановитьЗначение(нн,"СуммапродажисНДС",УдалитьПробелы(Тз8.ПолучитьЗначение(нн,"СуммапродажисНДС")));
                Тз8.УстановитьЗначение(нн,"СуммаНДСспродаж",УдалитьПробелы(Тз8.ПолучитьЗначение(нн,"СуммаНДСспродаж")));
                Тз8.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз8.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
                Тз8.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз8.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
            КонецЕсли;    
        КонецЦикла; 
    КонецЕсли;
    
    Если ЗагрузитьАктРеализации=1 Тогда
        для нн=1 по ТЗ1.КоличествоСтрок() Цикл   
            Колво=УдалитьПробелы(Тз1.ПолучитьЗначение(нн,"Количество"));
            Тз1.УстановитьЗначение(нн,"Количество",Колво);
            Если Число(Колво)=0 Тогда
                //Тз1.УдалитьСтроку(нн);
                //нн=нн-1;
            Иначе
                Тз1.УстановитьЗначение(нн,"ЦенапродажисНДС",УдалитьПробелы(Тз1.ПолучитьЗначение(нн,"ЦенапродажисНДС")));
                Тз1.УстановитьЗначение(нн,"СуммапродажисНДС",УдалитьПробелы(Тз1.ПолучитьЗначение(нн,"СуммапродажисНДС")));
                Тз1.УстановитьЗначение(нн,"СуммаНДСспродаж",УдалитьПробелы(Тз1.ПолучитьЗначение(нн,"СуммаНДСспродаж")));
                Тз1.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз1.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
                Тз1.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз1.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
            КонецЕсли;    
        КонецЦикла; 
        
    КонецЕсли;    
    
    
    Если ЗагрузитьАктПриготовления=1 Тогда
        для нн=1 по ТЗ3.КоличествоСтрок() Цикл   
            Колво=УдалитьПробелы(Тз3.ПолучитьЗначение(нн,"Количество"));
            Тз3.УстановитьЗначение(нн,"Количество",Колво);
            Если Число(Колво)=0 Тогда
                //Тз3.УдалитьСтроку(нн);
                //нн=нн-1;
            Иначе
                Тз3.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз3.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
                Тз3.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз3.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
            КонецЕсли;    
        КонецЦикла; 
        
    КонецЕсли;       
    
    
    Если ЗагрузитьАктСписания=1 Тогда
        для нн=1 по ТЗ6.КоличествоСтрок() Цикл   
            Колво=УдалитьПробелы(Тз6.ПолучитьЗначение(нн,"Количество"));
            Тз6.УстановитьЗначение(нн,"Количество",Колво);
            Если Число(Колво)=0 Тогда
                //Тз6.УдалитьСтроку(нн);
                //нн=нн-1;
            Иначе
                Тз6.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз6.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
                Тз6.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз6.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
            КонецЕсли;    
        КонецЦикла; 
        
    КонецЕсли;       

        
    Если ЗагрузитьИнвентаризацию=1 Тогда
        Кстрок=ТЗ7.КоличествоСтрок();
        для нн=1 по Кстрок Цикл   
            Колво=УдалитьПробелы(Тз7.ПолучитьЗначение(нн,"Количество"));
            Тз7.УстановитьЗначение(нн,"Количество",Колво);
            Если Число(Колво)=0 Тогда
                //Тз7.УдалитьСтроку(нн);
                //нн=нн-1; 
                //Кстрок=Кстрок-1;
            Иначе
                Тз7.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз7.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
                Тз7.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз7.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
            КонецЕсли;    
        КонецЦикла; 
    КонецЕсли;       
                
    Если ЗагрузитьВозвратнуюНакладную=1 Тогда
        для нн=1 по ТЗ9.КоличествоСтрок() Цикл   
            Колво=УдалитьПробелы(Тз9.ПолучитьЗначение(нн,"Количество"));
            Тз9.УстановитьЗначение(нн,"Количество",Колво);
            Если Число(Колво)=0 Тогда
                //Тз9.УдалитьСтроку(нн);
                //нн=нн-1;
            Иначе
                Тз9.УстановитьЗначение(нн,"ЦенапродажисНДС",УдалитьПробелы(Тз9.ПолучитьЗначение(нн,"ЦенапродажисНДС")));
                Тз9.УстановитьЗначение(нн,"СуммапродажисНДС",УдалитьПробелы(Тз9.ПолучитьЗначение(нн,"СуммапродажисНДС")));
                Тз9.УстановитьЗначение(нн,"СуммаНДСспродаж",УдалитьПробелы(Тз9.ПолучитьЗначение(нн,"СуммаНДСспродаж")));
                Тз9.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз9.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
                Тз9.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз9.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
            КонецЕсли;    
        КонецЦикла; 
    КонецЕсли;

	Юрлицо=ВыбратьЮрлицо();  
	Если ЗагрузитьПриходнуюНакладную=1 Тогда
		ЗаполнитьКонтрагентов(ТЗ);               
	КонецЕсли;
	Если ЗагрузитьРасходнуюНакладную=1 Тогда
		ЗаполнитьКонтрагентов(ТЗ8);
	КонецЕсли;  
	Если ЗагрузитьВозвратнуюНакладную=1 Тогда
		ЗаполнитьКонтрагентов(ТЗ9);
	КонецЕсли;
	
    хб1=СоздатьОбъект("xbase");
    Путькфайлу=КаталогИБ()+"\kontr.dbf";
    Путькиндексу=КаталогИБ()+"\kontr.cdx";
    хб1.ОткрытьФайл(Путькфайлу,Путькиндексу);
    Если хб1.Открыта()<>1 Тогда
        хб1.ДобавитьПоле("CODES","S",11,0);
        хб1.ДобавитьПоле("CODE","S",11,0);
        хб1.Добавитьиндекс("IDXCODE","CODE",1,0,);
        хб1.СоздатьФайл(Путькфайлу,Путькиндексу);
	КонецЕсли;    
	  
	хб1.Переиндексировать();
	ИсправитьТаблицу(хб1, "kontr");
    хб1.ТекущийИндекс("IDXCODE");
     
    Контр=СоздатьОбъект("Справочник.Контрагенты");
    нн=0;
    СоответствиеКотрагентов.ВыбратьСТроки();
    Пока СоответствиеКотрагентов.ПолучитьСтроку()=1 цикл
        нн=нн+1;
        Если хб1.Найти(СокрЛП(СоответствиеКотрагентов.Кодиико),"=")>0 тогда
            Код1С=СокрЛП(хб1.ПолучитьЗначениеПоля("CODES")); 
            Контр.НайтиПоКоду(Код1С);
            СоответствиеКотрагентов.УстановитьЗначение(нн,8,Контр.ТекущийЭлемент());
            Если ПустоеЗначение(Контр.ТекущийЭлемент())=0 Тогда
                СоответствиеКотрагентов.Код1С = СокрЛП(Контр.ТекущийЭлемент().Код);
                СоответствиеКотрагентов.Наим1С = СокрЛП(Контр.ТекущийЭлемент().Наименование);
                СоответствиеКотрагентов.ИНН1С = СокрЛП(Контр.ТекущийЭлемент().ИНН);
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    хб1.ЗакрытьФайл(); 
	
	//хб1.ОткрытьФайл(Путькфайлу, Путькиндексу);
	//Для н = 1 По хб1.КоличествоЗаписей() Цикл //здесь все понятно, по-моему
	//	хб1.Перейти(н); //позиционируемся на определенной записи
    //	Сообщить(" "+хб1.CODES+", "+хб1.CODE);
	//КонецЦикла;
КонецПроцедуры        


Процедура ВыбратьФайл()
    ВыбКат="";
        Зн=Фс.выбратьФайл(0,ВыбФайл,ВыбКат,,"Файлы txt (*.txt) |*.txt","txt");    
    Если Зн<>1 Тогда Возврат КонецЕсли;
    Если Прав(ВыбКат,1)<>"\" Тогда ВыбКат=ВыбКат+"\"    КонецЕсли;
    ТестовыйФайл=ВыбКат+ВыбФайл; 
КонецПроцедуры
//_____________________________________________________________________________

Функция ПолучитьОсновнойВариант()
    Спрр=СоздатьОбъект("Справочник.ВариантыРасчетаНалогов");
    Если Спрр.НайтиПоНаименованию("НДС в сумме")=0 Тогда
        Спрр.Новый();  
        Спрр.Наименование="НДС в сумме";
        Спрр.СуммаВключаетНДС=1;
        Спрр.Записать();
    КонецЕсли;   
    Возврат Спрр.ТекущийЭлемент();
КонецФункции         

//_____________________________________________________________________________
Процедура ПриЗакрытии()       
    Если (Упрощенка=0) и (Бугалтерия=1) Тогда
    	Константа.ОсновнойВариантРасчетаНалогов=СтарыйВариант;
    КонецЕсли;
КонецПроцедуры //ПриЗакрытии()
                  
Процедура ЗаписатьНастройки() 
	хб1=СоздатьОбъект("xbase");
    Путькфайлу=КаталогИБ()+"\storeac.dbf";
   	Путькиндексу=КаталогИБ()+"\storeac.cdx";
    хб1.ОткрытьФайл(Путькфайлу,Путькиндексу);
    хб1.Переиндексировать();    
    хб1.ТекущийИндекс("IDXCODE");
	
	СписаниеКредитСклад.ВыбратьСТроки();    
    Пока СписаниеКредитСклад.ПолучитьСтроку()=1 Цикл 
		Если ПустаяСтрока(СписаниеКредитСклад.СкладКод)=1 Тогда
			продолжить;
		КонецЕсли;     
        найдена = хб1.найти(СокрЛП(СписаниеКредитСклад.СкладКод),"=");
        Если найдена=0 тогда
            хб1.добавить();
            хб1.STORE = СокрЛП(СписаниеКредитСклад.СкладКод);
		КонецЕсли;    
		Если ПустоеЗначение(СписаниеКредитСклад.Контрагент)=0 Тогда
			хб1.CONTR = СокрЛП(СписаниеКредитСклад.Контрагент.Код);   
		Иначе
			хб1.CONTR = "";
		КонецЕсли;
		Если ПустоеЗначение(СписаниеКредитСклад.Счет)=0 Тогда
			хб1.ACC = СокрЛП(СписаниеКредитСклад.Счет.Код);
		Иначе
			хб1.ACC = "";
		КонецЕсли;
        Попытка 
            хб1.записать();
        Исключение
            Сообщить("Не удалось записать storeac.dbf "+ОписаниеОшибки());
        КонецПопытки;
    КонецЦИкла;
	хб1.ЗакрытьФайл();
	Форма.Закладки.УдалитьЗначение(Форма.Закладки.НайтиЗначение("Настройка"));      
	Форма.ИспользоватьСлой("Основной,Общий", 2);  
    Форма.Закладки.ТекущаяСтрока(1); 
	ПриВыбореЗакладки(1,"Основной,Общий");
КонецПроцедуры	
             
Процедура ОчистьСписаниеКредитСклад()     
	СписаниеКредитСклад.ВыбратьСТроки();    
    Пока СписаниеКредитСклад.ПолучитьСтроку()=1 Цикл   
		СписаниеКредитСклад.Контрагент="";
		СписаниеКредитСклад.Счет="";
	КонецЦИкла;	
КонецПроцедуры

Процедура ЗаполнитьНастройки()
	Если ПустоеЗначение(СписаниеДебет)=1 Тогда
			СписаниеДебет=СчетПоКоду("91.3");
		КонецЕсли;   	 
		Если ПустоеЗначение(СписаниеКредит)=1 Тогда
			СписаниеКредит=СчетПоКоду("41.2");
		КонецЕсли;       
	Если ПустоеЗначение(РеализацияДебет)=1 Тогда
		РеализацияДебет=СчетПоКоду("90.4");
	КонецЕсли;	
		СписаниеКредитСклад.НоваяКолонка("Склад",,,,"Склад",10); 
    	СписаниеКредитСклад.НоваяКолонка("Контрагент",,,,"Контрагент",10); 
		СписаниеКредитСклад.НоваяКолонка("Счет",,,,"Счет",10);  
		СписаниеКредитСклад.НоваяКолонка("СкладКод",,,,"",1);
		СписаниеКредитСклад.ВидимостьКолонки("СкладКод", 0);
		Склады=СоздатьОбъект("Справочник.МестаХранения"); 
		хб1=СоздатьОбъект("xbase");
    	Путькфайлу=КаталогИБ()+"\storeac.dbf";
   		Путькиндексу=КаталогИБ()+"\storeac.cdx";
    	хб1.ОткрытьФайл(Путькфайлу,Путькиндексу);
    	Если хб1.Открыта()<>1 Тогда
        	хб1.ДобавитьПоле("STORE","S",21,0);
        	хб1.ДобавитьПоле("CONTR","S",21,0);
			хб1.ДобавитьПоле("ACC","S",21,0);
        	хб1.Добавитьиндекс("IDXCODE","STORE",1,0,);
        	хб1.СоздатьФайл(Путькфайлу,Путькиндексу);
    	КонецЕсли;
    	хб1.Переиндексировать();
		//ИсправитьТаблицу(хб1, "storeac");
    	хб1.ТекущийИндекс("IDXCODE");
		Склады.ВыбратьЭлементы();
		Пока Склады.ПолучитьЭлемент()=1 Цикл  
			СписаниеКредитСклад.НоваяСтрока();
			СписаниеКредитСклад.Склад=Склады.Наименование;
			СписаниеКредитСклад.СкладКод=Склады.Код;
			Если хб1.Найти(Склады.Код,"=")>0 тогда        
				контрКод=СокрЛП(хб1.ПолучитьЗначениеПоля("CONTR"));
				Если ПустоеЗначение(контрКод)=0 Тогда            
					Контр=СоздатьОбъект("Справочник.Контрагенты");
					Если Контр.НайтиПоКоду(контрКод)=1 Тогда
						СписаниеКредитСклад.Контрагент=Контр;
					КонецЕсли;
				КонецЕсли;	
				счет=СчетПоКоду(СокрЛП(хб1.ПолучитьЗначениеПоля("ACC")));
				СписаниеКредитСклад.Счет=счет;
			КонецЕсли;	
		КонецЦикла;                        
    	хб1.ЗакрытьФайл(); 
		стрр="";
КонецПроцедуры	

Процедура ОбновитьПодсказкуНомера()   
	Форма.ДобавлятьТипДокумента.Доступность(?(НомерИз1С=1,0,1));
	Форма.СтартПрефикс.Доступность(?(НомерИз1С=1,0,1));
	Если НомерИз1С=1 Тогда
		Форма.НомерПодсказка.Заголовок("Номера для загурженных документов из iiko создаются автоматически. При перезагрузке, возможно дублирование документов.");
	ИначеЕсли ДобавлятьТипДокумента=1 Тогда
		Форма.НомерПодсказка.Заголовок("Номера документа: [Префикс]+[ТипДокумента]+[НомерДокумента в iiko]. Например: !Н00001.");
	Иначе                                                                                                                                                         
		Форма.НомерПодсказка.Заголовок("Номера документа: [Префикс]+[НомерДокумента в iiko]. Например: !000001.");
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьНастройки() 
	инд=Форма.Закладки.НайтиЗначение("Настройка");
	Если инд=0 Тогда 
		Форма.Закладки.ДобавитьЗначение("Настройка", "Настройка"); 
		инд=Форма.Закладки.НайтиЗначение("Настройка");
	КонецЕсли;	
	Форма.ИспользоватьСлой("Настройка", 2);
	Форма.Закладки.ТекущаяСтрока(инд);
	Форма.ВерсияНастроек.Видимость(0);
	ОбновитьПодсказкуНомера();
КонецПроцедуры		
                      
Процедура ПриВостановлении()
	Сообщить("ПриПовторномОткрытии()");
КонецПроцедуры			

Процедура ПриОткрытии()  
	//Сообщить("ПриОткрытии()");   
	Если ПустаяСтрока(ВерсияНастроек)=1 Тогда
		ВерсияНастроек=1;
		ДобавлятьТипДокумента=1;
		НомерИз1С=0;
		СтартПрефикс="!";
	КонецЕсли;
	
	Бугалтерия=1;
    Форма.ИспользоватьЗакладки(1);
    Форма.Закладки.ДобавитьЗначение("Основной,Общий", "Основной");  
    Форма.Закладки.ТекущаяСтрока(1);  
    Форма.ИспользоватьСлой("Основной,Общий", 2);   
    ПриКликеСпособЗагрузки();
    Видимость1();     
    Если Лев(метаданные.идентификатор,10)="Упрощенная" Тогда   
        Упрощенка=1;  
    Иначе
        Упрощенка=0; 
    КонецЕсли;  
    Если ПустоеЗначение(пров)=1 Тогда
        Пров=1;
    КонецЕсли;           
    Если ФормаГруппировкаНоменклатуры=0 Тогда
        ФормаГруппировкаНоменклатуры=1;
    КонецЕсли;    
    Если Упрощенка=0 Тогда 
		Попытка
        	СтарыйВариант=Константа.ОсновнойВариантРасчетаНалогов;
			Константа.ОсновнойВариантРасчетаНалогов=ПолучитьОсновнойВариант();  
		Исключение	  
			Бугалтерия=0;
		КонецПопытки;
		//Форма.Настройки.Видимость(0);
	Иначе        
		//АктСписанияОперация=0;
		//Форма.Закладки.ДобавитьЗначение("Настройка", "Настройка");
        //ЗаполнитьНастройки();
	КонецЕсли;                
	ЗаполнитьНастройки();
    ВремяДокумента.УдалитьВсе();
	ВремяДокумента.ДобавитьЗначение(1, "В конец дня"); 
	ВремяДокумента.ДобавитьЗначение(2, "В начало дня");
	ВремяДокумента.ДобавитьЗначение(3, "Как в iiko");
	//Докс=СоздатьОбъект("Операция");     
	//Докс.ВыбратьОперации(Дата(2010, 09, 30), Дата(2010, 09, 30));
	//Пока Докс.ПолучитьОперацию()=1 Цикл 
	//	Если Докс.Документ.НомерДок="001764" Тогда 
	//		в=1;     
	//		Сообщить(Докс.КоличествоПроводок());
	//		Докс.ПолучитьПроводкуПоНомеру(2);
	//	КонецЕсли;
	//КонецЦикла;	
	//Докс.НайтиПоНомеру("000108");
	//Док=СоздатьОбъект("Операция");  
	//Док.Новая();
	//Док.Документ.ДатаДок=Дата(2010, 11, 25);
	//Док.НоваяПроводка();
	//Док.Дебет.Счет=СчетПоКоду("Н04"); 
	//Док.НомерЖурнала="НУ";
	//Док.СодержаниеПроводки="Факт ра";
	//Попытка
	//	ддд=СоздатьОбъект("Документ.Операция");  
    //    Если ддд.НайтиПоНомеру(сокрЛП(Док.Документ.НомерДок),Док.ДатаОперации)>0 тогда
    //    	ддд.Удалить(1); 
    //        Сообщить(" Операция № "+Док.Документ.НомерДок+ " заменена!");
    //    КонецЕсли;
    //	Док.Записать();  
	//	СписокНакладных=СоздатьОбъект("СписокЗначений"); 
    //	СписокНакладных.ДобавитьЗначение(Док.Документ.ТекущийДокумент()); 
    //Исключение           
    //	Сообщить(ОписаниеОшибки());
    //КонецПопытки;      
	
	//тов=СоздатьОбъект("Справочник.Номенклатура");
	//тов.НайтиПоКоду("0АПЕРИТИВ5");  
	//контр=СоздатьОбъект("Справочник.Контрагенты");
	//контр.НайтиПоКоду("0000000001");  
	//БИ2 = СоздатьОбъект("БухгалтерскиеИтоги");
	//БИ2.ИспользоватьСубконто(ВидыСубконто.Номенклатура, тов, 2);
	//БИ2.Опции(1,0);
	////БИ4.ВыполнитьЗапрос(, , "10.2,10.3,41.2,41.3,004",,,1,,"СКВ");
	//СчетУчБИ2="10.1";
	//БИ2.ВыполнитьЗапрос(, Дата(2010, 12, 7), "10.1, 41.1, 43",,,,,5);
	//Если БИ2.ПолучитьСубконто(1,,тов.ТекущийЭлемент()) = 1 Тогда
	//	Если БИ2.ПолучитьСчет(,СчетУчБИ2) = 1 Тогда
	//		КоличествоМатериала = БИ2.СКД("К");
	//		СуммаМатериала = БИ2.СКД("С");
	//		Сообщить("к-во="+КоличествоМатериала+", сумма="+СуммаМатериала);
	//	КонецЕсли;
	//КонецЕсли;
				
	//рес=БИ4.ПолучитьСубконто(ВидыСубконто.Номенклатура,, тов);
	//рес=БИ4.ПолучитьСубконто(ВидыСубконто.Контрагенты,, 0);      
	//БИ4.ПолучитьСчет(,"10.2") ;
	//БИ4.ВыбратьСубконто(3);
	//Пока БИ4.ПолучитьСубконто(3) = 1 Цикл
	//	ДоговорРасчетов = БИ4.Субконто(3);
	//	КоличествоМатериала = БИ4.СКД("К");
	//	СуммаМатериала      = БИ4.СКД("С");   
	//	Сообщить("к-во="+КоличествоМатериала+", сумма="+СуммаМатериала);
	//КонецЦикла;	
КонецПроцедуры //ПриОткрытии                  
//_____________________________________________________________________________

Процедура ПродолжитьПослеДокументов()  
	инд=Форма.Закладки.НайтиЗначение("Контрагенты");
	Если инд=0 Тогда 
		Форма.Закладки.ДобавитьЗначение("Общий,Контрагенты", "Контрагенты"); 
		инд=Форма.Закладки.НайтиЗначение("Контрагенты");
	КонецЕсли;	
    Форма.ИспользоватьСлой("Общий, Контрагенты", 2);
	Форма.Закладки.ТекущаяСтрока(3);
    ПриВыбореЗакладки(3,"Общий,Контрагенты")	
КонецПроцедуры	

Процедура ПродолжитьПослеКонтрагентов()
    незаполнен=0;
    СоответствиеКотрагентов.ВыбратьСТроки(); 
    нн=0;
    Пока СоответствиеКотрагентов.ПолучитьСтроку()=1 Цикл
        нн=нн+1; 
		Если СоответствиеКотрагентов.Загружать=1 Тогда
			Продолжить;
		КонецЕсли;
        Незаполнен=ПустоеЗначение(СоответствиеКотрагентов.ПолучитьЗначение(нн,8)); 
    КонецЦикла;   
    Если Незаполнен=1 Тогда
        Предупреждение("Не для всех поставщиков задано соответствие!");
        Возврат;
    КонецЕсли;  
    СоответствиеКотрагентов.ВыбратьСТроки();    
    нн=0;
    хб1=СоздатьОбъект("xbase");
    Путькфайлу=КаталогИБ()+"\kontr.dbf";
    Путькиндексу=КаталогИБ()+"\kontr.cdx";  
    хб1.ОткрытьФайл(Путькфайлу,Путькиндексу);
    хб1.Добавитьиндекс("IDXCODE","CODE",1,0,);
    хб1.Переиндексировать();    
    хб1.ТекущийИндекс("IDXCODE");                        
	
    нн=0;
    Пока СоответствиеКотрагентов.ПолучитьСтроку()=1 Цикл    
        нн=нн+1; 
		Если СоответствиеКотрагентов.Загружать=1 Тогда
			Продолжить;
		КонецЕсли;
        Если ПустоеЗначение(СоответствиеКотрагентов.ПолучитьЗначение(нн,8))=1 Тогда
            Сообщить("Для загруженного контрагента "+СоответствиеКотрагентов.НаимИИКО+" не сопоставлен контрагент в 1с");
            Ошибок = Ошибок +1;    
            Возврат;
        Иначе
            //Если вн тогда   
			Если ПустаяСтрока(СоответствиеКотрагентов.КодИИКО)=1 Тогда
				продолжить;
			КонецЕсли;
            найдена = хб1.найти(СокрЛП(СоответствиеКотрагентов.КодИИКО),"=");
            Если найдена=0 тогда
                хб1.добавить();
                хб1.CODE = СокрЛП(СоответствиеКотрагентов.КодИИКО);
                хб1.CODES = СокрЛП(СоответствиеКотрагентов.Код1С);
            Иначе
                хб1.УстановитьЗначениеПоля("CODES",СоответствиеКотрагентов.Код1С);
            КонецЕсли;    
            Попытка 
                хб1.записать();
            Исключение
                Сообщить("Не удалось записать Kontr.dbf "+ОписаниеОшибки());
            КонецПопытки;
        КонецЕсли
    КонецЦИкла;     
    хб1.ЗакрытьФайл(); 
	
	//хб1.ОткрытьФайл(Путькфайлу, Путькиндексу);
	//Для н = 1 По хб1.КоличествоЗаписей() Цикл //здесь все понятно, по-моему
	//	хб1.Перейти(н); //позиционируемся на определенной записи
   	//	Сообщить(" "+хб1.CODES+", "+хб1.CODE);
	//КонецЦикла;     
   	
    Если Форма.Закладки.РазмерСписка()>=3 Тогда
        Если Вопрос("Вы хотите перезаполнить таблицу номенклатуры?",1)=1 Тогда 
            Если Форма.Закладки.РазмерСписка()=4 Тогда
                Форма.Закладки.УдалитьЗначение(4);
            КонецЕсли;
            СоответствиеНоменклатуры.Очистить();
            СоответствиеСкладов.Очистить(); 
            СоответвиеГруппНом.Очистить(); 
            Форма.Закладки.УдалитьЗначение(3);
        Иначе    
            Форма.ИспользоватьСлой("Общий, Номенклатура", 2); 
            Форма.Закладки.ТекущаяСтрока(3);
            Возврат;
        КонецЕсли;
    КонецЕсли;  
    
    Если ФормаГруппировкаНоменклатуры=1 Тогда 
        Форма.Закладки.ДобавитьЗначение("Общий,Номенклатура", "Номенклатура");
        Форма.ИспользоватьСлой("Общий, Номенклатура", 2);
        СоответствиеНоменклатуры.НоваяКолонка("Кодиико",,,,"Код iiko",8);
        СоответствиеНоменклатуры.НоваяКолонка("Наимиико",,,,"Наименование iiko",30);
        СоответствиеНоменклатуры.НоваяКолонка("Код1с",,,,"Код 1С",8);
        СоответствиеНоменклатуры.НоваяКолонка("Наим1с",,,,"Наименование 1С",30);   
        СоответствиеНоменклатуры.НоваяКолонка("Тип",,,,"Тип",10);   
        СоответствиеНоменклатуры.НоваяКолонка(,,,,"+",3);  
        СоответствиеНоменклатуры.НоваяКолонка(,,,,"",1);
        СоответствиеНоменклатуры.ВидимостьКолонки("7",0);
        Форма.Закладки.ТекущаяСтрока(3);
        ПриВыбореЗакладки(3,"Общий,Номенклатура");    
    Иначе
        Форма.Закладки.ДобавитьЗначение("Общий,Группировка", "Группировка");
        Форма.ИспользоватьСлой("Общий, Группировка", 2);
        СоответвиеГруппНом.НоваяКолонка("СтавкаНДС",,,,"Ставка НДС",30);
        СоответвиеГруппНом.НоваяКолонка("Наим1с",,,,"Номенклатура",30);   
        СоответвиеГруппНом.НоваяКолонка("Тип",,,,"Тип",10);   
        Форма.Закладки.ТекущаяСтрока(3);
        ПриВыбореЗакладки(3,"Общий,Группировка");    
    КонецЕсли;
    
        
    Ном=СоздатьОбъект("Справочник.Номенклатура"); 
    Если Упрощенка=0 Тогда
        Мат=СоздатьОбъект("Справочник.Материалы");
    КонецЕсли;

    
    Если ЗагрузитьПриходнуюНакладную=1 Тогда
        Тз.ВыбратьСТроки();
        Пока Тз.ПолучитьСтроку()=1 Цикл
            СоответствиеНоменклатуры.НоваяСтрока();
        КонецЦикла;               
        Тз.ВыбратьСТроки();                                                            
        нн=0;
        Пока Тз.ПолучитьСтроку()=1 Цикл  
            нн=нн+1;  
            стрр="";
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                СоответствиеНоменклатуры.УстановитьЗначение(нн,"Кодиико",Тз.ПолучитьЗначение(нн,НачИменаКолонок.НайтиЗначение("Номенклатура(код)")));
                СоответствиеНоменклатуры.УстановитьЗначение(нн,"Наимиико",Тз.ПолучитьЗначение(нн,НачИменаКолонок.НайтиЗначение("Номенклатура(наименование)"))); 
                СоответствиеНоменклатуры.УстановитьЗначение(нн,6,"+");
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Тз.СтавкаНДС,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Тз.СтавкаНДС;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Тз.ГруппаУчетаНазвание+"/"+Тз.СтавкаНДС,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Тз.ГруппаУчетаНазвание+"/"+Тз.СтавкаНДС;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;   
    КонецЕсли;

    
    Если ЗагрузитьВнутренееПеремещение=1 Тогда
        Тз2.ВыбратьСтроки();  
        Для нн=1 по Тз2.КоличествоСтрок() Цикл
            тз2.УстановитьЗначение(нн,"Количество",УдалитьПробелы(Тз2.ПолучитьЗначение(нн,"Количество")));
            тз2.УстановитьЗначение(нн,"СебестоимостьзаедбезНДС",УдалитьПробелы(Тз2.ПолучитьЗначение(нн,"СебестоимостьзаедбезНДС")));
            тз2.УстановитьЗначение(нн,"СебестоимостьбезНДС",УдалитьПробелы(Тз2.ПолучитьЗначение(нн,"СебестоимостьбезНДС")));
        КонецЦикла; 
        
        Для нн=1 по Тз2.КоличествоСтрок() Цикл
            кодд=Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("Номенклатура(наименование)"));   
            Ставка=Тз2.ПолучитьЗначение(нн,"СтавкаНДС");
            Группа=Тз2.ПолучитьЗначение(нн,"Группаучетаназвание");
            Стрр="";  
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли;         
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;
                   
    Если ЗагрузитьРасходнуюНакладную=1 Тогда     
        Для нн=1 по Тз8.КоличествоСтрок() Цикл
            кодд=Тз8.ПолучитьЗначение(нн,НачИменаКолонок8.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз8.ПолучитьЗначение(нн,НачИменаКолонок8.НайтиЗначение("Номенклатура(наименование)"));
            Ставка=Тз8.ПолучитьЗначение(нн,УмныеИменаКолонок8.НайтиЗначение("СтавкаНДСспродаж"));
            Группа=Тз8.ПолучитьЗначение(нн,УмныеИменаКолонок8.НайтиЗначение("Группаучетаназвание"));
            Стрр="";   
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли;  
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;      
    КонецЕсли;
    
    Если ЗагрузитьАктРеализации=1 Тогда     
        Для нн=1 по Тз1.КоличествоСтрок() Цикл
            кодд=Тз1.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз1.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Номенклатура(наименование)")); 
            Ставка=Тз1.ПолучитьЗначение(нн,УмныеИменаКолонок1.НайтиЗначение("СтавкаНДСспродаж"));
            Группа=Тз1.ПолучитьЗначение(нн,УмныеИменаКолонок1.НайтиЗначение("Группаучетаназвание"));
            Стрр=""; 
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли;   
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;

    Если ЗагрузитьАктПриготовления=1 Тогда
        Для нн=1 по Тз3.КоличествоСтрок() Цикл
            кодд=Тз3.ПолучитьЗначение(нн,НачИменаКолонок3.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз3.ПолучитьЗначение(нн,НачИменаКолонок3.НайтиЗначение("Номенклатура(наименование)")); 
            Ставка=Тз3.ПолучитьЗначение(нн,УмныеИменаКолонок3.НайтиЗначение("СтавкаНДС"));
            Группа=Тз3.ПолучитьЗначение(нн,УмныеИменаКолонок3.НайтиЗначение("Группаучетаназвание"));
            Стрр=""; 
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли;  
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;  
    
    Если ЗагрузитьАктСписания=1 Тогда     
        Для нн=1 по Тз6.КоличествоСтрок() Цикл
            кодд=Тз6.ПолучитьЗначение(нн,НачИменаКолонок6.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз6.ПолучитьЗначение(нн,НачИменаКолонок6.НайтиЗначение("Номенклатура(наименование)")); 
            Ставка=Тз6.ПолучитьЗначение(нн,УмныеИменаКолонок6.НайтиЗначение("СтавкаНДС"));
            Группа=Тз6.ПолучитьЗначение(нн,УмныеИменаКолонок6.НайтиЗначение("Группаучетаназвание"));
            Стрр="";  
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли; 
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;  
    
    Если ЗагрузитьИнвентаризацию=1 Тогда
        Для нн=1 по Тз7.КоличествоСтрок() Цикл
            кодд=Тз7.ПолучитьЗначение(нн,НачИменаКолонок7.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз7.ПолучитьЗначение(нн,НачИменаКолонок7.НайтиЗначение("Номенклатура(наименование)")); 
            Ставка=Тз7.ПолучитьЗначение(нн,УмныеИменаКолонок7.НайтиЗначение("СтавкаНДС"));
            Группа=Тз7.ПолучитьЗначение(нн,УмныеИменаКолонок7.НайтиЗначение("Группаучетаназвание"));
            Стрр="";   
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли; 
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;  
    
    Если ЗагрузитьВозвратнуюНакладную=1 Тогда
        Для нн=1 по Тз9.КоличествоСтрок() Цикл
            кодд=Тз9.ПолучитьЗначение(нн,НачИменаКолонок9.НайтиЗначение("Номенклатура(код)"));
            наимм=Тз9.ПолучитьЗначение(нн,НачИменаКолонок9.НайтиЗначение("Номенклатура(наименование)"));  
            Ставка=Тз9.ПолучитьЗначение(нн,УмныеИменаКолонок9.НайтиЗначение("СтавкаНДС"));
            Группа=Тз9.ПолучитьЗначение(нн,УмныеИменаКолонок9.НайтиЗначение("Группаучетаназвание"));
            Стрр=""; 
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если СоответствиеНоменклатуры.Найтизначение(кодд,Стрр,"Кодиико")=0 Тогда
                    СоответствиеНоменклатуры.НоваяСтрока(); 
                    СоответствиеНоменклатуры.Кодиико=кодд;
                    СоответствиеНоменклатуры.Наимиико=наимм;
                КонецЕсли; 
            ИначеЕсли ФормаГруппировкаНоменклатуры=2 Тогда         
                Если СоответвиеГруппНом.НайтиЗначение(Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=Ставка;
                КонецЕсли;
            Иначе  
                Если СоответвиеГруппНом.НайтиЗначение(""+Группа+"/"+Ставка,стрр,"СтавкаНДС")=0 Тогда
                    СоответвиеГруппНом.НоваяСтрока();
                    СоответвиеГруппНом.СтавкаНДС=""+Группа+"/"+Ставка;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;  
    КонецЕсли;

    
    Если ФормаГруппировкаНоменклатуры=1 Тогда
        нн=0;
        СоответствиеНоменклатуры.ВыбратьСтроки();
        Пока СоответствиеНоменклатуры.ПолучитьСтроку()=1 Цикл
            нн=нн+1;
            СоответствиеНоменклатуры.УстановитьЗначение(нн,6,"+");
        КонецЦикла;
        СоответствиеНоменклатуры.Свернуть("Кодиико,Наимиико,Код1с,Наим1с,Тип,6,7","");    
        
        //Номенклатура
        хб=СоздатьОбъект("xbase");
        Путькфайлу=КаталогИБ()+"\nomen1.dbf";
        Путькиндексу=КаталогИБ()+"\nomen1.cdx";
        хб.ОткрытьФайл(Путькфайлу,Путькиндексу);
        Если хб.Открыта()=0 Тогда
            хб.ДобавитьПоле("CODES","S",11,0);
            хб.ДобавитьПоле("CODE","S",11,0);
            хб.ДобавитьПоле("TYPE","S",11,0);
            хб.Добавитьиндекс("IDXCODE","CODE",1,0,);
            хб.СоздатьФайл(Путькфайлу,Путькиндексу);
        КонецЕсли;    
        хб.Переиндексировать();   
		ИсправитьТаблицу(хб, "nomen1");
        хб.ТекущийИндекс("IDXCODE"); 
                    
		//хб.Первая(); //позиционируемся на первой записи
		//Пока хб.ВКонце()=0 Цикл //пока не дошли до конца, крутим цикл
        //    Сообщить("CODES="+хб.CODES+", CODE="+хб.CODE);
		//	хб.Следующая(); //переходим на следующую запись
		//КонецЦикла;
		
        колстрок=СоответствиеНоменклатуры.КоличествоСтрок();
        СоответствиеНоменклатуры.ВыбратьСТроки();              
        нн=0;    
        Пока СоответствиеНоменклатуры.ПолучитьСтроку()=1 Цикл  
            нн=нн+1; 
            Состояние("Обрабатывается "+"Справочник номенклатура"+" "+нн+" из "+колстрок);
            Если хб.Найти(СокрЛП(СоответствиеНоменклатуры.КодИИКО),"=")>0 тогда
                Код1С=СокрЛП(хб.ПолучитьЗначениеПоля("CODES"));
                Типп=СокрЛП(хб.ПолучитьЗначениеПоля("TYPE"));   
                Если (Типп="Товар") или (Упрощенка=1) Тогда  
                    Если Ном.НайтиПоКоду(Код1С)>0 Тогда  
                        УстановитьСтрокуНом(Ном.ТекущийЭлемент());
                    КонецЕсли;
                Иначе
                    Если мат.НайтиПоКоду(Код1С)>0 Тогда  
                        УстановитьСтрокуМат(мат.ТекущийЭлемент());
                    КонецЕсли;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        хб.ЗакрытьФайл();    
    Иначе
        хб3=СоздатьОбъект("xbase");
        Путькфайлу=КаталогИБ()+"\grupp.dbf";
        Путькиндексу=КаталогИБ()+"\grupp.cdx";
        хб3.ОткрытьФайл(Путькфайлу,Путькиндексу);
        Если хб3.Открыта()=0 Тогда
            хб3.ДобавитьПоле("CODES","S",40,0);
            хб3.ДобавитьПоле("CODE","S",40,0);  
            хб3.ДобавитьПоле("TYPE","S",11,0);
            хб3.Добавитьиндекс("IDXCODE","CODE",1,0,);
            хб3.СоздатьФайл(Путькфайлу,Путькиндексу);
        КонецЕсли;
        хб3.Переиндексировать();    
		ИсправитьТаблицу(хб3, "grupp");
        хб3.ТекущийИндекс("IDXCODE");  
        СоответвиеГруппНом.ВыбратьСТроки();             
        нн=0;
        Пока СоответвиеГруппНом.ПолучитьСтроку()=1 цикл
            нн=нн+1;
            Если хб3.Найти(СокрЛП(СоответвиеГруппНом.СтавкаНДС),"=")>0 тогда
                Код1С=СокрЛП(хб3.ПолучитьЗначениеПоля("CODES"));
                Типп=СокрЛП(хб3.ПолучитьЗначениеПоля("TYPE"));  
                Если (Типп="Товар") или (Упрощенка=1) Тогда  
                    Если Ном.НайтиПоКоду(Код1С)>0 Тогда
                        Номен=Ном.ТекущийЭлемент();
                    КонецЕсли;
                Иначе
                    Если мат.НайтиПоКоду(Код1С)>0 Тогда    
                        Номен=Мат.ТекущийЭлемент();
                    КонецЕсли;
                КонецЕсли;
                Если Номен.ЭтоГруппа()=1 Тогда
                    Номен=ПолучитьПустоеЗначение();
                КонецЕсли;
                СоответвиеГруппНом.УстановитьЗначение(нн,"Наим1с",Номен.ТекущийЭлемент()); 
                СоответвиеГруппНом.УстановитьЗначение(нн,"Тип",Типп); 
            КонецЕсли;
        КонецЦикла;
        хб3.ЗакрытьФайл();
    КонецЕсли;
КонецПроцедуры //ПродолжитьПослеКонтрагентов()  

Процедура ПродолжитьПослеНоменклатуры()
    незаполнен=0;  
    НезаполненТип=0;   
    нн=0;
    Если ФормаГруппировкаНоменклатуры=1 Тогда  
        СоответствиеНоменклатуры.ВыбратьСТроки(); 
        Пока СоответствиеНоменклатуры.ПолучитьСтроку()=1 Цикл   
            нн=нн+1;                
            Незаполнен=Незаполнен+ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(нн,7)); 
            НезаполненТип=НезаполненТип+ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(нн,"тип"));
        КонецЦикла;   
        Если (Незаполнен>0)или(НезаполненТип>0) Тогда   
            Предупреждение("Не для всей номенклатуры задано соответствие!");
            Возврат;
        КонецЕсли;   
        хб=СоздатьОбъект("xbase");
        Путькфайлу=КаталогИБ()+"\nomen1.dbf";
        Путькиндексу=КаталогИБ()+"\nomen1.cdx";
        хб.ОткрытьФайл(Путькфайлу,Путькиндексу);
        хб.ДобавитьИндекс("IDXCODE","CODE",1,0,);
        хб.Переиндексировать();        
        хб.ТекущийИндекс("IDXCODE");
        СоответствиеНоменклатуры.ВыбратьСТроки();    
        Пока СоответствиеНоменклатуры.ПолучитьСтроку()=1 Цикл  
			Если ПустаяСтрока(СоответствиеНоменклатуры.КодИИКО)=1 Тогда
				продолжить;
			КонецЕсли;
            найдена = хб.найти(СокрЛП(СоответствиеНоменклатуры.КодИИКО),"=");
            Если найдена=0 тогда
                хб.добавить();
                хб.CODE = СокрЛП(СоответствиеНоменклатуры.КодИИКО);
                хб.CODES = СокрЛП(СоответствиеНоменклатуры.Код1С);
                хб.TYPE = СокрЛП(СоответствиеНоменклатуры.Тип);
            Иначе
                хб.УстановитьЗначениеПоля("CODES",СокрЛП(СоответствиеНоменклатуры.Код1С));
                хб.УстановитьЗначениеПоля("TYPE",СокрЛП(СоответствиеНоменклатуры.Тип));
            КонецЕсли;    
            Попытка 
                хб.записать();
            Исключение
                Сообщить("Не удалось записать "+СтрокаДБФ+".dbf "+ОписаниеОшибки());
            КонецПопытки;
        КонецЦИкла;
        хб.ЗакрытьФайл(); 
    иначе              
        СоответвиеГруппНом.ВыбратьСТроки();
        Пока СоответвиеГруппНом.ПолучитьСтроку()=1 Цикл
            Незаполнен=Незаполнен+ПустоеЗначение(СоответвиеГруппНом.Наим1с);  
            НезаполненТип=НезаполненТип+ПустоеЗначение(СоответвиеГруппНом.Тип);
        КонецЦикла; 
        Если (Незаполнен>0)или(НезаполненТип>0) Тогда
            Предупреждение("Не для всех группировок задано соответствие!");
            Возврат;
        КонецЕсли;   
        хб3=СоздатьОбъект("xbase");
        Путькфайлу=КаталогИБ()+"\grupp.dbf";
        Путькиндексу=КаталогИБ()+"\grupp.cdx";
        хб3.ОткрытьФайл(Путькфайлу,Путькиндексу);
        хб3.ДобавитьИндекс("IDXCODE","CODE",1,0,);
        хб3.Переиндексировать();        
        хб3.ТекущийИндекс("IDXCODE");
        СоответвиеГруппНом.ВыбратьСТроки();   
        Пока СоответвиеГруппНом.ПолучитьСтроку()=1 цикл  
			Если ПустаяСтрока(СоответвиеГруппНом.СтавкаНДС)=1 Тогда
				продолжить;
			КонецЕсли;
            найдена = хб3.найти(СокрЛП(СоответвиеГруппНом.СтавкаНДС),"=");
            Если найдена=0 тогда
                хб3.добавить();
                хб3.CODE = СокрЛП(СоответвиеГруппНом.СтавкаНДС);
                хб3.CODES = СокрЛП(СоответвиеГруппНом.Наим1с.Код);  
                хб3.TYPE = СокрЛП(СоответвиеГруппНом.Тип);
            Иначе        
                хб3.УстановитьЗначениеПоля("CODES",СокрЛП(СоответвиеГруппНом.Наим1с.Код));   
                хб3.УстановитьЗначениеПоля("TYPE",СокрЛП(СоответвиеГруппНом.Тип));   
            КонецЕсли;    
            Попытка 
                хб3.записать();
            Исключение
                Сообщить("Не удалось записать grupp.dbf "+ОписаниеОшибки());
            КонецПопытки;
        КонецЦИкла;
        хб3.ЗакрытьФайл();
    КонецЕсли;
    
    
    Если Форма.Закладки.РазмерСписка()>=4 Тогда
        Если Вопрос("Вы хотите перезаполнить таблицу складов?",1)=1 Тогда
            СоответствиеСкладов.Очистить();
            Форма.Закладки.УдалитьЗначение(4);
        Иначе    
            Форма.ИспользоватьСлой("Общий,Склады", 2); 
            Форма.Закладки.ТекущаяСтрока(4);
            Возврат;
        КонецЕсли;
    КонецЕсли;
    Форма.Закладки.ДобавитьЗначение("Общий,Склады", "Склады");
    Форма.ИспользоватьСлой("Общий, Склады", 2);
    СоответствиеСкладов.НоваяКолонка("Наимиико",,,,"Наименование iiko",30);
    СоответствиеСкладов.НоваяКолонка("Наим1с",,,,"Наименование 1С",30);   
    СоответствиеСкладов.НоваяКолонка("П",,,,"+",3);  
    СоответствиеСкладов.НоваяКолонка(,,,,"",1); 
	СоответствиеСкладов.НоваяКолонка("Загружать","Число",1,0,"Импорт",10);
	СоответствиеСкладов.ВыводитьПиктограммы(5,1);
    СоответствиеСкладов.ВидимостьКолонки("4",0);
    Форма.Закладки.ТекущаяСтрока(4);
    ПриВыбореЗакладки(4,"Общий,Склады"); 
    Если ЗагрузитьПриходнуюНакладную=1 Тогда
        Тз.ВыбратьСТроки();
        Пока Тз.ПолучитьСтроку()=1 Цикл
            СоответствиеСкладов.НоваяСтрока();
        КонецЦикла;               
        Тз.ВыбратьСТроки();                                                            
        нн=0;
        Пока Тз.ПолучитьСтроку()=1 Цикл                                                       
            нн=нн+1;
            СоответствиеСкладов.УстановитьЗначение(нн,"Наимиико",Тз.ПолучитьЗначение(нн,НачИменаКолонок.НайтиЗначение("Склад(наименование)")));
            СоответствиеСкладов.УстановитьЗначение(нн,3,"+");
        КонецЦикла;                       
        СоответствиеСкладов.Свернуть("Наимиико,Наим1с,3,4,Загружать","");  
    КонецЕсли;
    
    Если ЗагрузитьВнутренееПеремещение=1 Тогда
        для нн=1 по ТЗ2.количествоСтрок() Цикл 
            Получнаим=Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("Складполучатель(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
            Отпрнаим=Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("Складотправитель(наименование)"));   
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Отпрнаим,стрр,"Наимиико")=0 Тогда  
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Отпрнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;    

    Если ЗагрузитьРасходнуюНакладную=1 Тогда 
        для нн=1 по ТЗ8.количествоСтрок() Цикл 
            Получнаим=Тз8.ПолучитьЗначение(нн,НачИменаКолонок8.НайтиЗначение("Склад(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;    
    
    Если ЗагрузитьАктРеализации=1 Тогда 
        для нн=1 по ТЗ1.количествоСтрок() Цикл 
            Получнаим=Тз1.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Склад(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;    

    Если ЗагрузитьАктПриготовления=1 Тогда
        для нн=1 по ТЗ3.количествоСтрок() Цикл 
            Получнаим=Тз3.ПолучитьЗначение(нн,НачИменаКолонок3.НайтиЗначение("Складсписания(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;     
            Получнаим=Тз3.ПолучитьЗначение(нн,НачИменаКолонок3.НайтиЗначение("Складприхода(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;    
    
    Если ЗагрузитьАктСписания=1 Тогда 
        для нн=1 по ТЗ6.количествоСтрок() Цикл 
            Получнаим=Тз6.ПолучитьЗначение(нн,НачИменаКолонок6.НайтиЗначение("Склад(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;
    
    Если ЗагрузитьИнвентаризацию=1 Тогда
        для нн=1 по ТЗ7.количествоСтрок() Цикл 
            Получнаим=Тз7.ПолучитьЗначение(нн,НачИменаКолонок7.НайтиЗначение("Склад(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;        
    
    Если ЗагрузитьВозвратнуюНакладную=1 Тогда
        для нн=1 по ТЗ9.количествоСтрок() Цикл 
            Получнаим=Тз9.ПолучитьЗначение(нн,НачИменаКолонок9.НайтиЗначение("Склад(наименование)"));
            Стрр="";
            Если СоответствиеСкладов.НайтиЗначение(Получнаим,стрр,"Наимиико")=0 Тогда    
                СоответствиеСкладов.НоваяСтрока();
                СоответствиеСкладов.Наимиико=Получнаим;   
                СоответствиеСкладов.П="+";
            КонецЕсли;    
        КонецЦикла;  
    КонецЕсли;    


    СоответствиеСкладов.Свернуть("Наимиико,Наим1с,3,4,Загружать",""); 

    СоответствиеСкладов.ВыбратьСТроки(); 
    нн=0;
    Скл=СоздатьОбъект("Справочник.МестаХранения");  
    колстрок=СоответствиеСкладов.КоличествоСтрок(); 
    
    хб2=СоздатьОбъект("xbase");
    Путькфайлу=КаталогИБ()+"\sklad.dbf";
    Путькиндексу=КаталогИБ()+"\sklad.cdx";
    хб2.ОткрытьФайл(Путькфайлу,Путькиндексу);
    Если  хб2.Открыта()=0 Тогда
        хб2.ДобавитьПоле("CODES","S",40,0);
        хб2.ДобавитьПоле("CODE","S",40,0);
        хб2.ДобавитьИндекс("IDXCODE","CODE",1,0,);
        хб2.СоздатьФайл(Путькфайлу,Путькиндексу);
	КонецЕсли;                      
	ИсправитьТаблицу(хб2, "sklad");
    хб2.ТекущийИндекс("IDXCODE");
    хб2.Переиндексировать();    
    Пока СоответствиеСкладов.ПолучитьСтроку()=1 Цикл 
        нн=нн+1;          
		СоответствиеСкладов.Загружать=2;
        Состояние("Обрабатывается справочник складов "+нн+" из "+колстрок);
        Если хб2.Найти(СокрЛП(СоответствиеСкладов.Наимиико),"=")>0 тогда
            Код1С=СокрЛП(хб2.ПолучитьЗначениеПоля("CODES")); 
            Если Скл.НайтиПоНаименованию(Код1С,0,1)>0 Тогда
                УстановитьСтрокуСкл();
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    хб2.ЗакрытьФайл();
КонецПроцедуры //ПродолжитьПослеНоменклатуры()   

//_____________________________________________________________________________
Процедура ОбработкаПодбора(Эл,Конт)
    Если (Эл.Вид()="МестаХранения") Тогда
        Текстр=СоответствиеСкладов.ТекущаяСтрока();
        СоответствиеСкладов.УстановитьЗначение(текстр,"Наим1с",Эл.Наименование);  
        СоответствиеСкладов.УстановитьЗначение(текстр,4,Эл);  
        
	ИначеЕсли Эл.Вид()="Контрагенты" Тогда
		Если НастройкаКонтр=0 Тогда
        	Текстр=СоответствиеКотрагентов.ТекущаяСтрока();
        	СоответствиеКотрагентов.УстановитьЗначение(текстр,"ИНН1с",Эл.ИНН);
        	СоответствиеКотрагентов.УстановитьЗначение(текстр,"Код1с",Эл.Код);
        	СоответствиеКотрагентов.УстановитьЗначение(текстр,"Наим1с",Эл.Наименование);
        	СоответствиеКотрагентов.УстановитьЗначение(текстр,8,Эл);   
		Иначе    
			//СписаниеКредитСклад.Контрагент=Эл.Наименование;
			//СписаниеКредитСклад.Контрагент1=Эл; 
			СписаниеКредитСклад.Контрагент=Эл;
		КонецЕсли	                      
	ИначеЕсли Эл.Вид()="Основной" Тогда
		//СписаниеКредитСклад.Счет=Эл.Наименование;
		//СписаниеКредитСклад.Счет1=Эл; 
		СписаниеКредитСклад.Счет=Эл;
    ИначеЕсли ФормаГруппировкаНоменклатуры=1 Тогда 
        Текстр=СоответствиеНоменклатуры.ТекущаяСтрока();
        СоответствиеНоменклатуры.УстановитьЗначение(текстр,"Код1с",Эл.Код);
        СоответствиеНоменклатуры.УстановитьЗначение(текстр,"Наим1с",Эл.Наименование);  
        СоответствиеНоменклатуры.УстановитьЗначение(текстр,7,Эл);  
    Иначе
        Текстр=СоответвиеГруппНом.ТекущаяСтрока();                                  
        СоответвиеГруппНом.УстановитьЗначение(текстр,"Наим1с",Эл.ТекущийЭлемент());
    КонецЕсли; 
    Форма.Обновить();
КонецПроцедуры //ОбработкаПодбора                                                            

//_____________________________________________________________________________
Процедура ПриКликеНом(текстр,ТекКол)  
    СписокТипов=СоздатьОбъект("СписокЗначений");
    СписокТипов.ДобавитьЗначение("Товар");
    СписокТипов.ДобавитьЗначение("Материал");
    Если (ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(текстр,"Тип"))=1)или(ТекКол="Тип") Тогда
        Зн=""; 
        Если СписокТипов.ВыбратьЗначение(зн,,,,2)=1 Тогда
            СоответствиеНоменклатуры.УстановитьЗначение(текстр,"тип",Зн);
        КонецЕсли;
    КонецЕсли;      
    Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(ТекСтр,"Тип"));    
    Если Тип="Товар" Тогда
        СтрокаСправочника="Справочник.Номенклатура";
    Иначе
        СтрокаСправочника="Справочник.Материалы";
    КонецЕсли;   
    Если ТекКол="Тип" Тогда    
        
    ИначеЕсли ТекКол<>"_7" Тогда  
        Если  Упрощенка=1 Тогда
            //ОткрытьПодбор("Справочник.Номенклатура","Основная",контекст,0,СоответствиеНоменклатуры.ПолучитьЗначение(текстр,7)); 
            ОткрытьПодбор("Справочник.Номенклатура","ФормаСписка",контекст,0,СоответствиеНоменклатуры.ПолучитьЗначение(текстр,7)); 
        Иначе
            ОткрытьПодбор(СтрокаСправочника,"ФормаСписка",контекст,0,СоответствиеНоменклатуры.ПолучитьЗначение(текстр,7)); 
        КонецЕсли;   
    Иначе       
        Если ПустоеЗначение(СоответствиеНоменклатуры.ПолучитьЗначение(текстр,7))=1 Тогда    
            Ном=СоздатьОбъект(СтрокаСправочника); 
            Ном.ИспользоватьДату(ТекущаяДата());
            Ном.Новый();
            Ном.Наименование=СоответствиеНоменклатуры.Наимиико;  
            ТруКодном=ТруКодн(СоответствиеНоменклатуры.КодИИКо);
            ннном=СоздатьОбъект(СтрокаСправочника); 
            Если ннном.НайтиПоКоду(ТруКодном,0)=0 Тогда
                Ном.Код=ТруКодном;   
            Иначе
                Ном.УстановитьНовыйКод();
            КонецЕсли;
            Ном.ЕдиницаИзмерения = глЗначениеПоУмолчанию("ОсновнаяЕдиницаИзмерения");
            Если Тип="Товар" Тогда
                Ном.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар;
                Если Упрощенка=0 Тогда
                     Ном.ТипТовара = Перечисление.ТипыТоваров.Собственный;
                КонецЕсли;
                Ном.СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
                Ном.СтавкаНП = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП");
                Если Упрощенка=0 Тогда
                     Ном.СтранаПроисхожд = 1;          
                 иначе    
                     Ном.СтранаПроисхождения = 1;          
                КонецЕсли;
            Иначе
                Ном.СубСчет10 = СчетПоКоду("10.1");
            КонецЕсли;
            Ном.Записать();     
        Иначе    
            Ном=СоздатьОбъект(СтрокаСправочника); 
            Ном.НайтиЭлемент(СоответствиеНоменклатуры.ПолучитьЗначение(текстр,7));
        КонецЕсли;
        ОткрытьФормуМодально(Ном.ТекущийЭлемент());   
        ОбработкаПодбора(Ном.ТекущийЭлемент(),Контекст);
    КонецЕсли;
КонецПроцедуры //ПриКликеНом 


Процедура ПриКликеГруп(текстр,ТекКол)  
    СписокТипов=СоздатьОбъект("СписокЗначений");
    СписокТипов.ДобавитьЗначение("Товар");
    СписокТипов.ДобавитьЗначение("Материал");
    Если (ПустоеЗначение(СоответвиеГруппНом.ПолучитьЗначение(текстр,"Тип"))=1)или(ТекКол="Тип") Тогда
        Зн=""; 
        Если СписокТипов.ВыбратьЗначение(зн,,,,2)=1 Тогда
            СоответвиеГруппНом.УстановитьЗначение(текстр,"тип",Зн);
        КонецЕсли;
    КонецЕсли;      
    Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(ТекСтр,"Тип"));    
    Если Тип="Товар" Тогда
        СтрокаСправочника="Справочник.Номенклатура";
    Иначе
        СтрокаСправочника="Справочник.Материалы";
    КонецЕсли;   
    //Если ТекКол="Тип" Тогда    
        Если  Упрощенка=1 Тогда
            //ОткрытьПодбор("Справочник.Номенклатура","Основная",контекст,0,СоответвиеГруппНом.ПолучитьЗначение(ТекСтр,"Наим1с")); 
            ОткрытьПодбор("Справочник.Номенклатура","ФормаСписка",контекст,0,СоответвиеГруппНом.ПолучитьЗначение(ТекСтр,"Наим1с")); 
        Иначе
            ОткрытьПодбор(СтрокаСправочника,"ФормаСписка",контекст,0,СоответвиеГруппНом.ПолучитьЗначение(ТекСтр,"Наим1с")); 
        КонецЕсли;   
    //Иначе       
    //    Если ПустоеЗначение(СоответвиеГруппНом.ПолучитьЗначение(ТекСтр,"Номенклатура"))=1 Тогда    
    //        Ном=СоздатьОбъект(СтрокаСправочника); 
    //        Ном.ИспользоватьДату(ТекущаяДата());
    //        Ном.Новый();
    //        Ном.Наименование=СоответвиеГруппНом.Наимиико;  
    //        ТруКодном=ТруКодн(СоответствиеНоменклатуры.КодИИКо);
    //        ннном=СоздатьОбъект(СтрокаСправочника); 
    //        Если ннном.НайтиПоКоду(ТруКодном,0)=0 Тогда
    //            Ном.Код=ТруКодном;   
    //        Иначе
    //            Ном.УстановитьНовыйКод();
    //        КонецЕсли;
    //        Ном.ЕдиницаИзмерения = глЗначениеПоУмолчанию("ОсновнаяЕдиницаИзмерения");
    //        Если Тип="Товар" Тогда
    //            Ном.ТипНоменклатуры = Перечисление.ТипыНоменклатуры.Товар;
    //            Если Упрощенка=0 Тогда
    //                 Ном.ТипТовара = Перечисление.ТипыТоваров.Собственный;
    //            КонецЕсли;
    //            Ном.СтавкаНДС = глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС");
    //            Ном.СтавкаНП = глЗначениеПоУмолчанию("ОсновнаяСтавкаНП");
    //            Если Упрощенка=0 Тогда
    //                 Ном.СтранаПроисхожд = 1;          
    //             иначе    
    //                 Ном.СтранаПроисхождения = 1;          
    //            КонецЕсли;
    //        Иначе
    //            Ном.СубСчет10 = СчетПоКоду("10.1");
    //        КонецЕсли;
    //        Ном.Записать();     
    //    Иначе    
    //        Ном=СоздатьОбъект(СтрокаСправочника); 
    //        Ном.НайтиЭлемент(СоответствиеНоменклатуры.ПолучитьЗначение(текстр,7));
    //    КонецЕсли;
    //    ОткрытьФормуМодально(Ном.ТекущийЭлемент());   
    //    ОбработкаПодбора(Ном.ТекущийЭлемент(),Контекст);
    //КонецЕсли;
КонецПроцедуры //ПриКликеГруп  


Процедура ПриКликеСкл(текстр,ТекКол)
    Если ТекКол="Загружать" Тогда  
		СоответствиеСкладов.ПолучитьСтрокуПоНомеру(текстр);
		Если СоответствиеСкладов.Загружать=1 Тогда
			СоответствиеСкладов.Загружать=2;
		Иначе                  
			СоответствиеСкладов.Загружать=1;
		КонецЕсли;
    ИначеЕсли ТекКол<>"_3" Тогда
        ОткрытьПодбор("Справочник.МестаХранения","ФормаСписка",контекст,0,СоответствиеСкладов.ПолучитьЗначение(текстр,4));
    Иначе       
        Если ПустоеЗначение(СоответствиеСкладов.ПолучитьЗначение(текстр,4))=1 Тогда
            Скл=СоздатьОбъект("Справочник.МестаХранения"); 
            Скл.Новый();
            Скл.Наименование=СоответствиеСкладов.Наимиико;
            Скл.ТипСклада=Перечисление.ТипыСкладов.Оптовый;
            Скл.Записать();     
        Иначе    
            Скл=СоздатьОбъект("Справочник.МестаХранения"); 
            Скл.НайтиЭлемент(СоответствиеСкладов.ПолучитьЗначение(текстр,4));
        КонецЕсли;
        ОткрытьФормуМодально(Скл.ТекущийЭлемент());   
        ОбработкаПодбора(Скл.ТекущийЭлемент(),Контекст);
    КонецЕсли;
КонецПроцедуры //ПриКликеСкл                  
   
Процедура ПриКликеКонтра(текстр,ТекКол)  
	Если ТекКол="Загружать" Тогда  
		СоответствиеКотрагентов.ПолучитьСтрокуПоНомеру(текстр);
		Если СоответствиеКотрагентов.Загружать=1 Тогда
			СоответствиеКотрагентов.Загружать=2;
		Иначе                  
			СоответствиеКотрагентов.Загружать=1;
		КонецЕсли;
    ИначеЕсли ТекКол<>"_7" Тогда    
		НастройкаКонтр=0;
        ОткрытьПодбор("Справочник.Контрагенты","ФормаСписка",контекст,0,СоответствиеКотрагентов.ПолучитьЗначение(текстр,8));   
    Иначе        
        Если ПустоеЗначение(СоответствиеКотрагентов.ПолучитьЗначение(текстр,8))=1 Тогда
            Контр=СоздатьОбъект("Справочник.Контрагенты");
            Контр.Новый();
            Контр.Наименование=СоответствиеКотрагентов.Наимиико;
            Контр.ВидКонтрагента=Перечисление.ВидыКонтрагентов.Организация;
            Контр.Код=ТруКод(СоответствиеКотрагентов.КодИИко);
            Контр.Инн=СоответствиеКотрагентов.ИннИИко; 
            Попытка 
                Контр.Записать();   
            Исключение        
                Если Контр.НайтиПоНаименованию(СокрЛП(СоответствиеКотрагентов.Наимиико),0,1)=1 тогда
                    ОткрытьФормуМодально(Контр.ТекущийЭлемент()); 
                    ОбработкаПодбора(Контр.ТекущийЭлемент(),Контекст);
                    Возврат;         
                ИначеЕсли Контр.НайтиПоКоду(ТруКод(СоответствиеКотрагентов.КодИИко))=1 Тогда
                    ОткрытьФормуМодально(Контр.ТекущийЭлемент()); 
                    ОбработкаПодбора(Контр.ТекущийЭлемент(),Контекст);
                    Возврат;         
                Иначе
                    Возврат;
                КонецЕсли;
            КонецПопытки;    
            СпрДог = СоздатьОбъект("Справочник.Договоры");
            СпрДог.ИспользоватьВладельца(Контр.ТекущийЭлемент());
            СпрДог.Новый();
            СпрДог.Наименование = "Основной договор";
            СпрДог.ВидДоговора  = глЗначениеПоУмолчанию("ОсновнойВидДоговоров");
            СпрДог.ОплатаДоговора = 1;
            Попытка
                СпрДог.АвтоОбработкаНДС = ?(Константа.АвтоКнигаПокупокПродаж = Да, 1, 0);
            Исключение
            КонецПопытки;
            СпрДог.Записать();
            Контр.ОсновнойДоговор = СпрДог.ТекущийЭлемент();
            Контр.Записать();
        Иначе
            Контр=СоздатьОбъект("Справочник.Контрагенты");
            Контр.НайтиЭлемент(СоответствиеКотрагентов.ПолучитьЗначение(текстр,8));
        КонецЕсли;
        ОткрытьФормуМодально(Контр.ТекущийЭлемент());   
        ОбработкаПодбора(Контр.ТекущийЭлемент(),Контекст);
    КонецЕсли;
КонецПроцедуры //ПриКликеКонтра 
                  
Процедура ЗаписатьДокумент1С(СтарыйНомер, Док, название)
    Если ПустоеЗначение(СтарыйНомер)=0 Тогда
        Попытка
            Док.Записать();  
            СписокНакладных.ДобавитьЗначение(Док.ТекущийДокумент());
			Сообщить(название+" № "+Док.НомерДок+", дата: " +Док.ДатаДок +" записана!");
        Исключение           
            //Сообщить(ОписаниеОшибки());
            //Сообщить("Накладная № "+Док.НомерДок+" уже существует в базе!!!");  
            Если ЗаменятьДокументы=0 Тогда
                Сообщить(название+" с № "+Док.НомерДок+", дата: " +Док.ДатаДок +" уже существует в базе.");
            Иначе
                ддд=СоздатьОбъект(СтрокаДокумента);  
                Если ддд.НайтиПоНомеру(сокрЛП(Док.НомерДок),Док.ДатаДок)>0 тогда
                    ддд.Удалить(1); 
                    Сообщить(название+" № "+Док.НомерДок+", дата: " +Док.ДатаДок + " заменена!");
                КонецЕсли;
                Док.Записать();   
                СписокНакладных.ДобавитьЗначение(Док.ТекущийДокумент());
            КонецЕсли;
	    КонецПопытки;    
	КонецЕсли;
КонецПроцедуры

Функция СвернутьПеремещение(Типп)
	Склады=СоздатьОбъект("Справочник.МестаХранения");  
	НомерНомера=НачИменаКолонок2.НайтиЗначение("Номер");
    НомерДаты=НачИменаКолонок2.НайтиЗначение("Дата");
    НомерКонтра=НачИменаКолонок2.НайтиЗначение("Поставщик(код)"); 
    НомерСкладаПол=НачИменаКолонок2.НайтиЗначение("Складполучатель(наименование)"); 
    НомерСкладаОтп=НачИменаКолонок2.НайтиЗначение("Складотправитель(наименование)");
	
	ТабЗнач = СоздатьОбъект("ТаблицаЗначений");
    ТабЗнач.НоваяКолонка("Номер"); 
	ТабЗнач.НоваяКолонка("Дата");
	ТабЗнач.НоваяКолонка("Продукт"); 
	ТабЗнач.НоваяКолонка("Складотправитель");   
	ТабЗнач.НоваяКолонка("Складполучатель"); 
	ТабЗнач.НоваяКолонка("Количество");
	ТабЗнач.НоваяКолонка("Сумма");
	
	Тз2.ВыбратьСТроки();   
    нн=0;  
    Пока Тз2.ПолучитьСтроку()=1 Цикл    
		нн=нн+1;      
		Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(Тз.ЮЛнаименование)<>Юрлицо Тогда
                 Продолжить;
            КонецЕсли;
		КонецЕсли;
		
		стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Тз2.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз2.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз2.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Тз2.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли; 
		              
		Если Упрощенка=0 Тогда
			Если Типп="Н" Тогда
                Если Тип<>"Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            Иначе
                Если Тип="Товар" Тогда
                    Продолжить;
                КонецЕсли;      
			КонецЕсли;
		КонецЕсли;	
		// фильтрация по складу                  
		игн=0;
		Складотправитель=НайтиСкладСФильтром(Тз2.ПолучитьЗначение(нн,НомерСкладаОтп), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
		игн=0;
		Складполучатель=НайтиСкладСФильтром(Тз2.ПолучитьЗначение(нн,НомерСкладаПол), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
		
		ТабЗнач.НоваяСтрока();
		
		Если ФормаГруппировкаНоменклатуры=1 Тогда
			ТабЗнач.Продукт=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
        Иначе
            ТабЗнач.Продукт=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с"); 
		КонецЕсли;
		
		ТабЗнач.Номер=Тз2.ПолучитьЗначение(нн,НомерНомера);
		ТабЗнач.Дата=Тз2.ПолучитьЗначение(нн,НомерДаты);
        ТабЗнач.Складотправитель=Складотправитель; 
        ТабЗнач.Складполучатель=Складполучатель;
		
		ТабЗнач.Количество=Число(СтрЗаменить(Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("Количество")),",","."));
		ТабЗнач.Сумма=Число(СтрЗаменить(Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("СебестоимостьбезНДС")),",","."));
	    
		Если СвернутьТовары=1 Тогда
			ТабЗнач.Свернуть("Номер,Дата,Продукт,Складотправитель,Складполучатель","Количество,Сумма");
		КонецЕсли;
		
	КонецЦикла;	
	Возврат ТабЗнач; 
КонецФункции 	

Процедура СоздатьПеремещение(Типп) 
    Если Упрощенка=0 Тогда
        СтрокаДокумента="Документ."+?(Типп="Н","ПеремещениеТоваров","ТребованиеНакладная");
    Иначе
        СтрокаДокумента="Документ.ПеремещениеМПЗ";
	КонецЕсли;       
	Док=СоздатьОбъект(СтрокаДокумента); 
    ТабЗнач=СвернутьПеремещение(Типп);
	
    СтарыйНомер=""; 
    
	ТабЗнач.ВыбратьСТроки();   
    Пока ТабЗнач.ПолучитьСтроку()=1 Цикл  
        Состояние("Загружаются перемещения");   
        
		СкладОтправитель=ТабЗнач.СкладОтправитель;
		СкладПолучатель=ТабЗнач.СкладПолучатель;
		
        НомерДока=НомерНакладной2(ТабЗнач.Номер,Типп,СтрокаДокумента,ТабЗнач.Дата);   
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда                    
			Если ПустоеЗначение(СтарыйНомер)=0 Тогда
				Если ТабЗнач.СкладОтправитель=ТабЗнач.СкладПолучатель Тогда  
                	Сообщить("Перемещение с номером "+НомерДока+" не записано. Так как склад получатель и склад отправитель совпадают!");
                    Продолжить;
                КонецЕсли;	
			КонецЕсли;
			ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента); 
  
            Док.Новый();  
			Если Упрощенка=1 Тогда
	 			Док.ВидПеремещения=1;
			КонецЕсли; 
            УстановитьВремяДок(Док, ТабЗнач.Дата);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;        
            Если (Типп="Н") и (Упрощенка=0) Тогда   
                Док.Склад=ТабЗнач.Складотправитель;
                Док.СкладПолучатель=ТабЗнач.СкладПолучатель; 
                Если Упрощенка=0 Тогда
                        Док.ВидПеремещения=0;  
                    Док.НдсВключатьВстоимость= 0;
                КонецЕсли;   
            Иначе 
                Док.МестоХранения=ТабЗнач.Складотправитель; 
                Док.МестоХраненияПриемник=ТабЗнач.СкладПолучатель; 
                Если Упрощенка=0 Тогда
                    Док.ВидПеремещения=1;  
                КонецЕсли;   
            КонецЕсли;
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        
		Если (Упрощенка=1) и (ТабЗнач.Сумма=0) Тогда
			Сообщить("Сумма=0 для товара "+ТабЗнач.Продукт+", к-во="+ТабЗнач.Количество);
			Продолжить;
		КонецЕсли; 	
		
        Док.НоваяСтрока();  

        Если Упрощенка=0 Тогда 
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если Типп="Н" Тогда
                    Док.Товар=ТабЗнач.Продукт; 
                    Док.Количество=ТабЗнач.Количество;  
                Иначе
                    Док.Материал=ТабЗнач.Продукт; 
                    Док.КоличествоЗатребовано=ТабЗнач.Количество;  
                    Док.КоличествоОтпущено=Док.КоличествоЗатребовано;  
                КонецЕсли;  
            Иначе
                Если Типп="Н" Тогда
                    Док.Товар=ТабЗнач.Продукт; 
                    Док.Количество=ТабЗнач.Количество;  
                Иначе
                    Док.Материал=ТабЗнач.Продукт; 
                    Док.КоличествоЗатребовано=ТабЗнач.Количество;  
                    Док.КоличествоОтпущено=Док.КоличествоЗатребовано;  
                КонецЕсли;  
            КонецЕсли;
        Иначе    
            Док.Номенклатура=ТабЗнач.Продукт;  
            Док.Количество=ТабЗнач.Количество;  
            Док.Сумма=ТабЗнач.Сумма; 
        КонецЕсли; 
    КонецЦикла;     
   
	Если ПустоеЗначение(СтарыйНомер)=0 Тогда
		Если СкладОтправитель=СкладПолучатель Тогда  
       		Сообщить("Перемещение с номером "+НомерДока+" не записано. Так как склад получатель и склад отправитель совпадают!");
        КонецЕсли;	
	КонецЕсли;
	ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента); 
КонецПроцедуры        


Процедура СоздатьПеремещениеВРозницу(Типп,табзз)    
    Если Упрощенка=1 тогда
        Возврат;
    КонецЕСли;
    СтрокаДокумента="Документ."+?(Типп="Н","ПеремещениеТоваров","ТребованиеНакладная");
    Док=СоздатьОбъект(СтрокаДокумента);
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=НачИменаКолонок1.НайтиЗначение("Номер");
    НомерДаты=НачИменаКолонок1.НайтиЗначение("Дата");
    НомерСкладаПол=НачИменаКолонок1.НайтиЗначение("Склад(наименование)"); 
    НомерСкладаОтп=НачИменаКолонок1.НайтиЗначение("Склад(наименование)"); 
    табзз.ВыбратьСТроки();   
    нн=0;  
    Пока табзз.ПолучитьСтроку()=1 Цикл   
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(табзз.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются перемещения");
		// фильтрация по складу
		игн=0;
		Склад=НайтиСкладСФильтром(табзз.ПолучитьЗначение(нн,НомерСкладаОтп), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли; 
		СкладПолучатель=НайтиСкладСФильтром(табзз.ПолучитьЗначение(нн,НомерСкладаПол), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
		
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(табзз.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                                
		Дата1=табзз.ПолучитьЗначение(нн,НомерДаты);
        НомерДока=НомерНакладной2(табзз.ПолучитьЗначение(нн,НомерНомера),Типп,СтрокаДокумента,Дата1);
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда  
			ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента); 
            Если Типп="Н" Тогда
                Если Тип<>"Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            Иначе
                Если Тип="Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            КонецЕсли;
            Док.Новый();   
            Док.ВидПеремещения=1;
            УстановитьВремяДок(Док, Дата1);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;        
            Если Типп="Н" Тогда
                Док.Склад=Склад; 
                Док.СкладПолучатель=СкладПолучатель; 
                Если Упрощенка=0 Тогда
                        //Док.ВидПеремещения=0;  
                    Док.НдсВключатьВстоимость= 0;
                КонецЕсли;   
            КонецЕсли;
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        Если Типп="Н" Тогда
            Если Тип<>"Товар" Тогда
                Продолжить;
            КонецЕсли;      
        Иначе
            Если Тип="Товар" Тогда
                Продолжить;
            КонецЕсли;      
        КонецЕсли;
        Док.НоваяСтрока();  
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(табзз.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
        КонецЕсли;
        Если Упрощенка=0 Тогда
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если Типп="Н" Тогда
                    Док.Товар=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7); 
                    Док.Количество=Число(СтрЗаменить(табзз.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Количество")),",","."));  
                Иначе
                    Док.Материал=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7); 
                    Док.КоличествоЗатребовано=Число(СтрЗаменить(табзз.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Количество")),",","."));  
                    Док.КоличествоОтпущено=Док.КоличествоЗатребовано;  
                КонецЕсли;  
            Иначе
                Если Типп="Н" Тогда
                    Док.Товар=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с"); 
                    Док.Количество=Число(СтрЗаменить(табзз.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Количество")),",","."));  
                Иначе
                    Док.Материал=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с"); 
                    Док.КоличествоЗатребовано=Число(СтрЗаменить(табзз.ПолучитьЗначение(нн,НачИменаКолонок1.НайтиЗначение("Количество")),",","."));  
                    Док.КоличествоОтпущено=Док.КоличествоЗатребовано;  
                КонецЕсли;  
            КонецЕсли;
        Иначе    
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Док.Номенклатура=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
            Иначе
                Док.Номенклатура=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с"); 
            КонецЕсли;
            Док.Всего=Число(СтрЗаменить(Тз2.ПолучитьЗначение(нн,НачИменаКолонок2.НайтиЗначение("СуммасНДС")),",",".")); 
        КонецЕсли; 
    КонецЦикла;     
    ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);       
КонецПроцедуры

//Функция ПолучитьТоварНакладной(стрр, Тз)
//    Если ФормаГруппировкаНоменклатуры=1 Тогда
//        Товар = СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
//    Иначе           
//        Если ФормаГруппировкаНоменклатуры=2 Тогда    
//            ключ=Тз.СтавкаНДС;
//        Иначе 
//            ключ=""+Тз.ГруппаУчетаНазвание+"/"+Тз.СтавкаНДС;
//        КонецЕсли;
//        номстр=0;
//        Если СоответвиеГруппНом.НайтиЗначение (ключ, номстр, "СтавкаНДС") = 1 Тогда
//            Товар = СоответвиеГруппНом.ПолучитьЗначение(номстр, "Наим1С");
//        Иначе
//            Сообщить("Не найден товар со СтавкаНДС=" + ключ); 
//        КонецЕсли;
//    КонецЕсли;      
//    Возврат Товар
//КонецФункции                 
      
Функция СвернутьНакладную(товары)     
	Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=НачИменаКолонок.НайтиЗначение("Номер");
    НомерДаты=НачИменаКолонок.НайтиЗначение("Дата");
    НомерКонтра=НачИменаКолонок.НайтиЗначение("Поставщик(код)"); 
    НомерСклада=НачИменаКолонок.НайтиЗначение("Склад(наименование)") ;
	
	ТабЗнач = СоздатьОбъект("ТаблицаЗначений");
    ТабЗнач.НоваяКолонка("Продукт"); 
	ТабЗнач.НоваяКолонка("Номер"); 
	ТабЗнач.НоваяКолонка("Дата"); 
	ТабЗнач.НоваяКолонка("Поставщик");   
	ТабЗнач.НоваяКолонка("Склад"); 
	//ТабЗнач.НоваяКолонка("Тип"); 
	ТабЗнач.НоваяКолонка("ВходДата"); 
	ТабЗнач.НоваяКолонка("ВходНомер");
	ТабЗнач.НоваяКолонка("СуммаНДС");
	ТабЗнач.НоваяКолонка("СуммасНДС");
	ТабЗнач.НоваяКолонка("СтавкаНДС");
	ТабЗнач.НоваяКолонка("ЦенасНДС");
	ТабЗнач.НоваяКолонка("Колво");       
	ТабЗнач.НоваяКолонка("Счетфактура");
	                
	нн=0;
	Тз.ВыбратьСТроки();  
    Пока Тз.ПолучитьСтроку()=1 Цикл      
		нн=нн+1;
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(Тз.ЮЛнаименование)<>Юрлицо Тогда
                 Продолжить;
            КонецЕсли;
		КонецЕсли;     
		
		//
		стррНом="";              
		Если ФормаГруппировкаНоменклатуры=1 Тогда
            	СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Тз.ПолучитьЗначение(нн,"НКодИИКО")),стррНом,"Кодиико"); 
            	Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стррНом,"Тип"));      
        	ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            	СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз.ПолучитьЗначение(нн,"СтавкаНДС")),стррНом,"СтавкаНДС"); 
            	Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стррНом,"Тип"));      
        	Иначе
            	СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Тз.ПолучитьЗначение(нн,"Ставкандс")),стррНом,"СтавкаНДС"); 
            	Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стррНом,"Тип"));      
			КонецЕсли;  
			
		Если Упрощенка=0 Тогда
		    Если товары=1 Тогда
                Если Тип<>"Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            Иначе
                Если Тип="Товар" Тогда
                    Продолжить;
                КонецЕсли;      
		    КонецЕсли;
		КонецЕсли;	     
		// фильтрация по контрагенту          
		стрр1="";
		СоответствиеКотрагентов.НайтиЗначение(Тз.ПолучитьЗначение(нн,НомерКонтра),стрр1,"Кодиико");
		Если СоответствиеКотрагентов.ПолучитьЗначение(стрр1,9)=1 Тогда
			Продолжить;
		КонецЕсли;
		Поставщик=СоответствиеКотрагентов.ПолучитьЗначение(стрр1,8);
        // фильтрация по складу		
		игн=0;
		Склад=НайтиСкладСФильтром(Тз.ПолучитьЗначение(нн,НомерСклада), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
	
		ТабЗнач.НоваяСтрока();	
		
		Если ФормаГруппировкаНоменклатуры=1 Тогда
            ТабЗнач.Продукт=СоответствиеНоменклатуры.ПолучитьЗначение(стррНом,7);
        Иначе
            ТабЗнач.Продукт=СоответвиеГруппНом.ПолучитьЗначение(стррНом,"Наим1с");
		КонецЕсли;
		ТабЗнач.Номер=Тз.ПолучитьЗначение(нн,НомерНомера); 
		ТабЗнач.Дата=Тз.ПолучитьЗначение(нн,НомерДаты);
		ТабЗнач.ВходДата=Тз.ПолучитьЗначение(нн,"Входдата");
		ТабЗнач.ВходНомер=Тз.ПолучитьЗначение(нн,"Входномер");  
		ТабЗнач.Счетфактура=Тз.ПолучитьЗначение(нн,"Счетфактура");  
		ТабЗнач.Поставщик=Поставщик;    
        ТабЗнач.Склад=Склад;
		ТабЗнач.СуммаНДС=Число(СтрЗаменить(Тз.ПолучитьЗначение(нн,"СуммаНДС"),",","."));
		ТабЗнач.СуммасНДС=Число(СтрЗаменить(Тз.ПолучитьЗначение(нн,"СуммасНДС"),",",".")); 
		ТабЗнач.СтавкаНДС=Число(СтрЗаменить(Тз.ПолучитьЗначение(нн,"СтавкаНДС"),",","."));  
		ТабЗнач.ЦенасНДС=Число(СтрЗаменить(Тз.ПолучитьЗначение(нн,"ЦенасНДС"),",","."));  
		ТабЗнач.Колво=Число(СтрЗаменить(Тз.ПолучитьЗначение(нн,"Колво"),",","."));  
		
		Если СвернутьТовары=1 Тогда
			ТабЗнач.Свернуть("Продукт,Номер,Дата,Поставщик,Склад,ВходДата,ВходНомер,СтавкаНДС,Счетфактура","СуммаНДС,СуммасНДС,ЦенасНДС,Колво");
			
			ТабЗнач.ВыбратьСтроки();
			Пока ТабЗнач.ПолучитьСтроку()=1 Цикл        
				ТабЗнач.Колво=1;   
			    ТабЗнач.ЦенасНДС=ТабЗнач.СуммасНДС/ТабЗнач.Колво;
			КонецЦикла; 
		КонецЕсли;

		
	КонецЦикла;
	Возврат ТабЗнач; 
КонецФункции

Процедура Создатьнакладную(префикс, товары)     
    Если Упрощенка=0 Тогда
        СтрокаДокумента="Документ."+?(товары=1,"ПоступлениеТоваров","ПоступлениеМатериалов");
    Иначе
        СтрокаДокумента="Документ.ПоступлениеМПЗ";
    КонецЕсли;
    Док=СоздатьОбъект(СтрокаДокумента);
	ТабЗнач=СвернутьНакладную(товары);     
	
    СтарыйНомер=""; 

    ТабЗнач.ВыбратьСТроки();  
    нн=0;  
    СтавкиНДС=СоздатьОбъект("Справочник.СтавкиНДС");
    Пока ТабЗнач.ПолучитьСтроку()=1 Цикл      
        нн=нн+1;           
        Состояние("Загружаются накладные");   
        //Тип=ТабЗнач.Тип;
        НомерДока=НомерНакладной2(ТабЗнач.Номер,префикс,СтрокаДокумента,ТабЗнач.Дата);
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда         
			ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента); 
                  
            Док.Новый();   
			Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;
			УстановитьВремяДок(Док, ТабЗнач.Дата);
			Если (Бугалтерия=1) или (товары=1) Тогда
            	Док.ДатаДокВходящий=ТабЗнач.ВходДата;
				Док.НомерДокВходящий=ТабЗнач.ВходНомер; 
			КонецЕсли;
            Док.Контрагент=ТабЗнач.Поставщик; 
            Док.Договор=Док.Контрагент.ОсновнойДоговор;    
            Док.МестоХранения=ТабЗнач.Склад; 
            Если Упрощенка=0 Тогда      
				Если Бугалтерия=1 Тогда
					Док.ВерсияОбъекта = Константа.НомерРелиза;
	                Если товары=1 Тогда
                    	Док.ВидПоступления=1;  
                	Иначе
                    	Док.ВидПоступления=0;  
					КонецЕсли;
					Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;     
				Иначе
				//	Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;     
				КонецЕсли;                  
                   
                Док.ДатаНомерСчетаФактуры=ТабЗнач.Счетфактура;
				Если (Бугалтерия=1) или (товары=1) Тогда
                	Док.НдсВключатьВстоимость=НДСвкл;
					Док.Курс=1;
				КонецЕсли;
			Иначе
				Если НДСвкл=1 Тогда
			        Док.НеПринимаемые=1; //Счет 60.1
				КонецЕсли;  
				Док.Курс=1;
            КонецЕсли;         
            

            СтарыйНомер=НомерДока;
        КонецЕсли; 

		Док.НоваяСтрока();  
     
		Док.НДС=ТабЗнач.СуммаНДС;
        Если Упрощенка=0 Тогда 
			Если Бугалтерия=1 Тогда
				Если товары=1 Тогда
	                Док.Товар=ТабЗнач.Продукт; 
    	        Иначе
        	        Док.Материал=ТабЗнач.Продукт;
				КонецЕсли;   
			Иначе                      
				
				Если товары=1 Тогда
	                Док.ВидМПЗ=Перечисление.ВидыМПЗ.Товары;
					Док.Товар=ТабЗнач.Продукт;
    	        Иначе
        	    //	Док.ВидМПЗ=Перечисление.ВидыМПЗ.Материалы;
					Док.Материал=ТабЗнач.Продукт;
				КонецЕсли;   
			КонецЕсли;	

            Док.Сумма=ТабЗнач.СуммасНДС; 
            Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда 
                Док.Всего=?(Док.ВариантРасчетаНалогов.СуммаВключаетНДС=1,Док.Сумма,Док.Сумма+Док.НДС);  
            Иначе
                Док.Всего=Док.Сумма;  
			КонецЕсли;    
		Иначе  
            Док.Номенклатура=ТабЗнач.Продукт;  
            Док.Всего=ТабЗнач.СуммасНДС; 
            СтНДС=ТабЗнач.СтавкаНДС;
            Если СтавкиНДС.НайтиПоРеквизиту("Ставка",СтНДС,1)=1 тогда
                Док.СтавкаНДС=СтавкиНДС.ТекущийЭлемент();
            КонецЕсли; 
        КонецЕсли; 
        Док.Цена=ТабЗнач.ЦенасНДС;  
        Док.Количество=ТабЗнач.Колво;  
	КонецЦикла;    
	ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента); 
КонецПроцедуры


Процедура СоздатьРнакладную(Типп,Табз2)   
    Если Упрощенка=0 тогда
        СтрокаДокумента="Документ."+?(Типп="Н","РасходнаяНакладная","ОтпускМатериаловНаСторону");
    Иначе
        СтрокаДокумента="Документ.Реализация";
    КонецЕсли;
    Док=СоздатьОбъект(СтрокаДокумента);
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=УмныеИменаКолонок8.НайтиЗначение("НомерДок");
    НомерДаты=УмныеИменаКолонок8.НайтиЗначение("Дата");
    НомерКонтра=УмныеИменаКолонок8.НайтиЗначение("Поставщиккод"); 
    НомерСклада=УмныеИменаКолонок8.НайтиЗначение("Складнаименование"); 
    //Табз2=ПроверитьТаблицу(тз8);
    //Тз.Сортировать(""+НомерНомера+","+НомерКонтра);
    Табз2.ВыбратьСТроки();  
    нн=0;  
    СтавкиНДС=СоздатьОбъект("Справочник.СтавкиНДС");
    Пока Табз2.ПолучитьСтроку()=1 Цикл 
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(Табз2.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются накладные");   
		// фильтрация по складу
		игн=0;
		МестоХранения=НайтиСкладСФильтром(Табз2.ПолучитьЗначение(нн,НомерСклада), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;      
		// фильтрация по контрагенту
		стрр="";
		СоответствиеКотрагентов.НайтиЗначение(Табз2.ПолучитьЗначение(нн,"КкодИИКО"),стрр,"Кодиико");
		Если СоответствиеКотрагентов.ПолучитьЗначение(стрр,9)=1 Тогда
			Продолжить;
		КонецЕсли;
		Контрагент=СоответствиеКотрагентов.ПолучитьЗначение(стрр,8);
		
        стрр="";              
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Табз2.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Табз2.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Табз2.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Табз2.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                       
		дата1=Табз2.ПолучитьЗначение(нн,НомерДаты);
        НомерДока=НомерНакладной2(Табз2.ПолучитьЗначение(нн,НомерНомера),Типп,СтрокаДокумента,дата1);
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда
            ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);   
            Если Типп="Н" Тогда
                Если Тип<>"Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            Иначе
                Если Тип="Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            КонецЕсли;
            Док.Новый();
            УстановитьВремяДок(Док, дата1);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;  
            Док.Контрагент=Контрагент; 
            Док.Договор=Док.Контрагент.ОсновнойДоговор;    
            Док.МестоХранения=МестоХранения; 
            Если Упрощенка=0 Тогда
                //Док.ВидПоступления=?(пн=1,1,0);   
                Если Типп="Н" Тогда
                    Док.ВидОтгрузки=1;  
                Иначе
                    Док.ВидОтпуска=0;  
                КонецЕсли;
                Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;   
                Док.НдсВключатьВстоимость= НДСвкл;
            КонецЕсли;        
            //Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда
            //КонецЕсли;                                                                
            //Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;
            //Док.НдсВключатьВстоимость= 1;
            Док.Курс=1;
            //Док.ТипЦен=Константа.ОсновнаяЦенаПриобретения;
            //Док.ВключатьВКнигуПокупок=1;
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        Если Типп="Н" Тогда
            Если Тип<>"Товар" Тогда
                Продолжить;
            КонецЕсли;      
        Иначе
            Если Тип="Товар" Тогда
                Продолжить;
            КонецЕсли;      
        КонецЕсли;
        Док.НоваяСтрока();  
        стрр="";              
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Табз2.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Табз2.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Табз2.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Табз2.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
        КонецЕсли;
        Док.НДС=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"СуммаНДСспродаж"),",","."));  
        Если Упрощенка=0 Тогда
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если Типп="Н" Тогда
                    Док.Товар=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
                Иначе
                    Док.Материал=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
                КонецЕсли;  
            Иначе
                Если Типп="Н" Тогда
                    Док.Товар=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
                Иначе
                    Док.Материал=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
                КонецЕсли;  
            КонецЕсли;
            Док.Сумма=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"СуммапродажисНДС"),",",".")); 
            Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда 
                Док.Всего=?(Док.ВариантРасчетаНалогов.СуммаВключаетНДС=1,Док.Сумма,Док.Сумма+Док.НДС);  
            Иначе
                Док.Всего=Док.Сумма;  
            КонецЕсли;
            //Док.Всего=?(Док.НдсВключатьВстоимость=1,Док.Сумма,Док.Сумма+Док.НДС);  
        Иначе 
            Если ФормаГруппировкаНоменклатуры=1 Тогда 
                Док.Номенклатура=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
            Иначе
                Док.Номенклатура=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
            КонецЕсли;
            Док.Сумма=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"СуммапродажисНДС"),",",".")); 
            СтНДС=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"СтавкаНДС"),",","."));
            Если СтавкиНДС.НайтиПоРеквизиту("Ставка",СтНДС,1)=1 тогда
                Док.СтавкаНДС=СтавкиНДС.ТекущийЭлемент();
            КонецЕсли; 
        КонецЕсли; 
        Док.Цена=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"ЦенапродажисНДС"),",","."));  
        Если типп="Н" Тогда
            Док.Количество=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"Количество"),",","."));  
        Иначе    
            Док.КоличествоОтпущено=Число(СтрЗаменить(Табз2.ПолучитьЗначение(нн,"Количество"),",","."));  
        КонецЕсли;
    КонецЦикла;     
    ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);       
КонецПроцедуры
          
Процедура СохранитьОперацию(СтарыйНомер, Док)
	Если ПустоеЗначение(СтарыйНомер)=0 Тогда
        Попытка
            Док.Записать();  
            СписокНакладных.ДобавитьЗначение(Док.ТекущийДокумент());
            Сообщить("Операция № "+Док.Документ.НомерДок+", дата "+Док.Документ.ДатаДок+" записана в базу.");
        Исключение           
            //Сообщить(Описаниеошибки()+" Накладная № "+Док.НомерДок);  
            Если ЗаменятьДокументы=0 Тогда
                Сообщить("Операция № "+Док.Документ.НомерДок+", дата "+Док.Документ.ДатаДок+" уже существует в базе!!!");  
            Иначе
                ддд=СоздатьОбъект("Документ.Операция");  
                Если ддд.НайтиПоНомеру(сокрЛП(Док.Документ.НомерДок),Док.ДатаОперации)>0 тогда
                    ддд.Удалить(1); 
                    Сообщить("Операция № "+Док.Документ.НомерДок+", дата "+Док.Документ.ДатаДок+" заменена!");
                КонецЕсли;
                Док.Записать();   
                СписокНакладных.ДобавитьЗначение(Док.ТекущийДокумент());
            КонецЕсли;
        КонецПопытки;    
    КонецЕсли;        
КонецПроцедуры

Процедура СоздатьПриготовления(Типп,табзз)
    Сч20=СчетПоКоду("20");
    Сч41=СчетПоКоду("41.1"); 
    СчН0201=СчетПоКоду("Н02.01"); 
    СчН020201=СчетПоКоду("Н02.02.1"); 
    Док=СоздатьОбъект("Операция");
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    табзз.ВыбратьСТроки();  
    нн=0;  
    СтавкиНДС=СоздатьОбъект("Справочник.СтавкиНДС");
    Пока табзз.ПолучитьСтроку()=1 Цикл      
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(табзз.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются акты приготовления."); 
		// фиьтрация по складу
		игн=0;
		СкладПолучатель=НайтиСкладСФильтром(табзз.ПолучитьЗначение(нн,"Складприходанаименование"), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
		игн=0;
		СкладОтправитель=НайтиСкладСФильтром(табзз.ПолучитьЗначение(нн,"Складсписаниянаименование"), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табзз.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(табзз.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                              
		дата1= табзз.ПолучитьЗначение(нн,"Дата");
        НомерДока=НомерНакладной2(табзз.ПолучитьЗначение(нн,"НомерДок"),Типп,"Документ.Операция",дата1);  
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда         
			СохранитьОперацию(СтарыйНомер, Док);
               
            Док.Новая();
            УстановитьВремяДокОперации(Док,дата1);
			Если НомерИз1С=0 Тогда
            	Док.Документ.НомерДок=НомерДока;   
			КонецЕсли;
            СтарыйНомер=НомерДока;  
        КонецЕсли; 
        Док.НоваяПроводка();
        Если ФормаГруппировкаНоменклатуры=1 Тогда 
            Номеннн=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
        Иначе
            Номеннн=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
        КонецЕсли;
 
        Если Число(табзз.ЗнакОперации)=1 Тогда
            Док.Дебет.Счет=Сч41;
            Док.Дебет.Номенклатура=Номеннн;   
            Если Упрощенка=0 Тогда
                Док.Дебет.МестаХранения=СкладПолучатель;
            КонецЕСли;
            Док.Кредит.Счет=Сч20;
            Если Упрощенка=0 Тогда
                Док.Кредит.ВидыНоменклатуры=ВидНоменклатуры;
                Док.Кредит.СтатьиЗатратНаПроизводство=СтатьяЗатрат; 
            Иначе    
                Док.Кредит.ВидыДеятельности=ВидНоменклатуры;
                Док.Кредит.СтатьиЗатрат=СтатьяЗатрат; 
            КонецЕСли;
            Док.Количество=табзз.Количество;  
            Док.Сумма=табзз.СебестоимостьБезНДС;   
            Если Упрощенка=0 Тогда
                Док.НоваяПроводка();  
                Док.Дебет.Счет=СчН020201; 
                Док.Дебет.Номенклатура=Номеннн;
                Док.Количество=табзз.Количество;  
                Док.Сумма=табзз.СебестоимостьБезНДС;  
            КонецЕСли;
        Иначе              
            Док.Дебет.Счет=Сч20;
            Если Упрощенка=0 Тогда
                Док.Дебет.ВидыНоменклатуры=ВидНоменклатуры;
                Док.Дебет.СтатьиЗатратНаПроизводство=СтатьяЗатрат; 
            Иначе    
                Док.Дебет.ВидыДеятельности=ВидНоменклатуры;
                Док.Дебет.СтатьиЗатрат=СтатьяЗатрат; 
            КонецЕСли;
            Док.Количество=табзз.Количество;  
            Док.Сумма=табзз.СебестоимостьБезНДС; 
            Если Тип="Товар" Тогда
                Док.Кредит.Счет=Сч41;
                Док.Кредит.Номенклатура=Номеннн;
                Если Упрощенка=0 Тогда
                    Док.Кредит.МестаХранения=СкладОтправитель;   
                    Док.НоваяПроводка();  
                    Док.Кредит.Счет=СчН020201; 
                    Док.Кредит.Номенклатура=Номеннн;
                    Док.Количество=табзз.Количество;  
                    Док.Сумма=табзз.СебестоимостьБезНДС; 
                КонецЕСли;      
            Иначе    
                Если Упрощенка=0 Тогда
					Док.Кредит.Счет=Номеннн.СубСчет10;
                    Док.Кредит.МестаХранения=СкладОтправитель;   
                    Док.НоваяПроводка();  
                    Док.Кредит.Счет=СчН0201; 
                    Док.Кредит.Материалы=Номеннн;
                    Док.Количество=табзз.Количество;  
                    Док.Сумма=табзз.СебестоимостьБезНДС; 
				Иначе
					Док.Кредит.Счет=СчетПоКоду("10.1");
					Док.Кредит.Номенклатура=Номеннн;
                КонецЕСли;
            КонецЕсли;
        КонецЕсли; 
	КонецЦикла; 
	СохранитьОперацию(СтарыйНомер, Док);
КонецПроцедуры 


Процедура СоздатьАктыРеализации(Типп,табз1) 
    Если ПустоеЗначение(СтатьяДДС)=1 тогда
        Сообщить("Не заполнена статья движения денежных средств!!!");
        Возврат;
    КонецЕсли;      
    Если Упрощенка=0 тогда
        СтрокаДокумента="Документ."+?(Типп="Н","ПродажаВРозницу","ОтпускМатериаловНаСторону");
    Иначе  
        СтрокаДокумента="Документ.Реализация";
    КонецЕСли;
    Док=СоздатьОбъект(СтрокаДокумента);
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=УмныеИменаКолонок8.НайтиЗначение("НомерДок");
    НомерДаты=УмныеИменаКолонок8.НайтиЗначение("Дата");
    НомерКонтра=УмныеИменаКолонок8.НайтиЗначение("Поставщиккод"); 
    НомерСклада=УмныеИменаКолонок8.НайтиЗначение("Складнаименование"); 
    //Тз8=ПроверитьТаблицу(тз8);
    //Тз.Сортировать(""+НомерНомера+","+НомерКонтра);
    табз1.ВыбратьСТроки();  
    нн=0;  
    СтавкиНДС=СоздатьОбъект("Справочник.СтавкиНДС");
    Пока табз1.ПолучитьСтроку()=1 Цикл 
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(табз1.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются Акты Реализации"); 
		// фиьтрация по складу
		игн=0;
		МестоХранения=НайтиСкладСФильтром(табз1.ПолучитьЗначение(нн,НомерСклада), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(табз1.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табз1.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табз1.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(табз1.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                                                                                 
		дата1=табз1.ПолучитьЗначение(нн,НомерДаты);
        НомерДока=НомерНакладной2(табз1.ПолучитьЗначение(нн,НомерНомера),Типп,СтрокаДокумента,дата1);
        Если НомерДока<>СтарыйНомер Тогда
            ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);    
            Если Типп="Н" Тогда
                Если Тип<>"Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            Иначе
                Если Тип="Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            КонецЕсли;
            Док.Новый();
            УстановитьВремяДок(Док, дата1);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли; 
            стрр="";
            //СоответствиеКотрагентов.НайтиЗначение(табз1.ПолучитьЗначение(нн,"КкодИИКО"),стрр,"Кодиико");
            //Док.Контрагент=СоответствиеКотрагентов.ПолучитьЗначение(стрр,8); 
            //Док.Договор=Док.Контрагент.ОсновнойДоговор;    
            Док.МестоХранения=МестоХранения; 
            Если Упрощенка=0 Тогда
                //Док.ВидПоступления=?(пн=1,1,0);   
                Если Типп="Н" Тогда
                    Док.ДвижениеДенежныхСредств=СтатьяДДС;  
                Иначе
                    Док.ВидОтпуска=1;  
                КонецЕсли;
                Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;   
                //Док.ДатаНомерСчетаФактуры=СокрЛП(Тз.ПолучитьЗначение(нн,Спис.НайтиЗначение("Счет-фактура"))); 
                //Док.НдсВключатьВстоимость= Док.ВариантРасчетаНалогов.СуммаВключаетНДС;
                //Док.НдсВключатьВстоимость= 0;         
            Иначе
                Док.ВидОтгрузки=3;   
                Док.ДвижениеДенежныхСредств=СтатьяДДС;  
            КонецЕсли;        
            //Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда
            //КонецЕсли;                                                                
            //Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;
            //Док.НдсВключатьВстоимость= 1;
            //Док.Курс=1;
            //Док.ТипЦен=Константа.ОсновнаяЦенаПриобретения;
            //Док.ВключатьВКнигуПокупок=1;
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        Если Типп="Н" Тогда
            Если Тип<>"Товар" Тогда
                Продолжить;
            КонецЕсли;      
        Иначе
            Если Тип="Товар" Тогда
                Продолжить;
            КонецЕсли;      
        КонецЕсли;
        Док.НоваяСтрока();  
        стрр="";              
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(табз1.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табз1.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(табз1.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(табз1.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
        КонецЕсли;
        Док.НДС=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"СуммаНДСспродаж"),",","."));  
        Если Упрощенка=0 Тогда
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если Типп="Н" Тогда
                    Док.Товар=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
                Иначе
                    Док.Материал=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
                КонецЕсли;  
            Иначе
                Если Типп="Н" Тогда
                    Док.Товар=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
                Иначе
                    Док.Материал=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
                КонецЕсли;  
            КонецЕсли;
            Док.Сумма=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"СуммапродажисНДС"),",",".")); 
            Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда 
                Док.Всего=?(Док.ВариантРасчетаНалогов.СуммаВключаетНДС=1,Док.Сумма,Док.Сумма+Док.НДС);  
            Иначе
                Док.Всего=Док.Сумма;  
            КонецЕсли;
            //Док.Всего=?(Док.НдсВключатьВстоимость=1,Док.Сумма,Док.Сумма+Док.НДС);  
        Иначе      
            Если ФормаГруппировкаНоменклатуры=1 Тогда 
                Док.Номенклатура=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
            Иначе
                Док.Номенклатура=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
            КонецЕсли;
            Док.Сумма=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"СуммапродажисНДС"),",",".")); 
            СтНДС=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"СтавкаНДСспродаж"),",","."));
            Если СтавкиНДС.НайтиПоРеквизиту("Ставка",СтНДС,1)=1 тогда
                Док.СтавкаНДС=СтавкиНДС.ТекущийЭлемент();
            КонецЕсли; 
        КонецЕсли; 
        Док.Цена=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"ЦенапродажисНДС"),",","."));  
        Если типп="Н" Тогда
            Док.Количество=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"Количество"),",","."));  
        Иначе    
            Док.КоличествоОтпущено=Число(СтрЗаменить(табз1.ПолучитьЗначение(нн,"Количество"),",","."));  
        КонецЕсли;
    КонецЦикла;     
    Если ПустоеЗначение(СтарыйНомер)=0 Тогда
        ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);     
    КонецЕсли;        
КонецПроцедуры    
                             
Процедура СоздатьРеализациюЧерезОперацию(тзз1)        
	СчН02=СчетПоКоду("Н02.2"); 
	Сч43=СчетПоКоду("43");
	Сч40=СчетПоКоду("40"); 
	Сч20=СчетПоКоду("20");
	Док=СоздатьОбъект("Операция");
    СтарыйНомер=""; 
    
	задатьНомен=1;
	
	Состояние("Загружаются акты реализации."); 
	тзз1.ВыбратьСТроки();   
    Пока тзз1.ПолучитьСтроку()=1 Цикл 
		НомерДока=НомерНакладной2(тзз1.Номер,"р", "Документ.Операция",тзз1.Дата); 
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
		Если НомерДока<>СтарыйНомер Тогда    
			СохранитьОперацию(СтарыйНомер, Док);

			Док.Новая();  
			УстановитьВремяДокОперации(Док, тзз1.Дата); 
			Док.Документ.ДатаДок=Док.ДатаОперации;
			Если НомерИз1С=0 Тогда
            	Док.Документ.НомерДок=НомерДока;   
			КонецЕсли;
			Док.Содержание="РЕАЛИЗАЦИЯ-С/СТОИМОСТЬ"; 
            СтарыйНомер=НомерДока; 
		КонецЕсли;	              
	         
		Если (тзз1.Тип=1) и (СписыватьСебистоимость=0) Тогда
			Док.НоваяПроводка();
			Док.Дебет.Счет=СчН02;
			Док.НомерЖурнала="НУ";
			Док.СодержаниеПроводки="ОТРАЖЕНА РЕАЛИЗАЦИЯ-С/СТОИМОСТЬ";  
			Док.Сумма=тзз1.СуммаБезНДС;
			Док.СуммаОперации=Док.СуммаОперации+тзз1.СуммаБезНДС;
			Док.НоваяПроводка(); 
			Док.СодержаниеПроводки="СЕБЕСТОИМОСТЬ " + тзз1.Склад.Наименование; 
			Док.Дебет.Счет=РеализацияДебет;
			Док.Дебет.ВидыДеятельности=РеализацияВидДеятельности;
			Док.Кредит.Счет=СписаниеКредит; 
			стр="";
			Если СписаниеКредитСклад.НайтиЗначение(тзз1.Склад.Код, стр, "СкладКод") > 0 Тогда
				Счет=СписаниеКредитСклад.ПолучитьЗначение(стр,"Счет");
				Если ПустоеЗначение(Счет)=0 Тогда 
					Док.Кредит.Счет=Счет;
				КонецЕсли;  
				Контр=СписаниеКредитСклад.ПолучитьЗначение(стр,"Контрагент");
				Если ТипЗначения(Контр)=11 Тогда
					Док.Кредит.Контрагенты=Контр.ТекущийЭлемент();		
					Док.Кредит.Договоры=Док.Кредит.Контрагенты.ОсновнойДоговор;	
				КонецЕсли;
			КонецЕсли;
			Док.Кредит.Номенклатура=тзз1.Продукт;	
			Док.Сумма=тзз1.СуммаБезНДС;         
		ИначеЕсли (тзз1.Тип=1) и (СписыватьСебистоимость=1) Тогда
			Док.НоваяПроводка(); 
			Док.Сумма=тзз1.СуммаБезНДС; 
			Док.СуммаОперации=Док.СуммаОперации+тзз1.СуммаБезНДС;
			Док.СодержаниеПроводки="Передано в производство со склада: " + тзз1.Склад.Наименование;
			
			Док.Дебет.Счет=Сч20;  
			Док.Дебет.СтатьиЗатрат=СписаниеСтатьяЗатрат;
			Док.Дебет.ВидыДеятельности=СписаниеВидДеятельности;  
			
			Док.Кредит.Счет=СписаниеКредит;
			стр="";
			Если СписаниеКредитСклад.НайтиЗначение(тзз1.Склад.Код, стр, "СкладКод") > 0 Тогда  
				Счет=СписаниеКредитСклад.ПолучитьЗначение(стр,"Счет");
				Если ПустоеЗначение(Счет)=0 Тогда 
					Док.Кредит.Счет=Счет;
				КонецЕсли;
				Контр=СписаниеКредитСклад.ПолучитьЗначение(стр,"Контрагент");
				Если ТипЗначения(Контр)=11 Тогда
					Док.Кредит.Контрагенты=Контр.ТекущийЭлемент();	
					Док.Кредит.Договоры=Док.Кредит.Контрагенты.ОсновнойДоговор;	
				КонецЕсли;	
			КонецЕсли; 
			Док.Кредит.Номенклатура=тзз1.Продукт; 
		ИначеЕсли (тзз1.Тип=2) и (СписыватьСебистоимость=1) Тогда
			Док.НоваяПроводка(); 
			Док.Сумма=тзз1.СуммаБезНДС; 
			Док.СуммаОперации=Док.СуммаОперации+тзз1.СуммаБезНДС;
			Док.СодержаниеПроводки="Передано в продажу со склада: " + тзз1.Склад.Наименование;
			
			Док.Кредит.Счет=Сч20;  
			Док.Кредит.СтатьиЗатрат=СписаниеСтатьяЗатрат;
			Док.Кредит.ВидыДеятельности=СписаниеВидДеятельности;  
			
			Док.Дебет.Счет=РеализацияДебет;
			стр="";
			//Если СписаниеКредитСклад.НайтиЗначение(тзз1.Склад.Код, стр, "СкладКод") > 0 Тогда  
			//	Счет=СписаниеКредитСклад.ПолучитьЗначение(стр,"Счет");
			//	Если ПустоеЗначение(Счет)=0 Тогда 
			//		Док.Дебет.Счет=Счет;
			//	КонецЕсли;
			//	Контр=СписаниеКредитСклад.ПолучитьЗначение(стр,"Контрагент");
			//	Если ТипЗначения(Контр)=11 Тогда
			//		Док.Дебет.Контрагенты=Контр.ТекущийЭлемент();	
			//		Док.Дебет.Договоры=Док.Кредит.Контрагенты.ОсновнойДоговор;	
			//	КонецЕсли;	
			//КонецЕсли;  
			Док.Дебет.ВидыДеятельности=РеализацияВидДеятельности;
			Если задатьНомен=1 Тогда
				Попытка
					Док.Дебет.Номенклатура=тзз1.Продукт;
				Исключение
					задатьНомен=0;
				КонецПопытки      
			КонецЕсли;
		ИначеЕсли (тзз1.Тип=2) и (СписыватьСебистоимость=0) Тогда   
			Док.НоваяПроводка(); 
			Док.Дебет.Счет=Сч40; 
			Док.Дебет.ВидыДеятельности=СписаниеВидДеятельности; 
			
			Док.Кредит.Счет=Сч20; 	
			Док.Кредит.СтатьиЗатрат=СписаниеСтатьяЗатрат;
			Док.Кредит.ВидыДеятельности=СписаниеВидДеятельности; 
			
			Док.Сумма=тзз1.СуммаБезНДС;  
			Док.СуммаОперации=Док.СуммаОперации+тзз1.СуммаБезНДС;
			Док.СодержаниеПроводки="ВЫПУСК ПРОДУКЦИИ";
		ИначеЕсли (тзз1.Тип=3) и (СписыватьСебистоимость=0) Тогда	
			Док.НоваяПроводка(); 
			Док.Сумма=тзз1.СуммаБезНДС;
			Док.СуммаОперации=Док.СуммаОперации+тзз1.СуммаБезНДС;
			Док.СодержаниеПроводки="ПЕРЕДАНО В ПРОИЗВОДСТВО";
			
			Док.Дебет.Счет=Сч20;  
			Док.Дебет.СтатьиЗатрат=СписаниеСтатьяЗатрат;
			Док.Дебет.ВидыДеятельности=СписаниеВидДеятельности;  
			
			Док.Кредит.Счет=СписаниеКредит;
			стр="";
			Если СписаниеКредитСклад.НайтиЗначение(тзз1.Склад.Код, стр, "СкладКод") > 0 Тогда  
				Счет=СписаниеКредитСклад.ПолучитьЗначение(стр,"Счет");
				Если ПустоеЗначение(Счет)=0 Тогда 
					Док.Кредит.Счет=Счет;
				КонецЕсли;
				Контр=СписаниеКредитСклад.ПолучитьЗначение(стр,"Контрагент");
				Если ТипЗначения(Контр)=11 Тогда
					Док.Кредит.Контрагенты=Контр.ТекущийЭлемент();	
					Док.Кредит.Договоры=Док.Кредит.Контрагенты.ОсновнойДоговор;	
				КонецЕсли;	
			КонецЕсли; 
			Док.Кредит.Номенклатура=тзз1.Продукт;
		КонецЕсли;	
		//Док.Кредит.Договор=
	КонецЦикла;
	СохранитьОперацию(СтарыйНомер, Док);
КонецПроцедуры

Процедура СоздатьСписаниеЧерезОперацию(тззСп) 
	//тззСп.НоваяКолонка("Продукт"); 
	//тззСп.НоваяКолонка("Номер"); 
	//тззСп.НоваяКолонка("Дата"); 
    //тззСп.НоваяКолонка("Склад"); 
	//тззСп.НоваяКолонка("СуммаБезНДС");
	//тззСп.НоваяКолонка("СтавкаНДС");            
	//тззСп.НоваяКолонка("Количество");
	//тззСп.НоваяКолонка("СтатьяРасходов");
	                
	СчН04=СчетПоКоду("Н04"); 
	Сч43=СчетПоКоду("43");
	Сч40=СчетПоКоду("40"); 
	Сч20=СчетПоКоду("20");
	Док=СоздатьОбъект("Операция");
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");   
	//ДохРасх=СоздатьОбъект("Справочник.ПрочиеДоходыИРасходы");
	Состояние("Загружаются акты списания."); 
	тззСп.ВыбратьСТроки();  
    Пока тззСп.ПолучитьСтроку()=1 Цикл 
		НомерДока=НомерНакладной2(тззСп.Номер,"с", "Документ.Операция",тззСп.Дата); 
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
		Если НомерДока<>СтарыйНомер Тогда      
			СохранитьОперацию(СтарыйНомер, Док);

			Док.Новая();  
            УстановитьВремяДокОперации(Док, тззСп.Дата); 
			Док.Документ.ДатаДок=Док.ДатаОперации;
			Если НомерИз1С=0 Тогда
            	Док.Документ.НомерДок=НомерДока;   
			КонецЕсли;
			Док.Содержание="СПИСАНИЕ  ТОВАРА"; 
            СтарыйНомер=НомерДока;   
			
			Док.НоваяПроводка();
			Док.Дебет.Счет=СчН04;
			Док.НомерЖурнала="НУ";
			Док.СодержаниеПроводки="ОТРАЖЕН ФАКТ РАСХОДА";
		КонецЕсли;	              
	         
		Если (тззСп.Тип=1)  Тогда
			Док.НоваяПроводка(); 
			Док.СодержаниеПроводки=тззСп.СтатьяРасходов + " со склада: " + тззСп.Склад.Наименование;
			Док.Дебет.Счет=СписаниеДебет;
			Док.Кредит.Счет=СписаниеКредит; 
			стр="";
			Если СписаниеКредитСклад.НайтиЗначение(тззСп.Склад.Код, стр, "СкладКод") > 0 Тогда
				Счет=СписаниеКредитСклад.ПолучитьЗначение(стр,"Счет");
				Если ПустоеЗначение(Счет)=0 Тогда 
					Док.Кредит.Счет=Счет;
				КонецЕсли;  
				Контр=СписаниеКредитСклад.ПолучитьЗначение(стр,"Контрагент");
				Если ТипЗначения(Контр)=11 Тогда
					Док.Кредит.Контрагенты=Контр.ТекущийЭлемент();		
					Док.Кредит.Договоры=Док.Кредит.Контрагенты.ОсновнойДоговор;	
				КонецЕсли;
				Док.Кредит.Номенклатура=тззСп.Продукт; 
				Если (ПустоеЗначение(СписаниеПрочие)=0) и (Док.Дебет.Счет.ВидСубконто(0)=ВидыСубконто.ПрочиеДоходыИРасходы) Тогда
					Док.Дебет.ПрочиеДоходыИРасходы=СписаниеПрочие;
				КонецЕсли; 
				Если (ПустоеЗначение(СписаниеВидДеятельности)=0) и (Док.Дебет.Счет.ВидСубконто(0)=ВидыСубконто.ВидыДеятельности) Тогда
					Док.Дебет.ВидыДеятельности=СписаниеВидДеятельности;
				КонецЕсли;
			КонецЕсли;	
			Док.Сумма=тззСп.СуммаБезНДС;  
			Док.СуммаОперации=Док.СуммаОперации+тззСп.СуммаБезНДС;  
			//Док.Содержание=тззСп.СтатьяРасходов;
		//ИначеЕсли (тззСп.Тип=1) и (СписыватьСебистоимость=1) Тогда	
			
		ИначеЕсли (тззСп.Тип=12) и (СписыватьСебистоимость=0) Тогда   
			Док.НоваяПроводка(); 
			Док.СодержаниеПроводки=тззСп.СтатьяРасходов;
			Док.Дебет.Счет=Сч40; 
			Док.Дебет.ВидыДеятельности=СписаниеВидДеятельности; 
			
			Док.Кредит.Счет=Сч20; 	
			Док.Кредит.СтатьиЗатрат=СписаниеСтатьяЗатрат;
			Док.Кредит.ВидыДеятельности=СписаниеВидДеятельности; 
			
			Док.Сумма=тззСп.СуммаБезНДС;
			Док.СуммаОперации=Док.СуммаОперации+тззСп.СуммаБезНДС;  
			//Док.Содержание=тззСп.СтатьяРасходов;
		ИначеЕсли (тззСп.Тип=13) и (СписыватьСебистоимость=0) Тогда	
			Док.НоваяПроводка(); 
			Док.СодержаниеПроводки=тззСп.СтатьяРасходов; 
			Док.Сумма=тззСп.СуммаБезНДС;
			Док.СуммаОперации=Док.СуммаОперации+тззСп.СуммаБезНДС;  
			//Док.Содержание=тззСп.СтатьяРасходов;  
			
			Док.Дебет.Счет=Сч20;  
			Док.Дебет.СтатьиЗатрат=СписаниеСтатьяЗатрат;
			Док.Дебет.ВидыДеятельности=СписаниеВидДеятельности;  
			
			Док.Кредит.Счет=СписаниеКредит;
			стр="";
			Если СписаниеКредитСклад.НайтиЗначение(тззСп.Склад.Код, стр, "СкладКод") > 0 Тогда 
				Счет=СписаниеКредитСклад.ПолучитьЗначение(стр,"Счет");
				Если ПустоеЗначение(Счет)=0 Тогда 
					Док.Кредит.Счет=Счет;
				КонецЕсли;	
				Контр=СписаниеКредитСклад.ПолучитьЗначение(стр,"Контрагент");
				Если ТипЗначения(Контр)=11 Тогда
					Док.Кредит.Контрагенты=Контр.ТекущийЭлемент();	
					Док.Кредит.Договоры=Док.Кредит.Контрагенты.ОсновнойДоговор;	
				КонецЕсли;	
				
				Док.Кредит.Номенклатура=тззСп.Продукт;
			КонецЕсли;
		КонецЕсли;	
		//Док.Кредит.Договор=
		
	КонецЦикла;

	СохранитьОперацию(СтарыйНомер, Док);
КонецПроцедуры

Процедура СоздатьСписание(Типп,тззз6)
    СтрокаДокумента="Документ.ИнвентаризацияТМЦ";
    Док=СоздатьОбъект(СтрокаДокумента);
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=УмныеИменаКолонок6.НайтиЗначение("НомерДок");
    НомерДаты=УмныеИменаКолонок6.НайтиЗначение("Дата");
    НомерСклада=УмныеИменаКолонок6.НайтиЗначение("Складнаименование"); 
    тззз6.ВыбратьСТроки();  
    нн=0;  
    Пока тззз6.ПолучитьСтроку()=1 Цикл   
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(тззз6.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются списания");    
		// фиьтрация по складу
		игн=0;
		МестоХранения=НайтиСкладСФильтром(тззз6.ПолучитьЗначение(нн,НомерСклада), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(тззз6.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(тззз6.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(тззз6.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(тззз6.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                                                                                 
		дата1=тззз6.ПолучитьЗначение(нн,НомерДаты);
        НомерДока=НомерНакладной2(тззз6.ПолучитьЗначение(нн,НомерНомера),Типп,СтрокаДокумента,дата1);
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда
            ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента); 
            Док.Новый();  
			УстановитьВремяДок(Док, дата1);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;  
            Док.МестоХранения=МестоХранения; 
            Док.ВидТМЦ=1;  
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        Док.НоваяСтрока();  
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(тззз6.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(тззз6.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(тззз6.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(тззз6.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
        КонецЕсли;         
        Если ФормаГруппировкаНоменклатуры=1 Тогда 
            Док.МПЗ=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
        Иначе
            Док.МПЗ=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
        КонецЕсли;
        этоТовар=1;
		Если Упрощенка=0 Тогда
			 Если Тип<>"Товар" Тогда
			 	этоТовар=0;
			 КонецЕсли;	 
		Иначе   
	        Если Док.МПЗ.ТипНоменклатуры=Перечисление.ТипыНоменклатуры.Материал Тогда
	    		этоТовар=0;
			КонецЕсли;	
	    КонецЕсли;
        Если этоТовар=1 Тогда  
            Док.ВидМпз="Товар";  
            Док.Счет=СчетПоКоду("41.1");
		Иначе       
			Если Упрощенка=0 Тогда
				Док.Счет=Док.МПЗ.СубСчет10;
			Иначе
				Док.Счет=СчетПоКоду("10.1");
			КонецЕсли;		
            Док.ВидМпз="Материал";     
        КонецЕсли;
        Док.СуммаУчет=Число(СтрЗаменить(тззз6.ПолучитьЗначение(нн,"СебестоимостьБезНДС"),",",".")); 
        Док.КоличествоУчет=Число(СтрЗаменить(тззз6.ПолучитьЗначение(нн,"Количество"),",","."));  
        Док.ФормироватьПроводку="Да";
		//Если Упрощенка=1 Тогда   
		//	Док.Сумма=Док.СуммаУчет;
		//КонецЕсли;	
    КонецЦикла;     
    ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);       
КонецПроцедуры   


Процедура СоздатьИнвентаризации(Типп)
    СтрокаДокумента="Документ.ИнвентаризацияТМЦ";
    Док=СоздатьОбъект(СтрокаДокумента);
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=УмныеИменаКолонок7.НайтиЗначение("НомерДок");
    НомерДаты=УмныеИменаКолонок7.НайтиЗначение("Дата");
    НомерСклада=УмныеИменаКолонок7.НайтиЗначение("Складнаименование"); 
    Тз7.ВыбратьСТроки();
    нн=0;  
    Пока Тз7.ПолучитьСтроку()=1 Цикл
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(Тз7.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются инвентаризации");   
		// фиьтрация по складу
		игн=0;
		МестоХранения=НайтиСкладСФильтром(Тз7.ПолучитьЗначение(нн,НомерСклада), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Тз7.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз7.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз7.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Тз7.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                                                                               
		дата1=Тз7.ПолучитьЗначение(нн,НомерДаты);
        НомерДока=НомерНакладной2(Тз7.ПолучитьЗначение(нн,НомерНомера),Типп,СтрокаДокумента,дата1);
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда
            ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);  
            Док.Новый();
            УстановитьВремяДок(Док, дата1);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;  
            Док.МестоХранения=МестоХранения; 
            Док.ВидТМЦ=1;  
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        Док.НоваяСтрока();  
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Тз7.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз7.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз7.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Тз7.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
        КонецЕсли;
        Если ФормаГруппировкаНоменклатуры=1 Тогда 
            Док.МПЗ=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
        Иначе
            Док.МПЗ=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
        КонецЕсли;
        Би=СоздатьОбъект("БухгалтерскиеИтоги"); 
		этоТовар=1;
		Если Упрощенка=0 Тогда
			 Если Тип<>"Товар" Тогда
			 	этоТовар=0;
			 КонецЕсли;	 
		Иначе   
	        Если Док.МПЗ.ТипНоменклатуры=Перечисление.ТипыНоменклатуры.Материал Тогда
	    		этоТовар=0;
			КонецЕсли;	
	    КонецЕсли;
        Если этоТовар=1 Тогда  
            Би.ИспользоватьСубконто(ВидыСубконто.Номенклатура,Док.МПЗ);
            Док.ВидМпз="Товар";  
            Док.Счет=СчетПоКоду("41.1");
		Иначе       
			Если Упрощенка=0 Тогда
            	Би.ИспользоватьСубконто(ВидыСубконто.Материалы,Док.МПЗ);
				Док.Счет=Док.МПЗ.СубСчет10;
			Иначе
				Би.ИспользоватьСубконто(ВидыСубконто.Номенклатура,Док.МПЗ);
				Док.Счет=СчетПоКоду("10.1");
			КонецЕсли;		
            Док.ВидМпз="Материал";     
            
        КонецЕсли;
        Док.Сумма=Число(СтрЗаменить(Тз7.ПолучитьЗначение(нн,"СебестоимостьБезНДС"),",",".")); 
        Док.Количество=Число(СтрЗаменить(Тз7.ПолучитьЗначение(нн,"Количество"),",","."));  
        Если ПустоеЗначение(Док.текущийДокумент())=1 Тогда  
            Граница=Док.ДатаДок;
        Иначе    
            Граница=Док.ТекущийДокумент();
        КонецЕсли;           
        Би.ИспользоватьСубконто(ВидыСубконто.МестаХранения);
        Би.ВыполнитьЗапрос(Граница,,Док.Счет,,,,,5);   
        Би.ВыбратьСубконто(1);
        Пока Би.ПолучитьСубконто(1)=1 Цикл   
            Суммма=Би.СКД("С"); 
            Коллво=Би.СКД("К");         
            Если БИ.ПолучитьСубконто(2,, Док.МестоХранения) = 0 Тогда
                Продолжить;
            КонецЕсли;
            Док.КоличествоУчет=Би.СКД("К");
            Док.СуммаУчет=Суммма/?(Коллво=0,1,Коллво)*Док.КоличествоУчет;
        КонецЦикла;
        Док.ФормироватьПроводку="Да";
    КонецЦикла;     
    ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);       
КонецПроцедуры     

Процедура СоздатьВнакладную(Типп)  
    Если Упрощенка=1 тогда 
		Сообщить("Возвратные накладные не применимы в данной конфигурации");
        Возврат;
    КонецЕСли;    
    СтрокаДокумента="Документ."+?(Типп="В","РасходнаяНакладная","ОтпускМатериаловНаСторону");
    Док=СоздатьОбъект(СтрокаДокумента);
    СтарыйНомер=""; 
    Склады=СоздатьОбъект("Справочник.МестаХранения");
    НомерНомера=УмныеИменаКолонок9.НайтиЗначение("НомерДок");
    НомерДаты=УмныеИменаКолонок9.НайтиЗначение("Дата");
    НомерКонтра=УмныеИменаКолонок9.НайтиЗначение("Поставщиккод"); 
    НомерСклада=УмныеИменаКолонок9.НайтиЗначение("Складнаименование"); 
    //Тз8=ПроверитьТаблицу(тз8);
    //Тз.Сортировать(""+НомерНомера+","+НомерКонтра);
    Тз9.ВыбратьСТроки();  
    нн=0;  
    СтавкиНДС=СоздатьОбъект("Справочник.СтавкиНДС");
    Пока Тз9.ПолучитьСтроку()=1 Цикл 
        Если ПустоеЗначение(Юрлицо)=0 Тогда
            Если СокрЛП(Тз9.ЮЛнаименование)<>Юрлицо Тогда
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        нн=нн+1;           
        Состояние("Загружаются накладные");  
		// фиьтрация по складу
		игн=0;
		МестоХранения=НайтиСкладСФильтром(Тз9.ПолучитьЗначение(нн,НомерСклада), игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;  
		// фиьтрация по контрагенту
		стрр="";
		СоответствиеКотрагентов.НайтиЗначение(Тз9.ПолучитьЗначение(нн,"КкодИИКО"),стрр,"Кодиико");
		Если СоответствиеКотрагентов.ПолучитьЗначение(стрр,9)=1 Тогда
			Продолжить;
		КонецЕсли;
		Контрагент=СоответствиеКотрагентов.ПолучитьЗначение(стрр,8);
		
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Тз9.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
            Тип=СокрЛП(СоответствиеНоменклатуры.ПолучитьЗначение(стрр,"Тип"));      
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз9.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз9.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Тз9.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
            Тип=СокрЛП(СоответвиеГруппНом.ПолучитьЗначение(стрр,"Тип"));      
		КонецЕсли;                                                                               
		дата1=Тз9.ПолучитьЗначение(нн,НомерДаты);
        НомерДока=НомерНакладной2(Тз9.ПолучитьЗначение(нн,НомерНомера),Типп,СтрокаДокумента,дата1);     
		Если НомерДока="" Тогда
			Возврат;
		КонецЕсли;
        Если НомерДока<>СтарыйНомер Тогда
            ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);    
            Если Типп="В" Тогда
                Если Тип<>"Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            Иначе
                Если Тип="Товар" Тогда
                    Продолжить;
                КонецЕсли;      
            КонецЕсли;
            Док.Новый();
            УстановитьВремяДок(Док, дата1);
            Если НомерИз1С=0 Тогда
            	Док.НомерДок=НомерДока;   
			КонецЕсли;  
            Док.Контрагент=Контрагент; 
            Док.Договор=Док.Контрагент.ОсновнойДоговор;    
            Док.МестоХранения=МестоХранения; 
            Если Упрощенка=0 Тогда
                //Док.ВидПоступления=?(пн=1,1,0);   
                Если Типп="В" Тогда
                    Док.ВидОтгрузки=3;  
                Иначе
                    Док.ВидОтпуска=2;  
                КонецЕсли;
                Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;   
                Док.НдсВключатьВстоимость= НДСвкл;
            КонецЕсли;        
            //Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда
            //КонецЕсли;                                                                
            //Док.ВариантРасчетаНалогов=Константа.ОсновнойВариантРасчетаНалогов;
            //Док.НдсВключатьВстоимость= 1;
            Док.Курс=1;
            //Док.ТипЦен=Константа.ОсновнаяЦенаПриобретения;
            //Док.ВключатьВКнигуПокупок=1;
            СтарыйНомер=НомерДока;
        КонецЕсли; 
        Если Типп="В" Тогда
            Если Тип<>"Товар" Тогда
                Продолжить;
            КонецЕсли;      
        Иначе
            Если Тип="Товар" Тогда
                Продолжить;
            КонецЕсли;      
        КонецЕсли;
        Док.НоваяСтрока();  
        стрр="";
        Если ФормаГруппировкаНоменклатуры=1 Тогда
            СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Тз9.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
        ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз9.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
        Иначе
            СоответвиеГруппНом.НайтиЗначение(СокрлП(Тз9.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Тз9.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
        КонецЕсли;
        Док.НДС=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"СуммаНДСспродаж"),",","."));  
        Если Упрощенка=0 Тогда   
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Если Типп="В" Тогда
                    Док.Товар=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
                Иначе
                    Док.Материал=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
                КонецЕсли;  
            Иначе
                Если Типп="В" Тогда
                    Док.Товар=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
                Иначе
                    Док.Материал=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
                КонецЕсли;  
            КонецЕсли;

            Док.Сумма=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"СуммапродажисНДС"),",",".")); 
            Если ПустоеЗначение(Док.ВариантРасчетаНалогов)=0 Тогда 
                Док.Всего=?(Док.ВариантРасчетаНалогов.СуммаВключаетНДС=1,Док.Сумма,Док.Сумма+Док.НДС);  
            Иначе
                Док.Всего=Док.Сумма;  
            КонецЕсли;
            //Док.Всего=?(Док.НдсВключатьВстоимость=1,Док.Сумма,Док.Сумма+Док.НДС);  
        Иначе   
            Если ФормаГруппировкаНоменклатуры=1 Тогда
                Док.Номенклатура=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);  
            Иначе 
                Док.Номенклатура=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");  
            КонецЕсли;  
            Док.Всего=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"СуммапродажисНДС"),",",".")); 
            СтНДС=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"СтавкаНДСспродаж"),",","."));
            Если СтавкиНДС.НайтиПоРеквизиту("Ставка",СтНДС,1)=1 тогда
                Док.СтавкаНДС=СтавкиНДС.ТекущийЭлемент();
            КонецЕсли; 
        КонецЕсли; 
        Док.Цена=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"ЦенапродажисНДС"),",","."));  
        Если типп="В" Тогда
            Док.Количество=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"Количество"),",","."));  
        Иначе    
            Док.КоличествоОтпущено=Число(СтрЗаменить(Тз9.ПолучитьЗначение(нн,"Количество"),",","."));  
        КонецЕсли;
    КонецЦикла;     
    ЗаписатьДокумент1С(СтарыйНомер, Док, СтрокаДокумента);         
КонецПроцедуры
                    
Процедура ПодготовитьАктРеализации()      
	тзз3=СоздатьОбъект("ТаблицаЗначений");
    Для ии=1 по УмныеИменаКолонок3.РазмерСписка() цикл
    	тзз3.НоваяКолонка(УмныеИменаКолонок3.ПолучитьЗначение(ии));        
    КонецЦикла;      
    Тзз1=СоздатьОбъект("ТаблицаЗначений");
    тз1.Выгрузить(тзз1);
    тзз1.УдалитьСтроки();
    Тз1.ВыбратьСТроки();
    Пока Тз1.ПолучитьСтроку()=1 цикл
        Если (СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты")или((СокрЛП(Тз1.ТипСписанияНазвание)="Списывать со склада")и(СокрЛП(Тз1.Операция)="1"))  тогда  
            Если Тз1.ЦенапродажисНДС>0 Тогда
                тзз1.НоваяСтрока();
                тзз1.Дата=Тз1.Дата;
                тзз1.НомерДок=Тз1.НомерДок;
                тзз1.Складкод=Тз1.Складкод;
                тзз1.СкладНаименование=Тз1.СкладНаименование;
                тзз1.Операция=Тз1.Операция;
                тзз1.Операцияназвание=Тз1.Операцияназвание;
                тзз1.НКодИИКО=Тз1.НКодИИКО;
                тзз1.ННаименованиеИИКО=Тз1.ННаименованиеИИКО;
                тзз1.Группаучетаназвание=Тз1.Группаучетаназвание;
                тзз1.Количество=Тз1.Количество;
                тзз1.ЦенапродажисНДС=Тз1.ЦенапродажисНДС;
                тзз1.СуммапродажисНДС=Тз1.СуммапродажисНДС;
                тзз1.СуммаНДСспродаж=Тз1.СуммаНДСспродаж;
                тзз1.СтавкаНДСспродаж=Тз1.СтавкаНДСспродаж;
                тзз1.СебестоимостьзаедбезНДС=Тз1.СебестоимостьзаедбезНДС;
                тзз1.СебестоимостьбезНДС=Тз1.СебестоимостьбезНДС;
                тзз1.СтавкаНДС=Тз1.СтавкаНДС;
                тзз1.Торговоепредприятиекод=Тз1.Торговоепредприятиекод;
                тзз1.Торговоепредприятиенаименование=Тз1.Торговоепредприятиенаименование;
                тзз1.ЮЛИНН=Тз1.ЮЛИНН;
                тзз1.ЮЛнаименование=Тз1.ЮЛнаименование;
                тзз1.ТипСписания=Тз1.ТипСписания;
                тзз1.ТипСписанияНазвание=Тз1.ТипСписанияНазвание;
            Иначе
                Сообщить("Для номенклатуры "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                " не задана цена продажи!!!");
            КонецЕсли;
        КонецЕсли;
           
        Если (СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты")или(СокрЛП(Тз1.ТипСписанияНазвание)="")или((СокрЛП(Тз1.ТипСписанияНазвание)="Списывать со склада")и(СокрЛП(Тз1.Операция)="2"))  тогда  
            Если Тз1.Количество>0 Тогда
                Если СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты" тогда
                    Если  (Тз1.СуммапродажисНДС-Тз1.СуммаНДСспродаж)=0 тогда
                        Сообщить("Для номенклатуры "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                        " не задана цена продажи!!!");
                    КонецЕсли;    
                Иначе        
                    Если  (Тз1.СебестоимостьзаедбезНДС)=0 тогда
                        Сообщить("Для номенклатуры "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                            " не задана себестоимость!!!");
                    КонецЕсли;    
                КонецЕсли;
                тзз3.НоваяСтрока();
                тзз3.Дата=Тз1.Дата;
                тзз3.НомерДок=Тз1.НомерДок;
                тзз3.Складсписаниякод=Тз1.Складкод;
                тзз3.Складсписаниянаименование=Тз1.СкладНаименование;
                тзз3.Складприходакод=Тз1.Складкод;
                тзз3.Складприходанаименование=Тз1.СкладНаименование;
                Если СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты" тогда 
                    тзз3.Знакоперации=1;
                    тзз3.Знакоперацииназвание="Приход";
                    тзз3.СебестоимостьбезНДС=Тз1.СуммапродажисНДС-Тз1.СуммаНДСспродаж;
                    тзз3.СебестоимостьзаедбезНДС=?(Тз1.Количество=0,тзз3.СебестоимостьбезНДС,тзз3.СебестоимостьбезНДС/Тз1.Количество);
                    тзз3.СтавкаНДС=Тз1.СтавкаНДСспродаж;
                Иначе    
                    тзз3.Знакоперации=2;
                    тзз3.Знакоперацииназвание="Расход";
                    тзз3.СебестоимостьзаедбезНДС=Тз1.СебестоимостьзаедбезНДС;
                    тзз3.СебестоимостьбезНДС=Тз1.СебестоимостьбезНДС;
                    тзз3.СтавкаНДС=Тз1.СтавкаНДСспродаж;
                КонецЕсли;    
                тзз3.НКодИИКО=Тз1.НКодИИКО;
                тзз3.ННаименованиеИИКО=Тз1.ННаименованиеИИКО;
                тзз3.Группаучетаназвание=Тз1.Группаучетаназвание;
                тзз3.Количество=Тз1.Количество;
                тзз3.Торговоепредприятиекод=Тз1.Торговоепредприятиекод;
                тзз3.Торговоепредприятиенаименование=Тз1.Торговоепредприятиенаименование;
                тзз3.ЮЛИНН=Тз1.ЮЛИНН;
                тзз3.ЮЛнаименование=Тз1.ЮЛнаименование;
            Иначе
                Сообщить("Для материала "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                " не задано количество!!!");
            КонецЕсли;
        КонецЕсли;
            
    КонецЦикла;    
    СоздатьПриготовления("Р",тзз3);
    СоздатьПеремещениеВРозницу("Н",тзз1);  
    СоздатьАктыРеализации("Н",тзз1);  
    //Если Упрощенка=0 Тогда
    //    СоздатьАктыРеализации("М",тзз1);
    //КонецЕсли;
КонецПроцедуры

Процедура ПодготовитьАктСписания() 
	тзз3=СоздатьОбъект("ТаблицаЗначений");
        Для ии=1 по УмныеИменаКолонок3.РазмерСписка() цикл
            тзз3.НоваяКолонка(УмныеИменаКолонок3.ПолучитьЗначение(ии));        
        КонецЦикла;      
        Тзз1=СоздатьОбъект("ТаблицаЗначений");
        тз6.Выгрузить(тзз1);
        тзз1.УдалитьСтроки();
        Тз6.ВыбратьСТроки();
        Пока тз6.ПолучитьСтроку()=1 цикл
            Если СокрЛП(тз6.Операция)="1" тогда  
                Если тз6.СебестоимостьбезНДС>0 Тогда
                    тзз1.НоваяСтрока();
                    тзз1.Дата=тз6.Дата;
                    тзз1.НомерДок=тз6.НомерДок;
                    тзз1.Складкод=тз6.Складкод;
                    тзз1.СкладНаименование=тз6.СкладНаименование;
                    тзз1.НКодИИКО=тз6.НКодИИКО;
                    тзз1.ННаименованиеИИКО=тз6.ННаименованиеИИКО;
                    тзз1.Группаучетаназвание=тз6.Группаучетаназвание;
                    тзз1.Количество=тз6.Количество;
                    тзз1.СебестоимостьзаедбезНДС=тз6.СебестоимостьзаедбезНДС;
                    тзз1.СебестоимостьбезНДС=тз6.СебестоимостьбезНДС;
                    тзз1.СтавкаНДС=тз6.СтавкаНДС;
                    тзз1.Торговоепредприятиекод=тз6.Торговоепредприятиекод;
                    тзз1.Торговоепредприятиенаименование=тз6.Торговоепредприятиенаименование;
                    тзз1.ЮЛИНН=тз6.ЮЛИНН;
                    тзз1.ЮЛнаименование=тз6.ЮЛнаименование;  
                    тзз1.СтатьяРасходов= тз6.СтатьяРасходов;
                    тзз1.ТипСписания=тз6.ТипСписания;
                    тзз1.ТипСписанияНазвание=тз6.ТипСписанияНазвание;
                    тзз1.Операция=тз6.Операция;
                    тзз1.Операцияназвание=тз6.Операцияназвание;
                Иначе
                    Сообщить("Для номенклатуры "+тз6.ННаименованиеИИКО+" в акте списания № "+тз6.НомерДок+" от "+тз6.Дата +
                    " не задана себестоимость!!!");
                КонецЕсли;
            КонецЕсли;
            
            Если (СокрЛП(тз6.ТипСписания)="2")или(СокрЛП(тз6.Операция)="2")  тогда  
                Если тз6.Количество>0 Тогда
                    Если  (тз6.СебестоимостьзаедбезНДС)=0 тогда
                        Сообщить("Для номенклатуры "+тз6.ННаименованиеИИКО+" в акте списания № "+тз6.НомерДок+" от "+тз6.Дата +
                        " не задана себестоимость!!!");
                    КонецЕсли;    
                    тзз3.НоваяСтрока();
                    тзз3.Дата=тз6.Дата;
                    тзз3.НомерДок=тз6.НомерДок;
                    тзз3.Складсписаниякод=тз6.Складкод;
                    тзз3.Складсписаниянаименование=тз6.СкладНаименование;
                    тзз3.Складприходакод=тз6.Складкод;
                    тзз3.Складприходанаименование=тз6.СкладНаименование;
                    Если СокрЛП(тз6.ТипСписания)="2" тогда 
                        тзз3.Знакоперации=1;
                        тзз3.Знакоперацииназвание="Приход";
                        тзз3.СебестоимостьбезНДС=тз6.СебестоимостьбезНДС;
                        тзз3.СебестоимостьзаедбезНДС=тз6.СебестоимостьзаедбезНДС;
                        тзз3.СтавкаНДС=тз6.СтавкаНДС;
                    Иначе    
                        тзз3.Знакоперации=2;
                        тзз3.Знакоперацииназвание="Расход";
                        тзз3.СебестоимостьзаедбезНДС=тз6.СебестоимостьзаедбезНДС;
                        тзз3.СебестоимостьбезНДС=тз6.СебестоимостьбезНДС;
                        тзз3.СтавкаНДС=тз6.СтавкаНДС;
                    КонецЕсли;    
                    тзз3.НКодИИКО=тз6.НКодИИКО;
                    тзз3.ННаименованиеИИКО=тз6.ННаименованиеИИКО;
                    тзз3.Группаучетаназвание=тз6.Группаучетаназвание;
                    тзз3.Количество=тз6.Количество;
                    тзз3.Торговоепредприятиекод=тз6.Торговоепредприятиекод;
                    тзз3.Торговоепредприятиенаименование=тз6.Торговоепредприятиенаименование;
                    тзз3.ЮЛИНН=тз6.ЮЛИНН;
                    тзз3.ЮЛнаименование=тз6.ЮЛнаименование;
                Иначе
                    Сообщить("Для номенклатуры "+тз6.ННаименованиеИИКО+" в акте списания № "+тз6.НомерДок+" от "+тз6.Дата +
                    " не задано количество!!!");
                КонецЕсли;
            КонецЕсли;
            
        КонецЦикла;    
        //НачатьТранзакцию();     
		//Если СвернутьТовары=1 Тогда
		//	тзз1.Свернуть("Дата,НомерДок,Складкод,СкладНаименование,НКодИИКО,ННаименованиеИИКО", "СуммаБезНДС,Количество");   
		//КонецЕсли;
       	СоздатьПриготовления("С",тзз3);
        СоздатьСписание("С",тзз1);  
КонецПроцедуры	   
	
Функция ПолучитьПродукт(Табл, нн)  
	Стрр="";
	Если ФормаГруппировкаНоменклатуры=1 Тогда
    	СоответствиеНоменклатуры.НайтиЗначение(СокрлП(Табл.ПолучитьЗначение(нн,"НКодИИКО")),стрр,"Кодиико"); 
    ИначеЕсли ФормаГруппировкаНоменклатуры=2 тогда
    	СоответвиеГруппНом.НайтиЗначение(СокрлП(Табл.ПолучитьЗначение(нн,"СтавкаНДС")),стрр,"СтавкаНДС"); 
    Иначе
    	СоответвиеГруппНом.НайтиЗначение(СокрлП(Табл.ПолучитьЗначение(нн,"ГруппаучетаНазвание"))+"/"+СокрлП(Табл.ПолучитьЗначение(нн,"Ставкандс")),стрр,"СтавкаНДС"); 
	КонецЕсли; 
	Если ФормаГруппировкаНоменклатуры=1 Тогда
    	Продукт=СоответствиеНоменклатуры.ПолучитьЗначение(стрр,7);
    Иначе
    	Продукт=СоответвиеГруппНом.ПолучитьЗначение(стрр,"Наим1с");
	КонецЕсли;
	Возврат Продукт; 
КонецФункции	
      
Процедура ПодготовитьАктРеализацииЧерезОперацию() 
	Склады=СоздатьОбъект("Справочник.МестаХранения");
    Тзз1=СоздатьОбъект("ТаблицаЗначений");
    Тзз1.НоваяКолонка("Продукт"); 
	Тзз1.НоваяКолонка("Номер"); 
	Тзз1.НоваяКолонка("Дата"); 
    Тзз1.НоваяКолонка("Склад"); 
	Тзз1.НоваяКолонка("СуммаБезНДС");
 	Тзз1.НоваяКолонка("Количество");
	Тзз1.НоваяКолонка("Тип");
    
	            
	//сам=0;
	нн=0;   
	ДокНомер="";
    Тз1.ВыбратьСТроки();
    Пока Тз1.ПолучитьСтроку()=1 цикл
		нн=нн+1; 
		ДокНомер=Тз1.НомерДок;
		// фиьтрация по складу
		игн=0;
		Склад=НайтиСкладСФильтром(Тз1.Складнаименование, игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли; 
		
		Если СписыватьСебистоимость=1 Тогда 
			//сам = сам + тзз1.СуммаБезНДС;
			//Если (СокрЛП(Тз1.ТипСписания)="1") и (Число(Тз1.СебестоимостьбезНДС)>0) Тогда 
			Если (СокрЛП(Тз1.Операция)="1") и (Число(Тз1.СебестоимостьбезНДС)>0) Тогда 
				тзз1.НоваяСтрока();  
				тзз1.Тип=1;
                тзз1.Дата=Тз1.Дата;
                тзз1.Номер=ДокНомер;
        		тзз1.Склад=Склад;
                тзз1.Продукт=ПолучитьПродукт(Тз1, нн);
				тзз1.Количество=Число(Тз1.Количество);    
				тзз1.СуммаБезНДС=Число(Тз1.СебестоимостьбезНДС);   
			ИначеЕсли (СокрЛП(Тз1.Операция)="2") и (Число(Тз1.СебестоимостьбезНДС)>0) Тогда 
				тзз1.НоваяСтрока();  
				тзз1.Тип=2;
                тзз1.Дата=Тз1.Дата;
                тзз1.Номер=ДокНомер;
        		тзз1.Склад=Склад;
                тзз1.Продукт=ПолучитьПродукт(Тз1, нн);
				тзз1.Количество=Число(Тз1.Количество);    
				тзз1.СуммаБезНДС=Число(Тз1.СебестоимостьбезНДС); 
			КонецЕсли;	                                 
			Продолжить;
		КонецЕсли;	
		
        Если (СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты")или((СокрЛП(Тз1.ТипСписанияНазвание)="Списывать со склада")и(СокрЛП(Тз1.Операция)="1"))  тогда  
            Если Число(Тз1.ЦенапродажисНДС)>0 Тогда 
                тзз1.НоваяСтрока();  
				тзз1.Тип=1;
                тзз1.Дата=Тз1.Дата;
                тзз1.Номер=ДокНомер;
        		тзз1.Склад=Склад;
                тзз1.Продукт=ПолучитьПродукт(Тз1, нн);
				тзз1.Количество=Число(Тз1.Количество);    
				тзз1.СуммаБезНДС=Число(Тз1.СебестоимостьбезНДС);
                //тзз1.ЦенапродажисНДС=Тз1.ЦенапродажисНДС;
                //тзз1.СуммапродажисНДС=Тз1.СуммапродажисНДС;
                //тзз1.СуммаНДСспродаж=Тз1.СуммаНДСспродаж;
                //тзз1.СтавкаНДСспродаж=Тз1.СтавкаНДСспродаж;
                //тзз1.СебестоимостьзаедбезНДС=Тз1.СебестоимостьзаедбезНДС;
                //тзз1.СебестоимостьбезНДС=Тз1.СебестоимостьбезНДС;
                //тзз1.СтавкаНДС=Тз1.СтавкаНДС;
            Иначе
                Сообщить("Для номенклатуры "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                " не задана цена продажи!!!");
            КонецЕсли;
        КонецЕсли;
           
        Если (СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты")или(СокрЛП(Тз1.ТипСписанияНазвание)="")или((СокрЛП(Тз1.ТипСписанияНазвание)="Списывать со склада")и(СокрЛП(Тз1.Операция)="2"))  тогда  
            Если Тз1.Количество>0 Тогда
                Если СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты" тогда
                    Если  (Число(Тз1.СуммапродажисНДС)-Число(Тз1.СуммаНДСспродаж))=0 тогда
                        Сообщить("Для номенклатуры "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                        " не задана цена продажи!!!");
                    КонецЕсли;    
                Иначе        
                    Если  (Тз1.СебестоимостьзаедбезНДС)=0 тогда
                        Сообщить("Для номенклатуры "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                            " не задана себестоимость!!!");
                    КонецЕсли;    
                КонецЕсли;
                тзз1.НоваяСтрока();
                тзз1.Дата=Тз1.Дата;
                тзз1.Номер=ДокНомер;
        		тзз1.Склад=Склад;   
				тзз1.Количество=Число(Тз1.Количество);         
				тзз1.СуммаБезНДС=Число(Тз1.СебестоимостьбезНДС);               
				тзз1.Продукт=ПолучитьПродукт(Тз1, нн);
                Если СокрЛП(Тз1.ТипСписанияНазвание)="Списывать ингредиенты" тогда 
					тзз1.Тип=2;
                //    тзз3.Знакоперации=1;
                //    тзз3.Знакоперацииназвание="Приход";
                //    тзз3.СебестоимостьбезНДС=Тз1.СуммапродажисНДС-Тз1.СуммаНДСспродаж;
                //    тзз3.СебестоимостьзаедбезНДС=?(Тз1.Количество=0,тзз3.СебестоимостьбезНДС,тзз3.СебестоимостьбезНДС/Тз1.Количество);
                //    тзз3.СтавкаНДС=Тз1.СтавкаНДСспродаж;
                Иначе    
                    тзз1.Тип=3;
                //    тзз3.Знакоперацииназвание="Расход";
                //    тзз3.СебестоимостьзаедбезНДС=Тз1.СебестоимостьзаедбезНДС;
                //    тзз3.СебестоимостьбезНДС=Тз1.СебестоимостьбезНДС;
                //    тзз3.СтавкаНДС=Тз1.СтавкаНДСспродаж;
                КонецЕсли;    
            Иначе
                Сообщить("Для материала "+Тз1.ННаименованиеИИКО+" в акте реализации № "+Тз1.НомерДок+" от "+Тз1.Дата +
                " не задано количество!!!");
            КонецЕсли;
        КонецЕсли;
	КонецЦикла;  
	Если СвернутьПоДокументам=1 Тогда  
		послНомер=тзз1.Номер;
		послДата=тзз1.Дата;
		тзз1.ВыбратьСТроки();
	   	Пока тзз1.ПолучитьСтроку()=1 цикл
	  		тзз1.Номер=послНомер;
	  		тзз1.Дата=послДата;	
	  	КонецЦикла;	
	КонецЕсли;
	Если СвернутьТовары=1 Тогда
		тзз1.Свернуть("Продукт,Номер,Дата,Склад,Тип", "СуммаБезНДС,Количество");   
	КонецЕсли;  
	//Сообщить("сам="+сам);
	СоздатьРеализациюЧерезОперацию(тзз1);
КонецПроцедуры

Процедура ПодготовитьАктСписанияЧерезОперацию()
	Склады=СоздатьОбъект("Справочник.МестаХранения");
	тззСп = СоздатьОбъект("ТаблицаЗначений");
    тззСп.НоваяКолонка("Продукт"); 
	тззСп.НоваяКолонка("Номер"); 
	тззСп.НоваяКолонка("Дата"); 
    тззСп.НоваяКолонка("Склад"); 
	тззСп.НоваяКолонка("СуммаБезНДС");
 	тззСп.НоваяКолонка("Количество");
	тззСп.НоваяКолонка("СтатьяРасходов"); 
	тззСп.НоваяКолонка("Тип");
	
	тззПр = СоздатьОбъект("ТаблицаЗначений");
	
	Тз6.ВыбратьСТроки(); 
	нн=0;      
	ДокНомер="";
    Пока тз6.ПолучитьСтроку()=1 цикл
		нн=нн+1;   
		ДокНомер=Тз6.НомерДок;  
		// фиьтрация по складу
		игн=0;
		Склад=НайтиСкладСФильтром(тз6.Складнаименование, игн);
		Если игн=1 Тогда
			Продолжить;
		КонецЕсли;    
		Если СписыватьСебистоимость=1 Тогда
			Если (СокрЛП(Тз6.ТипСписания)="1") и (Число(тз6.СебестоимостьбезНДС)>0) Тогда 
			//Если (СокрЛП(Тз6.Операция)="1") и (Число(Тз6.СебестоимостьбезНДС)>0) Тогда
				тззСп.НоваяСтрока();
         		тззСп.Дата=тз6.Дата;
                тззСп.Номер=ДокНомер;
        		тззСп.Склад=Склад;
                тззСп.Количество=Число(тз6.Количество);
                тззСп.СуммаБезНДС=Число(тз6.СебестоимостьбезНДС);
                //тззСп.СтавкаНДС=тз6.СтавкаНДС;   
				тззСп.СтатьяРасходов=тз6.СтатьяРасходов;  
				тззСп.Продукт=ПолучитьПродукт(Тз6, нн);
				тззСп.Тип=1;
			КонецЕсли;	                                 
			Продолжить;
		КонецЕсли;
    	Если СокрЛП(тз6.Операция)="1" тогда  
        	Если тз6.СебестоимостьбезНДС>0 Тогда 
				// Добавляем Списание
				тззСп.НоваяСтрока();
         		тззСп.Дата=тз6.Дата;
                тззСп.Номер=ДокНомер;
        		тззСп.Склад=Склад;
                тззСп.Количество=Число(тз6.Количество);
                тззСп.СуммаБезНДС=Число(тз6.СебестоимостьбезНДС);
                //тззСп.СтавкаНДС=тз6.СтавкаНДС;   
				тззСп.СтатьяРасходов=тз6.СтатьяРасходов;  
				тззСп.Продукт=ПолучитьПродукт(Тз6, нн);
				тззСп.Тип=1;
			Иначе
            	Сообщить("Для номенклатуры "+тз6.ННаименованиеИИКО+" в акте списания № "+тз6.НомерДок+" от "+тз6.Дата +" не задана себестоимость!!!");
            КонецЕсли;
		КонецЕсли;
		
		Если (СокрЛП(тз6.ТипСписания)="2")или(СокрЛП(тз6.Операция)="2")  тогда  
        	Если Число(тз6.Количество)>0 Тогда
            	Если  Число(тз6.СебестоимостьзаедбезНДС)=0 тогда
                	Сообщить("Для номенклатуры "+тз6.ННаименованиеИИКО+" в акте списания № "+тз6.НомерДок+" от "+тз6.Дата +" не задана себестоимость!!!");
				КонецЕсли;
				// Добавляем приготовление 
				тззСп.НоваяСтрока();
                тззСп.Дата=тз6.Дата;
                тззСп.Номер=ДокНомер;     
        		тззСп.Склад=Склад;
                тззСп.Продукт=ПолучитьПродукт(Тз6, нн);
				тззСп.Количество=Число(тз6.Количество);
                тззСп.СуммаБезНДС=Число(тз6.СебестоимостьбезНДС);
				тззСп.СтатьяРасходов=тз6.СтатьяРасходов;
                Если СокрЛП(тз6.ТипСписания)="2" тогда
					тззСп.Тип=2;
                Иначе    
                    тззСп.Тип=3;
                КонецЕсли;    
			Иначе      
			    Сообщить("Для номенклатуры "+тз6.ННаименованиеИИКО+" в акте списания № "+тз6.НомерДок+" от "+тз6.Дата +" не задано количество!!!");
            КонецЕсли;
		КонецЕсли;
	КонецЦикла;    
	Если СвернутьПоДокументам=1 Тогда  
		послНомер=тззСп.Номер;
		послДата=тззСп.Дата;
		тззСп.ВыбратьСТроки();
	   	Пока тззСп.ПолучитьСтроку()=1 цикл
	  		тззСп.Номер=послНомер;
	  		тззСп.Дата=послДата;	
	  	КонецЦикла;	
	КонецЕсли;
	Если СвернутьТовары=1 Тогда
		тззСп.Свернуть("Продукт,Номер,Дата,Склад,СтатьяРасходов,Тип", "СуммаБезНДС,Количество");   
	КонецЕсли;
	СоздатьСписаниеЧерезОперацию(тззСп);
КонецПроцедуры	

Процедура ФильтрПоСкладу(ТабЗнач, названиеСклада)  
	ТабЗнач.выбратьстроки(); 
	Пока ТабЗнач.ПолучитьСтроку()=1 Цикл  
~начало:
		Стрр="";           
    	СоответствиеСкладов.НайтиЗначение(ТабЗнач.ПолучитьЗначение(ТабЗнач.НомерСтроки,названиеСклада),стрр,"Наимиико");
		Если СоответствиеСкладов.ПолучитьЗначение(стрр,5)=1 Тогда
			ТабЗнач.УдалитьСтроку(); //следующая строка стала текущей
			Если ТабЗнач.НомерСтроки<>0 Тогда
				Перейти ~начало;
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;  
КонецПроцедуры		

Процедура ПрименитьФильтры()
	Если ЗагрузитьПриходнуюНакладную=1 Тогда
		ФильтрПоСкладу(Тз, "СкладНаименование");   
	КонецЕсли
	//Если ЗагрузитьВнутренееПеремещение=1 Тогда
	//		ФильтрПоЮрЛицамПеремещение(Тз2, юл);  
	//	Иначе               
	//		; 
	//		Если ЗагрузитьАктРеализации=1 Тогда
	//			ФильтрПоЮрЛицам(Тз1, юл);   
	//		КонецЕсли;             
	//		Если ЗагрузитьАктПриготовления=1 Тогда
	//			ФильтрПоЮрЛицам(Тз3, юл);   
	//		КонецЕсли;
	//		Если ЗагрузитьРасходнуюНакладную=1 Тогда
	//			ФильтрПоЮрЛицам(Тз8, юл);   
	//		КонецЕсли;             
	//		Если ЗагрузитьАктСписания=1 Тогда
	//			ФильтрПоЮрЛицам(Тз6, юл);   
	//		КонецЕсли;             
	//		Если ЗагрузитьИнвентаризацию=1 Тогда
	//			ФильтрПоЮрЛицам(Тз7, юл);   
	//		КонецЕсли;  
	//		Если ЗагрузитьВозвратнуюНакладную=1 Тогда
	//			ФильтрПоЮрЛицам(Тз9, юл);   
	//		КонецЕсли;  
	//	КонецЕсли
КонецПроцедуры		

Процедура ПродолжитьПослеСкладов()
    незаполнен=0;
    СоответствиеСкладов.ВыбратьСТроки(); 
    нн=0;
    Пока СоответствиеСкладов.ПолучитьСтроку()=1 Цикл   
        нн=нн+1;  
		Если СоответствиеСкладов.Загружать=1 Тогда
			Продолжить;
		КонецЕсли;
        Незаполнен=ПустоеЗначение(СоответствиеСкладов.ПолучитьЗначение(нн,4)); 
    КонецЦикла;   
    Если Незаполнен=1 Тогда
        Предупреждение("Не для всех складов задано соответствие!");
        Возврат;
    КонецЕсли;  
    
    хб2=СоздатьОбъект("xbase");
    Путькфайлу=КаталогИБ()+"\sklad.dbf";
    Путькиндексу=КаталогИБ()+"\sklad.cdx";
    хб2.ОткрытьФайл(Путькфайлу,Путькиндексу);
    хб2.ДобавитьИндекс("IDXCODE","CODE",1,0,);
    хб2.Переиндексировать();        
    хб2.ТекущийИндекс("IDXCODE"); 
    
    СоответствиеСкладов.ВыбратьСТроки();    
    нн=0;
    Пока СоответствиеСкладов.ПолучитьСтроку()=1 Цикл
        нн=нн+1;  
		Если СоответствиеСкладов.Загружать=1 Тогда
			Продолжить;
		КонецЕсли;   
		Если ПустаяСтрока(СоответствиеСкладов.НаимИИКо)=1 Тогда
			продолжить;
		КонецЕсли;
        найдена = хб2.найти(СокрЛП(СоответствиеСкладов.НаимИИКо),"=");
        Если найдена=0 тогда
            хб2.добавить();
            хб2.CODE = СокрЛП(СоответствиеСкладов.НаимИИКо);
            хб2.CODES = СокрЛП(СоответствиеСкладов.Наим1с);
        Иначе
            хб2.УстановитьЗначениеПоля("CODES",СоответствиеСкладов.Наим1с);
        КонецЕсли;    
        Попытка 
            хб2.записать();
        Исключение
            Сообщить("Не удалось записать sklad.dbf "+ОписаниеОшибки());
        КонецПопытки;
	КонецЦИкла; 
	
	//ПрименитьФильтры();
	
    СписокНакладных=СоздатьОбъект("СписокЗначений");   
    //Юрлицо=ВыбратьЮрлицо();
    //Если ПустоеЗначение(Юрлицо)=0 Тогда
    //    Сформировать();
    //КонецЕсли;
    Если ЗагрузитьПриходнуюНакладную=1 Тогда
        Создатьнакладную("Н", 1);  
        Если Упрощенка=0 Тогда
            Создатьнакладную("М", 0);
        КонецЕсли;
    КонецЕсли;  
    Если ЗагрузитьВнутренееПеремещение=1 Тогда
        СоздатьПеремещение("Н");  
        Если Упрощенка=0 Тогда
            СоздатьПеремещение("М");
        КонецЕсли;
    КонецЕсли;  
    Если ЗагрузитьАктПриготовления=1 Тогда
        СоздатьПриготовления("П",Тз3);  
    КонецЕсли;  
    
    Если ЗагрузитьРасходнуюНакладную=1 Тогда
        Тзз3=СоздатьОбъект("ТаблицаЗначений");  
        Для ии=1 по УмныеИменаКолонок3.РазмерСписка() цикл
            тзз3.НоваяКолонка(УмныеИменаКолонок3.ПолучитьЗначение(ии));        
        КонецЦикла;      
        Тзз1=СоздатьОбъект("ТаблицаЗначений");
        тз8.Выгрузить(тзз1);
        тзз1.УдалитьСтроки();
        Тз8.ВыбратьСТроки();
        Пока тз8.ПолучитьСтроку()=1 цикл
            Если СокрЛП(тз8.Операция)="1" тогда  
                Если тз8.СебестоимостьбезНДС>0 Тогда
                    тзз1.НоваяСтрока();
                    тзз1.Дата= тз8.Дата;
                    тзз1.НомерДок= тз8.НомерДок;
                    тзз1.СкладКод= тз8.СкладКод;    
                    тзз1.СкладНаименование= тз8.СкладНаименование;   
                    тзз1.НКодИИКО= тз8.НКодИИКО;    
                    тзз1.ННаименованиеИИКО= тз8.ННаименованиеИИКО;    
                    тзз1.Группаучетаназвание= тз8.Группаучетаназвание;
                    тзз1.Количество= тз8.Количество;    
                    тзз1.ЦенапродажисНДС= тз8.ЦенапродажисНДС;    
                    тзз1.СуммапродажисНДС= тз8.СуммапродажисНДС;    
                    тзз1.СуммаНДСспродаж= тз8.СуммаНДСспродаж;    
                    тзз1.СтавкаНДСспродаж= тз8.СтавкаНДСспродаж;
                    тзз1.СебестоимостьзаедбезНДС= тз8.СебестоимостьзаедбезНДС;    
                    тзз1.СебестоимостьбезНДС= тз8.СебестоимостьбезНДС;    
                    тзз1.СтавкаНДС= тз8.СтавкаНДСспродаж;    
                    тзз1.Торговоепредприятиекод= тз8.Торговоепредприятиекод; 
                    тзз1.Торговоепредприятиенаименование= тз8.Торговоепредприятиенаименование; 
                    тзз1.ЮЛИНН= тз8.ЮЛИНН;
                    тзз1.ЮЛнаименование= тз8.ЮЛнаименование;
                    тзз1.Операция= тз8.Операция;
                    тзз1.Операцияназвание= тз8.Операцияназвание;
                    тзз1.Типсписания= тз8.Типсписания;
                    тзз1.Типсписанияназвание= тз8.Типсписанияназвание;
                    тзз1.Движениеденежныхсредствкод= тз8.Движениеденежныхсредствкод;
                    тзз1.Движениеденежныхсредств= тз8.Движениеденежныхсредств;
                    тзз1.Статьярасходовкод= тз8.Статьярасходовкод;
                    тзз1.Статьярасходов= тз8.Статьярасходов;
                    тзз1.КИННИИКО= тз8.КИННИИКО;
                    тзз1.ККодИИКО= тз8.ККодИИКО;
                    тзз1.КНаименованиеИИКО= тз8.КНаименованиеИИКО;    
                Иначе
                    Сообщить("Для номенклатуры "+тз8.ННаименованиеИИКО+" в расходной накладной № "+тз8.НомерДок+" от "+тз8.Дата +
                    " не задана себестоимость!!!");
                КонецЕсли;
            КонецЕсли;
            
            Если (СокрЛП(тз8.ТипСписания)="2")или(СокрЛП(тз8.Операция)="2")  тогда  
                Если тз8.Количество>0 Тогда
                    Если  (тз8.СебестоимостьзаедбезНДС)=0 тогда
                        Сообщить("Для номенклатуры "+тз8.ННаименованиеИИКО+" в расходной накладной № "+тз8.НомерДок+" от "+тз8.Дата +
                        " не задана себестоимость!!!");
                    КонецЕсли;    
                    тзз3.НоваяСтрока();
                    тзз3.Дата=тз8.Дата;
                    тзз3.НомерДок=тз8.НомерДок;
                    тзз3.Складсписаниякод=тз8.Складкод;
                    тзз3.Складсписаниянаименование=тз8.СкладНаименование;
                    тзз3.Складприходакод=тз8.Складкод;
                    тзз3.Складприходанаименование=тз8.СкладНаименование;
                    тзз3.СебестоимостьбезНДС=тз8.СебестоимостьбезНДС;
                    тзз3.СебестоимостьзаедбезНДС=тз8.СебестоимостьзаедбезНДС;
                    тзз3.СтавкаНДС=тз8.СтавкаНДС;
                    Если СокрЛП(тз8.ТипСписания)="2" тогда 
                        тзз3.Знакоперации=1;
                        тзз3.Знакоперацииназвание="Приход";
                    Иначе    
                        тзз3.Знакоперации=2;
                        тзз3.Знакоперацииназвание="Расход";
                    КонецЕсли;    
                    тзз3.НКодИИКО=тз8.НКодИИКО;
                    тзз3.ННаименованиеИИКО=тз8.ННаименованиеИИКО;
                    тзз3.Группаучетаназвание=тз8.Группаучетаназвание;
                    тзз3.Количество=тз8.Количество;
                    тзз3.Торговоепредприятиекод=тз8.Торговоепредприятиекод;
                    тзз3.Торговоепредприятиенаименование=тз8.Торговоепредприятиенаименование;
                    тзз3.ЮЛИНН=тз8.ЮЛИНН;
                    тзз3.ЮЛнаименование=тз8.ЮЛнаименование;
                Иначе
                    Сообщить("Для номенклатуры "+тз8.ННаименованиеИИКО+" в акте списания № "+тз8.НомерДок+" от "+тз8.Дата +
                    " не задано количество!!!");
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;    
        СоздатьПриготовления("Н",тзз3);
        СоздатьРнакладную("Н",тзз1);
        //Если Упрощенка=0 Тогда
        //    СоздатьРнакладную("М",тзз1);
        //КонецЕсли;
    КонецЕсли; 
    
    
    Если ЗагрузитьАктРеализации=1 Тогда        
		Если АктРеализацииОперация=1 Тогда
			ПодготовитьАктРеализацииЧерезОперацию();
		Иначе                        
			ПодготовитьАктРеализации();
		КонецЕсли;
    КонецЕсли; 
    
    Если ЗагрузитьАктСписания=1 Тогда 
		Если АктСписанияОперация=1 Тогда
			ПодготовитьАктСписанияЧерезОперацию();
		Иначе                        
			ПодготовитьАктСписания();
		КонецЕсли;	
    КонецЕсли;  
    
    Если ЗагрузитьИнвентаризацию=1 Тогда
        СоздатьИнвентаризации("И");  
    КонецЕсли; 
    
    Если ЗагрузитьВозвратнуюНакладную=1 Тогда
        СоздатьВнакладную("В");  
        Если Упрощенка=0 Тогда
            СоздатьВнакладную("О");
        КонецЕсли;
    КонецЕсли;    

    тзззз=СоздатьОбъект("ТаблицаЗначений");
    СписокНакладных.Выгрузить(тзззз);
    тзззз.Свернуть(1,);
    тзззз.Выгрузить(СписокНакладных);
    СписокНакладных.Сортировать(,1);
    Если Пров=2 Тогда
        Для ии=1 по СписокНакладных.РазмерСписка() цикл
            Попытка                
                Докк=СписокНакладных.ПолучитьЗначение(ии);
                Док=СоздатьОбъект("Документ."+Докк.Вид());
                Док.НайтиДокумент(Докк);
                Если  Докк.Вид()<>"Операция" тогда
                    Док.Провести();                   
                КонецЕсли;
                //Сообщить("Проведен "+Док.Вид()+" № "+Док.НомерДок);
            Исключение   
                Сообщить(Описаниеошибки()+" "+Док.Вид()+ " № "+Док.НомерДок);
            КонецПопытки;    
        КонецЦикла;    
    КонецЕсли;
КонецПроцедуры //ПродолжитьПослеСкладов()   
                                
//_____________________________________________________________________________
Процедура ВводНового()   
    Если ПустоеЗначение(ПутьКСерверу)=1 Тогда
        ПутьКСерверу="127.0.0.1";
    КонецЕсли;
    Если ПустоеЗначение(Порт)=1 Тогда
        Порт="8080";
    КонецЕсли;
КонецПроцедуры //ВводНового                        
                                  

//_____________________________________________________________________________
Процедура ПриКликеПН()
    //Если ПН=1 Тогда
    //    ПМ=0;
    //КонецЕсли;
КонецПроцедуры //ПриКликеПН    

Процедура ПриКликеОП()
    //Если ПМ=1 Тогда
    //    ПН=0;
    //КонецЕсли;
КонецПроцедуры //ПриКликеПН    

Процедура ЗаполнитьТипНоменклатуры()
    Список=СоздатьОбъект("СписокЗначений");     
    Список.ДобавитьЗначение("Товар"); 
    Список.ДобавитьЗначение("Материал");    
    Типп="";                   
    Если Список.ВыбратьЗначение(типп,"Выберите тип номенклатуры",,,1)=1 Тогда
        СоответствиеНоменклатуры.ВыбратьСтроки();
        Пока СоответствиеНоменклатуры.ПолучитьСтроку()=1 Цикл
            Если ПустоеЗначение(СоответствиеНоменклатуры.Тип)=1 Тогда
                СоответствиеНоменклатуры.Тип=Типп;
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТипГрупп()
    Список=СоздатьОбъект("СписокЗначений");     
    Список.ДобавитьЗначение("Товар"); 
    Список.ДобавитьЗначение("Материал");  
    Типп="";                   
    Если Список.ВыбратьЗначение(типп,"Выберите тип номенклатуры",,,1)=1 Тогда
        СоответвиеГруппНом.ВыбратьСтроки();
        Пока СоответвиеГруппНом.ПолучитьСтроку()=1 Цикл
            Если ПустоеЗначение(СоответвиеГруппНом.Тип)=1 Тогда
                СоответвиеГруппНом.Тип=Типп;
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;
КонецПроцедуры    

//_____________________________________________________________________________
Процедура Печать(Тхт)
    Таб=СоздатьОбъект("Таблица");
    Таб.ВывестиСекцию("Шапка|Номер"); 
    Если тхт="Таблица контрагентов" Тогда
        ттз=СоответствиеКотрагентов; 
        Код=8;
    Иначе
        ттз=СоответствиеНоменклатуры;
        Код=7;
    КонецЕсли;
    Для ии=1 по ттз.КоличествоКолонок()-2 цикл
        НаимКолонки="";
        ттз.ПолучитьПараметрыКолонки(ии,,,,НаимКолонки);
        Таб.ПрисоединитьСекцию("Шапка|Колонка");        
    КонецЦикла;             
    ттз.ВыбратьСТроки();         
    нн=0;
    Пока ттз.ПолучитьСтроку()=1 Цикл
        нн=нн+1;
        Таб.ВывестиСекцию("Строка|Номер"); 
        Для ии=1 по ттз.КоличествоКолонок()-2 цикл
            Колонка=ттз.ПолучитьЗначение(нн,ии);
            Таб.ПрисоединитьСекцию("Строка|Колонка");        
        КонецЦикла;             
    КонецЦикла;  
    Таб.Опции(0,0,4,0,0);
    Таб.ТолькоПросмотр(1);
    Таб.Показать(тхт);
КонецПроцедуры //Печать()                    
                    
Процедура ПриКликеСписаниеКредитСклад(текстр,ТекКол)   
	Если ТекКол="Контрагент" Тогда
		НастройкаКонтр=1;
        ОткрытьПодбор("Справочник.Контрагенты","ФормаСписка",контекст,0,СписаниеКредитСклад.ПолучитьЗначение(текстр,2));//5
	КонецЕсли;
	Если ТекКол="Счет" Тогда
		НастройкаКонтр=1;
        ОткрытьПодбор("ПланСчетов","ФормаСписка",контекст,0,СписаниеКредитСклад.ПолучитьЗначение(текстр,3));//6
	КонецЕсли;
КонецПроцедуры

//_____________________________________________________________________________
